
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
286.8528FALSE
345.7768FALSE
341.0503FALSE
286.8462FALSE
345.7883FALSE
341.0565FALSE
286.8593FALSE
345.7654FALSE
341.0441FALSE
282.5778FALSE
341.9578FALSE
343.872FALSE
282.5858FALSE
341.9575FALSE
282.5698FALSE
343.8648FALSE
341.9582FALSE
284.0345FALSE
343.8793FALSE
284.0287FALSE
341.9398FALSE
340.9225FALSE
341.939FALSE
284.0404FALSE
340.9193FALSE
341.9405FALSE
383.8656FALSE
340.9257FALSE
341.9262FALSE
340.6154FALSE
383.8644FALSE
341.9267FALSE
340.6122FALSE
283.3302FALSE
340.6186FALSE
341.9256FALSE
283.3244FALSE
342.7555FALSE
341.8978FALSE
283.3359FALSE
341.897FALSE
342.7669FALSE
377.9914FALSE
342.7441FALSE
378.0041FALSE
341.8985FALSE
340.5415FALSE
377.9787FALSE
341.9146FALSE
340.5409FALSE
283.0088FALSE
341.9152FALSE
340.5422FALSE
283.0035FALSE
341.914FALSE
283.0142FALSE
340.615FALSE
341.8964FALSE
299.5395FALSE
340.6186FALSE
341.8972FALSE
299.6134FALSE
340.6115FALSE
341.8955FALSE
299.4656FALSE
340.5397FALSE
341.8964FALSE
282.3974FALSE
340.5391FALSE
341.8972FALSE
282.3943FALSE
340.5404FALSE
341.8955FALSE
282.4006FALSE
340.5383FALSE
341.9379FALSE
285.8968FALSE
340.5377FALSE
341.9371FALSE
285.9294FALSE
340.539FALSE
341.9387FALSE
285.8643FALSE
340.5691FALSE
341.9055FALSE
282.1848FALSE
340.5721FALSE
341.9047FALSE
282.1833FALSE
340.5661FALSE
341.9063FALSE
282.1864FALSE
341.896FALSE
340.5376FALSE
282.2849FALSE
341.8953FALSE
282.2878FALSE
340.537FALSE
341.8967FALSE
282.2821FALSE
340.5383FALSE
341.8952FALSE
282.1749FALSE
340.537FALSE
341.8961FALSE
282.1753FALSE
340.5364FALSE
282.1745FALSE
341.8959FALSE
340.5377FALSE
282.1737FALSE
341.8952FALSE
340.5501FALSE
282.1741FALSE
341.896FALSE
340.5531FALSE
282.1735FALSE
341.896FALSE
340.5471FALSE
282.1866FALSE
341.8952FALSE
340.5367FALSE
282.185FALSE
341.896FALSE
282.1882FALSE
340.5367FALSE
341.896FALSE
282.1737FALSE
340.5374FALSE
341.8952FALSE
282.1736FALSE
340.5529FALSE
341.896FALSE
282.1741FALSE
340.5559FALSE
341.896FALSE
$par
smooth_log_cases_lag1.bw 
               -3.192905 

$value
[1] 341.8952

$counts
function gradient 
      15       15 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

282.1735FALSE
340.5499FALSE
282.1738FALSE
340.5366FALSE
282.1738FALSE
340.5372FALSE
282.1735FALSE
340.5372FALSE
282.1738FALSE
340.5366FALSE
282.1738FALSE
340.5372FALSE
282.1735FALSE
340.5372FALSE
$par
smooth_log_cases_lag0.bw 
               -2.420107 

$value
[1] 340.5366

$counts
function gradient 
      17       17 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1737FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
$par
time_ind_lag0.bw 
       -1.430449 

$value
[1] 282.1735

$counts
function gradient 
      57       57 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

293.1035FALSE
291.9386FALSE
291.9309FALSE
293.0935FALSE
291.9462FALSE
293.1136FALSE
293.1047FALSE
291.9378FALSE
293.1023FALSE
291.9394FALSE
288.3146FALSE
287.4202FALSE
288.3077FALSE
287.4148FALSE
288.3215FALSE
287.4255FALSE
288.3085FALSE
287.4207FALSE
288.3207FALSE
287.4196FALSE
300.2617FALSE
286.7202FALSE
300.2617FALSE
286.7201FALSE
300.2617FALSE
286.7203FALSE
300.338FALSE
286.7136FALSE
300.1855FALSE
286.7267FALSE
283.2309FALSE
283.4514FALSE
283.2296FALSE
283.4513FALSE
283.2323FALSE
283.4514FALSE
283.2363FALSE
283.4681FALSE
283.435FALSE
283.2258FALSE
284.8458FALSE
282.6368FALSE
284.8457FALSE
282.6359FALSE
284.8459FALSE
282.6376FALSE
284.8396FALSE
282.6349FALSE
284.852FALSE
282.6386FALSE
282.2665FALSE
282.4406FALSE
282.2664FALSE
282.4401FALSE
282.2665FALSE
282.4411FALSE
282.2641FALSE
282.4395FALSE
282.2688FALSE
282.4418FALSE
289.9635FALSE
282.2984FALSE
289.9635FALSE
282.2981FALSE
289.9635FALSE
282.2986FALSE
290.0126FALSE
282.2987FALSE
289.9146FALSE
282.298FALSE
282.1935FALSE
282.2351FALSE
282.1935FALSE
282.235FALSE
282.1935FALSE
282.2352FALSE
282.1928FALSE
282.2354FALSE
282.1942FALSE
282.2348FALSE
282.1939FALSE
282.2079FALSE
282.1938FALSE
282.1939FALSE
282.2078FALSE
282.1943FALSE
282.208FALSE
282.1934FALSE
282.2069FALSE
282.1908FALSE
282.2091FALSE
282.1908FALSE
282.1884FALSE
282.1883FALSE
282.1908FALSE
282.1911FALSE
282.1884FALSE
282.1887FALSE
282.1905FALSE
282.1886FALSE
282.1903FALSE
282.1818FALSE
282.1902FALSE
282.1817FALSE
282.1903FALSE
282.1818FALSE
282.1901FALSE
282.1821FALSE
282.1907FALSE
282.1814FALSE
282.189FALSE
282.178FALSE
282.189FALSE
282.178FALSE
282.189FALSE
282.178FALSE
282.1888FALSE
282.1775FALSE
282.1894FALSE
282.1786FALSE
282.1848FALSE
282.1756FALSE
282.1848FALSE
282.1848FALSE
282.1756FALSE
282.1848FALSE
282.1756FALSE
282.1852FALSE
282.1755FALSE
282.1784FALSE
282.176FALSE
282.1784FALSE
282.1749FALSE
282.1784FALSE
282.1749FALSE
282.1787FALSE
282.1749FALSE
282.1788FALSE
282.1752FALSE
282.176FALSE
282.1745FALSE
282.176FALSE
282.1743FALSE
282.176FALSE
282.1743FALSE
282.1764FALSE
282.1743FALSE
282.1764FALSE
282.1746FALSE
282.1747FALSE
282.1742FALSE
282.1747FALSE
282.174FALSE
282.1747FALSE
282.174FALSE
282.1751FALSE
282.174FALSE
282.1751FALSE
282.1738FALSE
282.1741FALSE
282.1744FALSE
282.1741FALSE
282.1737FALSE
282.1741FALSE
282.1737FALSE
282.1744FALSE
282.1737FALSE
282.1744FALSE
282.1739FALSE
282.1776FALSE
282.1741FALSE
282.1736FALSE
282.1776FALSE
282.1736FALSE
282.1776FALSE
282.1736FALSE
282.178FALSE
282.1739FALSE
282.1771FALSE
282.1739FALSE
282.1742FALSE
282.1736FALSE
282.1742FALSE
282.1736FALSE
282.1742FALSE
282.1736FALSE
282.1745FALSE
282.1743FALSE
282.1739FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1736FALSE
282.1736FALSE
282.1741FALSE
282.1744FALSE
282.1736FALSE
282.1744FALSE
282.1737FALSE
282.1741FALSE
282.174FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1735FALSE
282.1744FALSE
282.1735FALSE
282.1744FALSE
282.1738FALSE
282.1741FALSE
282.1739FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1735FALSE
282.1744FALSE
282.1735FALSE
282.1744FALSE
282.1738FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1736FALSE
282.1741FALSE
282.1736FALSE
282.1744FALSE
282.1736FALSE
282.1744FALSE
282.1739FALSE
282.1741FALSE
282.1737FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1735FALSE
282.1744FALSE
282.1735FALSE
282.1744FALSE
282.1738FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1735FALSE
282.1735FALSE
282.1741FALSE
282.1744FALSE
282.1735FALSE
282.1744FALSE
282.1738FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1735FALSE
282.1744FALSE
282.1735FALSE
282.1738FALSE
282.1744FALSE
282.1738FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1735FALSE
282.1744FALSE
282.1738FALSE
282.1744FALSE
282.1738FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1744FALSE
282.1735FALSE
282.1744FALSE
282.1738FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1735FALSE
282.1744FALSE
282.1735FALSE
282.1744FALSE
282.1738FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1735FALSE
282.1744FALSE
282.1744FALSE
282.1735FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1735FALSE
282.1744FALSE
282.1744FALSE
282.1735FALSE
282.1735FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1735FALSE
282.1744FALSE
282.1744FALSE
282.1735FALSE
282.1741FALSE
282.1735FALSE
282.1741FALSE
282.1738FALSE
282.1741FALSE
282.1738FALSE
282.1744FALSE
282.1735FALSE
282.1744FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                3.511063                -1.430449 

$value
[1] 282.1741

$counts
function gradient 
      33       33 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

282.1735FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1735FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1735FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1735FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1735FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1735FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1735FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
282.1735FALSE
282.1735FALSE
282.1735FALSE
282.1738FALSE
282.1738FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.194102                -1.430503 

$value
[1] 282.1735

$counts
function gradient 
      40       40 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
997.369   0.750 859.191 
