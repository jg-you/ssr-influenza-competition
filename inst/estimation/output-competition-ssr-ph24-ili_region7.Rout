
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
567.9556FALSE
565.862FALSE
460.6835FALSE
567.9419FALSE
565.8485FALSE
460.6779FALSE
567.9692FALSE
565.8754FALSE
460.6891FALSE
565.678FALSE
562.0287FALSE
461.031FALSE
565.7002FALSE
461.0537FALSE
565.6557FALSE
562.0545FALSE
461.0083FALSE
563.2497FALSE
562.0029FALSE
563.2409FALSE
458.2502FALSE
560.7944FALSE
458.2477FALSE
563.2585FALSE
560.7816FALSE
458.2526FALSE
567.3537FALSE
460.147FALSE
567.3802FALSE
560.8072FALSE
460.1645FALSE
567.3272FALSE
558.053FALSE
460.1295FALSE
562.004FALSE
558.054FALSE
562.0036FALSE
458.1446FALSE
558.0521FALSE
562.0045FALSE
458.1449FALSE
558.0659FALSE
562.0011FALSE
458.1443FALSE
562.0011FALSE
558.0649FALSE
562.001FALSE
458.1415FALSE
558.0673FALSE
458.1416FALSE
562.001FALSE
558.0475FALSE
562.0011FALSE
458.1414FALSE
562.001FALSE
458.14FALSE
558.0473FALSE
562.001FALSE
458.1402FALSE
558.0477FALSE
562.001FALSE
558.0469FALSE
458.1397FALSE
562.001FALSE
558.047FALSE
458.1525FALSE
562.001FALSE
558.0471FALSE
458.1502FALSE
562.001FALSE
558.047FALSE
458.1548FALSE
562.001FALSE
$par
smooth_log_cases_lag0.bw 
               -1.685185 

$value
[1] 562.001

$counts
function gradient 
       9        9 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

558.0473FALSE
458.1365FALSE
458.1369FALSE
558.0469FALSE
558.0469FALSE
458.1361FALSE
558.047FALSE
458.1343FALSE
558.047FALSE
458.1348FALSE
558.0469FALSE
458.1339FALSE
558.047FALSE
458.1334FALSE
558.047FALSE
458.1338FALSE
558.0469FALSE
458.1329FALSE
558.047FALSE
458.1364FALSE
558.047FALSE
458.135FALSE
558.0469FALSE
458.1378FALSE
558.047FALSE
458.1329FALSE
558.047FALSE
458.1329FALSE
558.0469FALSE
458.1333FALSE
558.047FALSE
458.1329FALSE
558.047FALSE
458.1329FALSE
558.0469FALSE
458.1333FALSE
558.047FALSE
458.1395FALSE
558.047FALSE
458.1397FALSE
558.0469FALSE
458.1392FALSE
558.047FALSE
458.1333FALSE
558.047FALSE
458.1338FALSE
558.0469FALSE
558.047FALSE
458.1328FALSE
558.047FALSE
458.1328FALSE
558.0469FALSE
458.1331FALSE
558.047FALSE
458.1332FALSE
558.047FALSE
458.1327FALSE
558.0469FALSE
458.1331FALSE
558.047FALSE
458.1331FALSE
558.047FALSE
458.1327FALSE
558.0469FALSE
458.1331FALSE
558.047FALSE
458.1331FALSE
558.047FALSE
458.1327FALSE
558.0469FALSE
458.1331FALSE
558.047FALSE
458.1331FALSE
558.047FALSE
458.1327FALSE
558.0469FALSE
458.1331FALSE
558.047FALSE
458.1331FALSE
558.047FALSE
458.1327FALSE
558.0469FALSE
458.1331FALSE
558.047FALSE
458.1331FALSE
558.047FALSE
458.1327FALSE
558.0469FALSE
558.047FALSE
458.1331FALSE
558.047FALSE
458.1331FALSE
558.0469FALSE
458.1327FALSE
558.047FALSE
558.047FALSE
458.1331FALSE
558.0469FALSE
458.1331FALSE
558.047FALSE
458.1327FALSE
558.047FALSE
$par
smooth_log_cases_lag1.bw 
               -1.636318 

$value
[1] 558.0469

$counts
function gradient 
      25       25 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

458.1331FALSE
458.1331FALSE
458.1327FALSE
458.1331FALSE
458.1331FALSE
$par
time_ind_lag0.bw 
       -1.699699 

$value
[1] 458.1327

$counts
function gradient 
      26       26 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

511.2142FALSE
508.859FALSE
511.1832FALSE
508.8221FALSE
511.2452FALSE
508.8959FALSE
511.2347FALSE
508.8869FALSE
511.1937FALSE
508.8311FALSE
479.724FALSE
478.712FALSE
479.6989FALSE
478.6867FALSE
478.7373FALSE
479.749FALSE
478.7144FALSE
479.7251FALSE
478.7096FALSE
479.7228FALSE
462.3171FALSE
463.0021FALSE
462.9995FALSE
462.3167FALSE
463.0046FALSE
462.3175FALSE
462.997FALSE
462.312FALSE
463.0071FALSE
462.3221FALSE
461.7389FALSE
461.2008FALSE
461.737FALSE
461.2005FALSE
461.7408FALSE
461.2012FALSE
461.7332FALSE
461.1949FALSE
461.7446FALSE
461.2067FALSE
458.3787FALSE
458.4769FALSE
458.3782FALSE
458.3791FALSE
458.4766FALSE
458.379FALSE
458.4772FALSE
458.3784FALSE
458.4797FALSE
458.3553FALSE
458.4741FALSE
458.3549FALSE
458.8878FALSE
458.3557FALSE
458.8875FALSE
458.3556FALSE
458.8882FALSE
458.3549FALSE
458.8826FALSE
458.8931FALSE
458.2346FALSE
458.2825FALSE
458.2344FALSE
458.2822FALSE
458.2348FALSE
458.2828FALSE
458.2829FALSE
458.2349FALSE
458.2821FALSE
458.2343FALSE
458.2648FALSE
458.1805FALSE
458.2646FALSE
458.1804FALSE
458.1806FALSE
458.2651FALSE
458.1809FALSE
458.2653FALSE
458.1801FALSE
458.2643FALSE
458.8381FALSE
458.4024FALSE
458.838FALSE
458.4022FALSE
458.8381FALSE
458.4026FALSE
458.8329FALSE
458.4002FALSE
458.8431FALSE
458.4046FALSE
458.1808FALSE
458.2689FALSE
458.2686FALSE
458.1808FALSE
458.2692FALSE
458.1809FALSE
458.2675FALSE
458.2703FALSE
458.1785FALSE
458.2632FALSE
458.1831FALSE
458.263FALSE
458.173FALSE
458.2635FALSE
458.1729FALSE
458.2632FALSE
458.1731FALSE
458.2637FALSE
458.1735FALSE
458.25FALSE
458.1724FALSE
458.2498FALSE
458.1722FALSE
458.2503FALSE
458.1721FALSE
458.2495FALSE
458.1723FALSE
458.2506FALSE
458.1723FALSE
458.1673FALSE
458.1728FALSE
458.1673FALSE
458.1586FALSE
458.1674FALSE
458.1586FALSE
458.1677FALSE
458.1587FALSE
458.167FALSE
458.1585FALSE
458.1618FALSE
458.16FALSE
458.1618FALSE
458.1451FALSE
458.1619FALSE
458.145FALSE
458.1622FALSE
458.1451FALSE
458.1615FALSE
458.1453FALSE
458.1484FALSE
458.1448FALSE
458.1484FALSE
458.1441FALSE
458.1485FALSE
458.1441FALSE
458.1486FALSE
458.1442FALSE
458.1483FALSE
458.1444FALSE
458.1439FALSE
458.1439FALSE
458.1439FALSE
458.1373FALSE
458.1439FALSE
458.1373FALSE
458.1441FALSE
458.1373FALSE
458.1436FALSE
458.1377FALSE
458.1833FALSE
458.1369FALSE
458.2138FALSE
458.1833FALSE
458.2138FALSE
458.1833FALSE
458.2138FALSE
458.1812FALSE
458.2119FALSE
458.1854FALSE
458.2157FALSE
458.1405FALSE
458.1355FALSE
458.1404FALSE
458.1355FALSE
458.1405FALSE
458.1355FALSE
458.1408FALSE
458.136FALSE
458.1401FALSE
458.1351FALSE
458.1383FALSE
458.134FALSE
458.1383FALSE
458.134FALSE
458.1383FALSE
458.134FALSE
458.1387FALSE
458.1379FALSE
458.1344FALSE
458.1443FALSE
458.1335FALSE
458.1443FALSE
458.169FALSE
458.1443FALSE
458.169FALSE
458.142FALSE
458.169FALSE
458.1467FALSE
458.1668FALSE
458.1348FALSE
458.1348FALSE
458.1712FALSE
458.1348FALSE
458.1334FALSE
458.1353FALSE
458.1334FALSE
458.1343FALSE
458.1334FALSE
458.1341FALSE
458.1336FALSE
458.1341FALSE
458.1338FALSE
458.1341FALSE
458.1342FALSE
458.1336FALSE
458.1345FALSE
458.1336FALSE
458.1365FALSE
458.1336FALSE
458.1365FALSE
458.1341FALSE
458.1365FALSE
458.1334FALSE
458.1369FALSE
458.1333FALSE
458.1361FALSE
458.1333FALSE
458.1339FALSE
458.1333FALSE
458.1339FALSE
458.1336FALSE
458.1339FALSE
458.1337FALSE
458.1344FALSE
458.1332FALSE
458.1343FALSE
458.1332FALSE
458.1338FALSE
458.1332FALSE
458.1338FALSE
458.1336FALSE
458.1338FALSE
458.1336FALSE
458.1342FALSE
458.133FALSE
458.1342FALSE
458.133FALSE
458.1332FALSE
458.133FALSE
458.1332FALSE
458.1335FALSE
458.1332FALSE
458.1333FALSE
458.1335FALSE
458.1329FALSE
458.1336FALSE
458.1329FALSE
458.133FALSE
458.133FALSE
458.1329FALSE
458.133FALSE
458.1333FALSE
458.1333FALSE
458.1332FALSE
458.1334FALSE
458.1328FALSE
458.1328FALSE
458.1328FALSE
458.1328FALSE
458.1328FALSE
458.1328FALSE
458.1332FALSE
458.1333FALSE
458.1332FALSE
458.1332FALSE
458.1327FALSE
458.1328FALSE
458.1327FALSE
458.1328FALSE
458.1327FALSE
458.1328FALSE
458.1332FALSE
458.1331FALSE
458.1332FALSE
458.1332FALSE
458.756FALSE
458.1328FALSE
458.756FALSE
458.1328FALSE
458.756FALSE
458.1328FALSE
458.1333FALSE
458.7508FALSE
458.133FALSE
458.7613FALSE
458.1327FALSE
458.133FALSE
458.1327FALSE
458.133FALSE
458.1327FALSE
458.133FALSE
458.1332FALSE
458.1329FALSE
458.1331FALSE
458.1334FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1332FALSE
458.1331FALSE
458.1332FALSE
458.1329FALSE
458.1327FALSE
458.1329FALSE
458.1327FALSE
458.1329FALSE
458.1327FALSE
458.1329FALSE
458.1332FALSE
458.1333FALSE
458.1332FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1332FALSE
458.1331FALSE
458.1332FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1327FALSE
458.1331FALSE
458.1332FALSE
458.1327FALSE
458.1332FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1332FALSE
458.1331FALSE
458.1332FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1331FALSE
458.1332FALSE
458.1327FALSE
458.1332FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1327FALSE
458.1331FALSE
458.1327FALSE
458.1332FALSE
458.1327FALSE
458.1332FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1327FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1332FALSE
458.1327FALSE
458.1332FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1327FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1332FALSE
458.1327FALSE
458.1332FALSE
458.1331FALSE
458.1327FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1332FALSE
458.1327FALSE
458.1332FALSE
458.1331FALSE
458.1327FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1332FALSE
458.1331FALSE
458.1332FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1332FALSE
458.1331FALSE
458.1332FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1332FALSE
458.1332FALSE
458.1331FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1332FALSE
458.1331FALSE
458.1332FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1332FALSE
458.1331FALSE
458.1332FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1332FALSE
458.1331FALSE
458.1332FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1332FALSE
458.1331FALSE
458.1327FALSE
458.1332FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.064043                -1.699654 

$value
[1] 458.1327

$counts
function gradient 
      48       48 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1331FALSE
458.1327FALSE
458.1327FALSE
458.1327FALSE
458.1331FALSE
458.1331FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                5.768123                -1.699681 

$value
[1] 458.1327

$counts
function gradient 
      51       51 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1109.016    1.632  944.229 
