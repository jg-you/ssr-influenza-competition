
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
620.7487FALSE
464.6916FALSE
627.3721FALSE
627.3696FALSE
464.686FALSE
620.7484FALSE
627.3747FALSE
464.6972FALSE
620.749FALSE
635.6985FALSE
465.37FALSE
628.1701FALSE
465.3948FALSE
635.714FALSE
628.1844FALSE
465.3454FALSE
628.1557FALSE
635.683FALSE
462.5488FALSE
620.746FALSE
462.5473FALSE
627.5174FALSE
620.746FALSE
627.5202FALSE
462.551FALSE
620.746FALSE
462.6808FALSE
627.5147FALSE
620.746FALSE
462.6847FALSE
620.746FALSE
627.3621FALSE
462.6774FALSE
627.3634FALSE
620.746FALSE
462.5005FALSE
627.3608FALSE
620.746FALSE
462.5009FALSE
627.3609FALSE
620.746FALSE
462.5001FALSE
627.3605FALSE
620.746FALSE
$par
smooth_log_cases_lag1.bw 
                -2.28462 

$value
[1] 620.746

$counts
function gradient 
       5        5 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

462.5085FALSE
627.3612FALSE
462.5078FALSE
627.3604FALSE
462.5093FALSE
627.3602FALSE
462.4992FALSE
627.3608FALSE
462.4996FALSE
627.3622FALSE
462.4989FALSE
627.3635FALSE
462.499FALSE
627.3609FALSE
462.4981FALSE
627.36FALSE
462.4999FALSE
627.3598FALSE
627.3603FALSE
462.4988FALSE
627.3787FALSE
462.4991FALSE
627.3805FALSE
462.4985FALSE
627.377FALSE
462.5072FALSE
627.3598FALSE
462.5065FALSE
627.3598FALSE
462.508FALSE
627.3601FALSE
462.4984FALSE
627.3599FALSE
462.4987FALSE
627.3612FALSE
462.4981FALSE
627.3598FALSE
462.4981FALSE
627.3597FALSE
462.4985FALSE
627.3604FALSE
462.4989FALSE
627.36FALSE
462.4984FALSE
627.3598FALSE
462.4987FALSE
627.36FALSE
462.4981FALSE
627.36FALSE
462.4982FALSE
627.3598FALSE
462.4985FALSE
627.36FALSE
627.36FALSE
$par
smooth_log_cases_lag0.bw 
               -2.286543 

$value
[1] 627.3598

$counts
function gradient 
      14       14 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

462.4988FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
463.2584FALSE
463.2679FALSE
463.249FALSE
462.5071FALSE
462.5075FALSE
462.5068FALSE
462.4988FALSE
462.4991FALSE
462.4985FALSE
462.4982FALSE
462.4985FALSE
462.4987FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
462.4981FALSE
462.4985FALSE
462.4989FALSE
$par
time_ind_lag0.bw 
       -1.677189 

$value
[1] 462.4981

$counts
function gradient 
      52       52 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

490.9839FALSE
497.9772FALSE
490.9815FALSE
497.9776FALSE
490.9862FALSE
497.9766FALSE
490.9982FALSE
497.992FALSE
497.9623FALSE
490.9696FALSE
495.7018FALSE
492.1607FALSE
495.7174FALSE
492.1845FALSE
495.6857FALSE
492.1366FALSE
495.6868FALSE
492.1301FALSE
495.7164FALSE
492.1911FALSE
495.8802FALSE
489.0786FALSE
495.8756FALSE
489.0887FALSE
495.8854FALSE
489.0685FALSE
495.8877FALSE
495.8728FALSE
489.0757FALSE
498.6418FALSE
489.0815FALSE
498.6362FALSE
489.1465FALSE
498.647FALSE
489.1419FALSE
498.6291FALSE
489.1508FALSE
498.6543FALSE
489.147FALSE
495.4408FALSE
489.1458FALSE
495.42FALSE
488.6315FALSE
495.4612FALSE
488.6341FALSE
495.4623FALSE
495.419FALSE
488.6289FALSE
494.676FALSE
488.6328FALSE
494.6876FALSE
488.6302FALSE
494.6645FALSE
488.3411FALSE
494.6623FALSE
488.3438FALSE
494.6899FALSE
488.3384FALSE
495.799FALSE
488.3438FALSE
488.3383FALSE
495.7945FALSE
489.7446FALSE
495.8031FALSE
495.8008FALSE
489.7071FALSE
495.7969FALSE
489.7817FALSE
495.3734FALSE
489.7629FALSE
495.3777FALSE
489.726FALSE
495.369FALSE
488.1081FALSE
495.3557FALSE
488.1038FALSE
495.3911FALSE
488.1124FALSE
494.8202FALSE
488.111FALSE
494.8313FALSE
488.1051FALSE
494.8097FALSE
488.1263FALSE
494.8061FALSE
488.1316FALSE
494.8344FALSE
488.1212FALSE
494.584FALSE
488.123FALSE
494.5936FALSE
488.1302FALSE
494.5745FALSE
488.0829FALSE
494.572FALSE
488.0816FALSE
494.5962FALSE
488.0843FALSE
494.8233FALSE
488.0828FALSE
494.7947FALSE
488.083FALSE
494.8514FALSE
488.2199FALSE
494.8461FALSE
488.2239FALSE
494.8001FALSE
488.216FALSE
494.4649FALSE
488.2209FALSE
494.4726FALSE
488.219FALSE
494.4573FALSE
488.0799FALSE
494.4554FALSE
494.4746FALSE
488.0821FALSE
494.5838FALSE
488.0796FALSE
494.5518FALSE
488.0796FALSE
494.6155FALSE
488.0808FALSE
494.6099FALSE
488.0795FALSE
488.0799FALSE
494.5574FALSE
488.08FALSE
494.4238FALSE
488.0797FALSE
494.4305FALSE
488.0794FALSE
488.0793FALSE
494.4172FALSE
488.0797FALSE
494.4155FALSE
488.08FALSE
488.0795FALSE
494.4323FALSE
488.0796FALSE
488.0794FALSE
494.4649FALSE
488.08FALSE
494.4313FALSE
488.0798FALSE
494.4981FALSE
488.0796FALSE
494.4924FALSE
488.0794FALSE
494.437FALSE
488.0794FALSE
494.4238FALSE
488.0797FALSE
494.4305FALSE
488.08FALSE
494.4172FALSE
488.0795FALSE
494.4155FALSE
488.0796FALSE
488.0793FALSE
494.4323FALSE
488.0797FALSE
495.5162FALSE
488.08FALSE
495.5019FALSE
488.0795FALSE
495.5303FALSE
488.0796FALSE
495.5261FALSE
488.0793FALSE
495.5065FALSE
488.0797FALSE
494.3876FALSE
488.08FALSE
494.3932FALSE
488.0795FALSE
494.3976FALSE
488.0796FALSE
494.3917FALSE
488.0793FALSE
494.395FALSE
494.5682FALSE
488.0797FALSE
488.08FALSE
494.5406FALSE
488.0795FALSE
494.5955FALSE
488.0796FALSE
494.5922FALSE
488.0793FALSE
494.5439FALSE
488.0797FALSE
494.3902FALSE
488.08FALSE
494.3654FALSE
488.0795FALSE
494.4237FALSE
488.0796FALSE
494.4181FALSE
488.0793FALSE
494.367FALSE
488.0797FALSE
494.3753FALSE
488.08FALSE
494.3801FALSE
488.0795FALSE
494.4093FALSE
488.0796FALSE
494.4037FALSE
494.3817FALSE
488.0793FALSE
488.0797FALSE
494.3506FALSE
494.3573FALSE
488.08FALSE
494.3441FALSE
488.0795FALSE
494.345FALSE
488.0796FALSE
494.3565FALSE
488.0793FALSE
494.3447FALSE
488.0797FALSE
494.3516FALSE
488.08FALSE
494.338FALSE
488.0795FALSE
494.3392FALSE
488.0796FALSE
494.3504FALSE
488.0793FALSE
494.3851FALSE
488.0797FALSE
494.3685FALSE
488.08FALSE
494.4187FALSE
488.0795FALSE
494.4132FALSE
488.0796FALSE
488.0793FALSE
494.37FALSE
488.0797FALSE
494.3427FALSE
488.08FALSE
494.3478FALSE
488.0795FALSE
494.3383FALSE
488.0796FALSE
494.3359FALSE
488.0793FALSE
494.3498FALSE
488.0797FALSE
494.3427FALSE
488.08FALSE
494.3496FALSE
488.0795FALSE
494.3361FALSE
488.0796FALSE
494.3372FALSE
488.0793FALSE
494.3484FALSE
488.0797FALSE
494.3416FALSE
488.08FALSE
488.0795FALSE
494.3485FALSE
488.0796FALSE
494.337FALSE
488.0793FALSE
494.3361FALSE
488.0797FALSE
494.3486FALSE
488.08FALSE
494.3366FALSE
488.0795FALSE
494.3434FALSE
488.0796FALSE
494.3314FALSE
488.0793FALSE
494.3313FALSE
488.0797FALSE
488.08FALSE
494.3425FALSE
488.0795FALSE
494.3956FALSE
488.0796FALSE
494.3642FALSE
488.0793FALSE
494.4275FALSE
488.0797FALSE
494.4234FALSE
488.08FALSE
488.0795FALSE
494.3673FALSE
488.0796FALSE
494.3348FALSE
488.0793FALSE
494.3416FALSE
488.0797FALSE
494.3349FALSE
488.08FALSE
494.331FALSE
488.0795FALSE
488.0796FALSE
494.3403FALSE
488.0793FALSE
494.5589FALSE
488.0797FALSE
494.53FALSE
488.08FALSE
494.5875FALSE
488.0795FALSE
494.5837FALSE
488.0796FALSE
488.0793FALSE
494.5338FALSE
488.0797FALSE
494.3322FALSE
488.08FALSE
494.3387FALSE
488.0795FALSE
494.3523FALSE
488.0796FALSE
494.3494FALSE
488.0793FALSE
494.3375FALSE
488.0797FALSE
494.336FALSE
488.08FALSE
494.3425FALSE
488.0795FALSE
494.3367FALSE
488.0796FALSE
494.3337FALSE
489.4852FALSE
489.4964FALSE
494.3414FALSE
489.4739FALSE
494.3326FALSE
489.4803FALSE
494.3391FALSE
489.49FALSE
494.3506FALSE
488.0797FALSE
494.3477FALSE
488.0816FALSE
494.3379FALSE
488.0794FALSE
494.3322FALSE
488.0797FALSE
494.3387FALSE
488.0798FALSE
494.3521FALSE
488.0794FALSE
494.3493FALSE
494.3375FALSE
488.08FALSE
488.0797FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
494.3387FALSE
488.0795FALSE
494.3523FALSE
488.0796FALSE
494.3494FALSE
488.0793FALSE
494.3375FALSE
488.0797FALSE
494.3322FALSE
488.08FALSE
494.3387FALSE
488.0795FALSE
494.3523FALSE
488.0796FALSE
488.0793FALSE
494.3494FALSE
494.3375FALSE
488.0797FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
494.3322FALSE
488.08FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
488.0793FALSE
494.3494FALSE
488.0797FALSE
494.3375FALSE
488.08FALSE
494.3322FALSE
488.0795FALSE
494.3387FALSE
488.0796FALSE
494.3523FALSE
494.3494FALSE
488.0793FALSE
488.0797FALSE
494.3375FALSE
494.3322FALSE
488.08FALSE
494.3387FALSE
488.0795FALSE
494.3523FALSE
488.0796FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                -2.38667                 -2.31642 

$value
[1] 488.0793

$counts
function gradient 
      52       52 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

494.3494FALSE
494.3375FALSE
494.3322FALSE
494.3387FALSE
494.3523FALSE
494.3494FALSE
494.3375FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
               -2.069969                -2.530971 

$value
[1] 494.3322

$counts
function gradient 
      52       52 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1169.518    0.983 1099.760 
