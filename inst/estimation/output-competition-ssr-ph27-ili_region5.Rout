
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
392.9404FALSE
355.129FALSE
388.4592FALSE
392.9415FALSE
388.4618FALSE
392.9394FALSE
355.1196FALSE
388.4567FALSE
416.8902FALSE
355.1384FALSE
412.0174FALSE
353.5734FALSE
416.8612FALSE
411.9846FALSE
353.6008FALSE
416.9191FALSE
412.0501FALSE
353.5462FALSE
392.9302FALSE
388.4305FALSE
352.9168FALSE
392.9304FALSE
388.4307FALSE
352.9083FALSE
392.93FALSE
388.4303FALSE
352.9252FALSE
392.9296FALSE
388.43FALSE
505.0886FALSE
392.9297FALSE
388.4302FALSE
505.1374FALSE
392.9294FALSE
388.4298FALSE
505.0399FALSE
392.9297FALSE
352.4334FALSE
388.4293FALSE
392.9296FALSE
388.4293FALSE
352.4247FALSE
392.9301FALSE
388.4293FALSE
352.4421FALSE
392.9293FALSE
352.0195FALSE
392.9294FALSE
388.4293FALSE
352.0123FALSE
392.9294FALSE
388.4293FALSE
392.9293FALSE
352.0267FALSE
388.4293FALSE
$par
smooth_log_cases_lag0.bw 
               -2.344099 

$value
[1] 388.4293

$counts
function gradient 
       6        6 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

392.9294FALSE
353.4194FALSE
392.9294FALSE
353.4463FALSE
392.9293FALSE
353.3925FALSE
392.9294FALSE
350.3185FALSE
392.9294FALSE
350.317FALSE
350.3202FALSE
392.9293FALSE
350.249FALSE
392.9294FALSE
350.2495FALSE
392.9294FALSE
350.2485FALSE
392.9293FALSE
350.2464FALSE
392.9294FALSE
350.2457FALSE
392.9294FALSE
350.2472FALSE
392.9293FALSE
350.2457FALSE
392.9294FALSE
350.2461FALSE
392.9294FALSE
350.2453FALSE
392.9293FALSE
350.2661FALSE
392.9294FALSE
350.265FALSE
392.9294FALSE
350.2672FALSE
392.9293FALSE
350.2438FALSE
392.9294FALSE
350.2442FALSE
392.9294FALSE
350.2436FALSE
392.9293FALSE
350.2494FALSE
392.9294FALSE
350.2487FALSE
392.9294FALSE
350.2502FALSE
350.2436FALSE
392.9293FALSE
350.2438FALSE
392.9294FALSE
350.2435FALSE
392.9294FALSE
350.2436FALSE
392.9293FALSE
350.2435FALSE
392.9294FALSE
392.9294FALSE
350.244FALSE
392.9293FALSE
350.2434FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
392.9293FALSE
350.2435FALSE
392.9294FALSE
350.2437FALSE
350.2437FALSE
392.9294FALSE
350.2434FALSE
392.9293FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2434FALSE
392.9293FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2434FALSE
392.9293FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2434FALSE
392.9293FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2434FALSE
392.9293FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
392.9293FALSE
350.2434FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
392.9293FALSE
350.2434FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
350.2434FALSE
392.9293FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
392.9293FALSE
350.2434FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
392.9293FALSE
350.2434FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
392.9293FALSE
350.2434FALSE
392.9294FALSE
350.2437FALSE
392.9294FALSE
350.2437FALSE
$par
time_ind_lag0.bw 
       -1.575818 

$value
[1] 350.2434

$counts
function gradient 
      29       29 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9345FALSE
392.9307FALSE
392.9384FALSE
392.9295FALSE
392.9294FALSE
392.9296FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
392.9293FALSE
392.9294FALSE
392.9294FALSE
$par
smooth_log_cases_lag1.bw 
               -2.319831 

$value
[1] 392.9293

$counts
function gradient 
      48       48 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

356.245FALSE
354.059FALSE
356.2366FALSE
354.0509FALSE
356.2535FALSE
354.067FALSE
356.2501FALSE
354.0659FALSE
356.2399FALSE
354.052FALSE
354.5809FALSE
353.2247FALSE
354.5802FALSE
353.2298FALSE
354.5816FALSE
353.22FALSE
354.5727FALSE
353.2163FALSE
354.5893FALSE
353.2333FALSE
352.2745FALSE
350.7337FALSE
352.2723FALSE
350.7344FALSE
352.2767FALSE
350.733FALSE
352.2691FALSE
350.7311FALSE
352.2798FALSE
396.3311FALSE
350.7362FALSE
396.3578FALSE
350.6651FALSE
396.3043FALSE
350.6645FALSE
350.6658FALSE
396.4421FALSE
350.6669FALSE
396.2199FALSE
350.6633FALSE
351.3829FALSE
350.5916FALSE
351.3815FALSE
350.591FALSE
351.3843FALSE
350.5922FALSE
351.3806FALSE
350.5914FALSE
351.3851FALSE
350.5918FALSE
351.4651FALSE
350.5833FALSE
351.4656FALSE
350.5837FALSE
351.4647FALSE
350.5829FALSE
351.4691FALSE
350.5829FALSE
351.4612FALSE
350.5837FALSE
351.2805FALSE
350.5814FALSE
351.2812FALSE
350.5812FALSE
351.2798FALSE
350.5816FALSE
351.281FALSE
350.5815FALSE
351.28FALSE
350.5813FALSE
351.2777FALSE
350.5806FALSE
351.2769FALSE
350.5803FALSE
351.2785FALSE
350.5808FALSE
351.2783FALSE
350.5806FALSE
351.2773FALSE
350.5805FALSE
351.2655FALSE
350.5831FALSE
351.2663FALSE
350.5832FALSE
351.2652FALSE
350.5829FALSE
351.2649FALSE
351.2661FALSE
350.5826FALSE
351.2685FALSE
350.5835FALSE
351.2676FALSE
350.5799FALSE
350.5796FALSE
351.2695FALSE
351.269FALSE
350.5801FALSE
351.2681FALSE
350.5799FALSE
351.2649FALSE
350.5798FALSE
351.2648FALSE
350.5798FALSE
351.2655FALSE
350.5801FALSE
351.265FALSE
350.5797FALSE
351.2647FALSE
350.5795FALSE
351.2655FALSE
351.2665FALSE
350.5802FALSE
351.2645FALSE
350.5796FALSE
351.2654FALSE
350.5798FALSE
351.2656FALSE
350.5799FALSE
351.2646FALSE
350.5797FALSE
351.2652FALSE
350.5799FALSE
351.2653FALSE
350.5795FALSE
351.2648FALSE
350.5797FALSE
351.2645FALSE
350.5793FALSE
351.2645FALSE
350.5791FALSE
351.2652FALSE
351.2652FALSE
350.58FALSE
351.2647FALSE
352.4062FALSE
351.2646FALSE
352.4086FALSE
351.2645FALSE
352.4038FALSE
351.2652FALSE
352.42FALSE
351.2653FALSE
352.3925FALSE
351.2647FALSE
350.5771FALSE
351.2649FALSE
351.2645FALSE
350.5758FALSE
351.2652FALSE
350.5784FALSE
351.2652FALSE
350.5784FALSE
351.2647FALSE
350.576FALSE
351.2647FALSE
350.5687FALSE
351.2645FALSE
350.5679FALSE
351.2652FALSE
350.5695FALSE
351.2652FALSE
350.5707FALSE
351.2647FALSE
351.2647FALSE
350.5668FALSE
351.2645FALSE
350.5181FALSE
351.2652FALSE
350.5191FALSE
351.2652FALSE
350.517FALSE
351.2647FALSE
350.5188FALSE
351.2647FALSE
350.5173FALSE
351.2645FALSE
350.5282FALSE
351.2652FALSE
350.5262FALSE
351.2652FALSE
350.5302FALSE
350.5302FALSE
351.2647FALSE
350.5262FALSE
351.2647FALSE
350.5181FALSE
351.2645FALSE
350.5191FALSE
351.2652FALSE
350.517FALSE
351.2652FALSE
350.5188FALSE
351.2647FALSE
351.2647FALSE
350.5173FALSE
351.2645FALSE
350.587FALSE
351.2652FALSE
350.5872FALSE
351.2652FALSE
350.5867FALSE
351.2647FALSE
350.5878FALSE
351.2647FALSE
350.5862FALSE
351.2645FALSE
350.5552FALSE
351.2652FALSE
350.5533FALSE
350.557FALSE
351.2652FALSE
351.2647FALSE
350.5567FALSE
351.2647FALSE
350.5537FALSE
351.2645FALSE
350.5212FALSE
351.2652FALSE
350.519FALSE
350.5234FALSE
351.2652FALSE
350.5232FALSE
351.2647FALSE
350.5192FALSE
351.2647FALSE
350.5145FALSE
351.2645FALSE
350.5152FALSE
351.2652FALSE
350.5169FALSE
351.2652FALSE
350.5165FALSE
351.2647FALSE
350.5134FALSE
351.2647FALSE
350.512FALSE
351.2645FALSE
350.5112FALSE
351.2652FALSE
350.5143FALSE
351.2652FALSE
350.514FALSE
351.2647FALSE
350.51FALSE
351.2647FALSE
350.5037FALSE
351.2645FALSE
350.5014FALSE
351.2652FALSE
350.5059FALSE
351.2652FALSE
350.5051FALSE
351.2647FALSE
350.5022FALSE
351.2647FALSE
351.2645FALSE
350.4946FALSE
351.2652FALSE
350.4923FALSE
351.2652FALSE
350.4968FALSE
351.2647FALSE
350.4959FALSE
351.2647FALSE
350.4932FALSE
351.2645FALSE
350.4984FALSE
350.5005FALSE
351.2652FALSE
350.4964FALSE
351.2652FALSE
350.4972FALSE
351.2647FALSE
350.4996FALSE
351.2647FALSE
350.4848FALSE
351.2645FALSE
350.4865FALSE
351.2652FALSE
350.483FALSE
351.2652FALSE
350.4844FALSE
351.2647FALSE
350.4851FALSE
351.2647FALSE
350.4781FALSE
351.2645FALSE
351.2652FALSE
350.4799FALSE
351.2652FALSE
350.4763FALSE
351.2647FALSE
350.4774FALSE
351.2647FALSE
350.4788FALSE
351.2645FALSE
350.4734FALSE
351.2652FALSE
350.4753FALSE
351.2652FALSE
350.4749FALSE
351.2647FALSE
350.4737FALSE
351.2647FALSE
350.4742FALSE
351.2645FALSE
350.4755FALSE
351.2652FALSE
350.4754FALSE
351.2652FALSE
350.4772FALSE
351.2647FALSE
350.4765FALSE
351.2647FALSE
350.4744FALSE
351.2645FALSE
350.4732FALSE
351.2652FALSE
350.475FALSE
351.2652FALSE
350.4751FALSE
351.2647FALSE
350.4739FALSE
351.2647FALSE
351.2645FALSE
350.4739FALSE
351.2652FALSE
350.4733FALSE
351.2652FALSE
350.4751FALSE
351.2647FALSE
350.475FALSE
351.2647FALSE
350.4738FALSE
351.2645FALSE
350.474FALSE
351.2652FALSE
350.4732FALSE
351.2652FALSE
350.475FALSE
351.2647FALSE
350.4751FALSE
351.2647FALSE
350.4739FALSE
351.2645FALSE
350.4739FALSE
351.2652FALSE
350.4732FALSE
351.2652FALSE
350.475FALSE
351.2647FALSE
350.4751FALSE
351.2647FALSE
350.4739FALSE
351.2645FALSE
350.4739FALSE
350.4732FALSE
351.2652FALSE
351.2652FALSE
350.4751FALSE
351.2647FALSE
350.475FALSE
351.2647FALSE
350.4738FALSE
351.2645FALSE
350.4739FALSE
351.2652FALSE
350.4732FALSE
351.2652FALSE
350.4751FALSE
351.2647FALSE
350.475FALSE
351.2647FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
               -1.178100                -1.579713 

$value
[1] 351.2645

$counts
function gradient 
      38       38 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4733FALSE
350.4751FALSE
350.4749FALSE
350.4737FALSE
350.474FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
350.4732FALSE
350.4751FALSE
350.475FALSE
350.4738FALSE
350.4739FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
               -1.597918                -1.685575 

$value
[1] 350.4732

$counts
function gradient 
      54       54 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1062.253    0.896 1054.236 
