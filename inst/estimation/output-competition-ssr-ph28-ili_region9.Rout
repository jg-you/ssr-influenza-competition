
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
617.889FALSE
614.6964FALSE
461.3343FALSE
617.8677FALSE
461.3333FALSE
614.674FALSE
617.9103FALSE
461.3353FALSE
614.7187FALSE
608.5248FALSE
606.3446FALSE
466.241FALSE
608.538FALSE
466.2742FALSE
606.3607FALSE
608.5117FALSE
466.2078FALSE
606.3285FALSE
607.1106FALSE
603.6423FALSE
460.8634FALSE
607.1041FALSE
603.6353FALSE
460.8628FALSE
607.117FALSE
603.6493FALSE
460.8639FALSE
606.6938FALSE
603.3283FALSE
461.4667FALSE
606.6949FALSE
603.3306FALSE
606.6926FALSE
461.4731FALSE
603.3259FALSE
606.7066FALSE
461.4603FALSE
603.2911FALSE
606.7051FALSE
460.7981FALSE
603.2905FALSE
606.7082FALSE
460.7979FALSE
603.2917FALSE
606.6928FALSE
460.7986FALSE
603.2877FALSE
606.6928FALSE
460.9112FALSE
603.2888FALSE
606.6929FALSE
460.913FALSE
603.2881FALSE
606.6928FALSE
460.9094FALSE
460.7997FALSE
606.6927FALSE
603.2888FALSE
460.7998FALSE
606.6929FALSE
603.2883FALSE
460.7996FALSE
606.6927FALSE
603.2893FALSE
606.6927FALSE
460.7982FALSE
603.2878FALSE
606.6928FALSE
460.7984FALSE
603.2885FALSE
606.6945FALSE
460.798FALSE
603.2883FALSE
606.6957FALSE
603.2877FALSE
460.7979FALSE
606.6934FALSE
603.2888FALSE
460.7981FALSE
606.6927FALSE
603.2881FALSE
460.7982FALSE
606.6927FALSE
603.2877FALSE
460.7979FALSE
606.6928FALSE
460.7981FALSE
603.2888FALSE
606.6933FALSE
460.7981FALSE
603.2881FALSE
606.6944FALSE
603.2877FALSE
460.7979FALSE
606.6927FALSE
603.2886FALSE
606.6927FALSE
460.7981FALSE
603.2882FALSE
606.6927FALSE
460.7982FALSE
603.2877FALSE
606.6928FALSE
460.7979FALSE
460.7981FALSE
603.2887FALSE
606.6946FALSE
603.2881FALSE
460.7982FALSE
606.6957FALSE
603.2879FALSE
606.6934FALSE
460.7979FALSE
603.2883FALSE
606.6927FALSE
460.7981FALSE
603.2883FALSE
606.6927FALSE
460.7982FALSE
603.2877FALSE
606.6927FALSE
460.7979FALSE
603.2887FALSE
606.6935FALSE
460.7981FALSE
603.2882FALSE
606.6946FALSE
460.7982FALSE
603.2877FALSE
460.7979FALSE
606.6927FALSE
603.2887FALSE
460.7981FALSE
606.6927FALSE
603.2881FALSE
460.7982FALSE
603.2877FALSE
606.6926FALSE
460.7979FALSE
603.2887FALSE
606.6927FALSE
460.7981FALSE
603.2881FALSE
606.6928FALSE
460.7982FALSE
603.2877FALSE
606.6939FALSE
460.7979FALSE
603.2887FALSE
606.6927FALSE
460.7981FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
460.7982FALSE
460.7979FALSE
603.2887FALSE
606.693FALSE
460.7981FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
460.7982FALSE
606.6927FALSE
460.7979FALSE
603.2887FALSE
606.6927FALSE
460.7981FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
460.7982FALSE
603.2887FALSE
460.7979FALSE
606.6927FALSE
603.2881FALSE
460.7981FALSE
606.6931FALSE
603.2877FALSE
460.7982FALSE
606.6927FALSE
460.7979FALSE
603.2887FALSE
606.6927FALSE
460.7981FALSE
603.2881FALSE
606.6927FALSE
460.7982FALSE
603.2877FALSE
606.6927FALSE
460.7979FALSE
603.2887FALSE
606.6927FALSE
460.7981FALSE
603.2881FALSE
606.6927FALSE
460.7982FALSE
603.2877FALSE
606.6927FALSE
460.7979FALSE
606.6927FALSE
603.2887FALSE
460.7981FALSE
603.2881FALSE
606.6927FALSE
460.7982FALSE
603.2877FALSE
606.6927FALSE
460.7979FALSE
603.2887FALSE
606.6927FALSE
460.7981FALSE
603.2881FALSE
603.2877FALSE
606.6927FALSE
460.7982FALSE
603.2887FALSE
460.7979FALSE
606.6927FALSE
606.6927FALSE
603.2881FALSE
460.7981FALSE
606.6927FALSE
460.7982FALSE
603.2877FALSE
606.6927FALSE
460.7979FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
460.7981FALSE
606.6927FALSE
603.2877FALSE
460.7982FALSE
603.2887FALSE
460.7979FALSE
606.6927FALSE
603.2881FALSE
460.7981FALSE
606.6927FALSE
460.7982FALSE
603.2877FALSE
606.6927FALSE
460.7979FALSE
603.2887FALSE
606.6927FALSE
460.7981FALSE
603.2881FALSE
606.6927FALSE
460.7982FALSE
$par
time_ind_lag0.bw 
       -1.903537 

$value
[1] 460.7979

$counts
function gradient 
      28       28 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

606.6927FALSE
603.2877FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
603.2881FALSE
606.6927FALSE
606.2912FALSE
606.6927FALSE
606.2732FALSE
606.6927FALSE
606.3092FALSE
606.6927FALSE
603.2895FALSE
606.6927FALSE
603.289FALSE
606.6927FALSE
603.29FALSE
606.6927FALSE
603.2879FALSE
603.2883FALSE
606.6927FALSE
603.2883FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2882FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
606.6927FALSE
603.2887FALSE
606.6927FALSE
603.2881FALSE
606.6927FALSE
603.2877FALSE
603.2887FALSE
606.6927FALSE
606.6927FALSE
603.2881FALSE
$par
smooth_log_cases_lag0.bw 
               -1.620015 

$value
[1] 603.2877

$counts
function gradient 
      52       52 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
606.6927FALSE
$par
smooth_log_cases_lag1.bw 
               -1.560334 

$value
[1] 606.6927

$counts
function gradient 
      55       55 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

508.0965FALSE
515.6456FALSE
508.0645FALSE
515.603FALSE
508.1285FALSE
515.6881FALSE
508.1129FALSE
515.6573FALSE
508.0801FALSE
515.6338FALSE
475.899FALSE
476.303FALSE
475.8761FALSE
476.2784FALSE
475.9219FALSE
476.3277FALSE
475.9019FALSE
476.3058FALSE
476.3003FALSE
475.8961FALSE
462.1436FALSE
461.5543FALSE
461.554FALSE
462.1415FALSE
462.1457FALSE
461.5546FALSE
461.5536FALSE
462.142FALSE
462.1452FALSE
461.555FALSE
461.771FALSE
461.5083FALSE
461.7693FALSE
461.508FALSE
461.7728FALSE
461.5086FALSE
461.7713FALSE
461.5074FALSE
461.7707FALSE
461.5091FALSE
461.3601FALSE
461.2425FALSE
461.359FALSE
461.2423FALSE
461.3611FALSE
461.2427FALSE
461.36FALSE
461.2403FALSE
461.3601FALSE
461.2447FALSE
461.1368FALSE
462.6874FALSE
461.1364FALSE
462.6873FALSE
461.1372FALSE
462.6876FALSE
461.1391FALSE
462.6996FALSE
461.1347FALSE
462.6752FALSE
461.0063FALSE
460.9115FALSE
461.006FALSE
460.9113FALSE
461.0067FALSE
460.9117FALSE
461.0072FALSE
460.9111FALSE
461.0054FALSE
460.912FALSE
460.9108FALSE
472.8879FALSE
460.9106FALSE
472.8878FALSE
460.9111FALSE
472.888FALSE
460.9108FALSE
472.9456FALSE
472.8303FALSE
460.9108FALSE
460.9634FALSE
460.8642FALSE
460.9633FALSE
460.8641FALSE
460.9636FALSE
460.8643FALSE
460.9653FALSE
460.8636FALSE
460.9616FALSE
460.8647FALSE
460.8986FALSE
460.8279FALSE
460.8984FALSE
460.8278FALSE
460.8988FALSE
460.8279FALSE
460.8988FALSE
460.8984FALSE
460.828FALSE
460.8938FALSE
460.8278FALSE
460.8937FALSE
460.8157FALSE
460.894FALSE
460.8157FALSE
460.894FALSE
460.8158FALSE
460.8936FALSE
460.8158FALSE
460.8767FALSE
460.8156FALSE
460.8765FALSE
460.8071FALSE
460.8768FALSE
460.807FALSE
460.8769FALSE
460.8071FALSE
460.8765FALSE
460.8072FALSE
460.8435FALSE
460.8069FALSE
460.8435FALSE
460.8148FALSE
460.8436FALSE
460.8148FALSE
460.8431FALSE
460.8148FALSE
460.8439FALSE
460.8143FALSE
460.8298FALSE
460.8153FALSE
460.8298FALSE
460.8046FALSE
460.8299FALSE
460.8046FALSE
460.8294FALSE
460.8046FALSE
460.8303FALSE
460.8048FALSE
461.0513FALSE
460.8044FALSE
461.0513FALSE
460.8036FALSE
461.0513FALSE
460.8036FALSE
461.0539FALSE
460.8036FALSE
461.0487FALSE
460.8034FALSE
460.8097FALSE
460.8042FALSE
460.8097FALSE
460.803FALSE
460.8097FALSE
460.803FALSE
460.8098FALSE
460.803FALSE
460.8096FALSE
460.8031FALSE
460.8079FALSE
460.8028FALSE
460.8079FALSE
460.8011FALSE
460.808FALSE
460.8011FALSE
460.808FALSE
460.8011FALSE
460.8079FALSE
460.8013FALSE
460.8051FALSE
460.8051FALSE
460.8009FALSE
460.8051FALSE
460.7989FALSE
460.8057FALSE
460.7989FALSE
460.8047FALSE
460.7989FALSE
460.8005FALSE
460.7991FALSE
460.8005FALSE
460.799FALSE
460.8005FALSE
460.7992FALSE
460.8006FALSE
460.7992FALSE
460.8003FALSE
460.7992FALSE
460.7993FALSE
460.7986FALSE
460.7993FALSE
460.7998FALSE
460.7993FALSE
460.7987FALSE
460.7994FALSE
460.7991FALSE
460.7987FALSE
460.8079FALSE
460.7987FALSE
460.8079FALSE
460.7988FALSE
460.8079FALSE
460.7991FALSE
460.8073FALSE
460.7983FALSE
460.8084FALSE
460.7983FALSE
460.7987FALSE
460.7983FALSE
460.7987FALSE
460.7985FALSE
460.7987FALSE
460.7987FALSE
460.7989FALSE
460.7981FALSE
460.7985FALSE
460.7983FALSE
460.7981FALSE
460.7983FALSE
460.7981FALSE
460.7983FALSE
460.7983FALSE
460.7985FALSE
460.7983FALSE
460.7985FALSE
460.798FALSE
460.7984FALSE
460.798FALSE
460.7984FALSE
460.798FALSE
460.7984FALSE
460.7982FALSE
460.7982FALSE
460.7982FALSE
460.7989FALSE
460.7979FALSE
460.7982FALSE
460.7979FALSE
460.7982FALSE
460.7979FALSE
460.7982FALSE
460.7981FALSE
460.7984FALSE
460.7982FALSE
460.7985FALSE
460.7979FALSE
460.7981FALSE
460.7979FALSE
460.7981FALSE
460.7979FALSE
460.7981FALSE
460.7981FALSE
460.7983FALSE
460.7982FALSE
460.7984FALSE
460.7979FALSE
460.798FALSE
460.7979FALSE
460.798FALSE
460.7979FALSE
460.798FALSE
460.7981FALSE
460.7982FALSE
460.7982FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                5.231835                -1.903528 

$value
[1] 460.7979

$counts
function gradient 
      26       26 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

460.7982FALSE
460.798FALSE
460.798FALSE
460.798FALSE
460.7982FALSE
460.7982FALSE
460.7979FALSE
460.7979FALSE
460.7979FALSE
460.7981FALSE
460.7981FALSE
460.7979FALSE
460.7979FALSE
460.7979FALSE
460.7981FALSE
460.7981FALSE
460.7983FALSE
460.7983FALSE
460.7983FALSE
460.7979FALSE
460.799FALSE
460.7979FALSE
460.7979FALSE
460.7979FALSE
460.7981FALSE
460.7981FALSE
460.7979FALSE
460.7979FALSE
460.7979FALSE
460.7981FALSE
460.7981FALSE
460.7979FALSE
460.7979FALSE
460.7979FALSE
460.7981FALSE
460.7981FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                6.496054                -1.903384 

$value
[1] 460.7979

$counts
function gradient 
      34       34 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1370.635    0.878  884.701 
