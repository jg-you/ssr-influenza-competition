
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
463.7261FALSE
609.9109FALSE
601.0339FALSE
601.0325FALSE
609.9108FALSE
601.0352FALSE
609.9111FALSE
463.7318FALSE
607.1301FALSE
615.6769FALSE
464.0494FALSE
607.1444FALSE
615.6898FALSE
464.0707FALSE
607.1156FALSE
615.6641FALSE
464.0281FALSE
600.9389FALSE
609.9103FALSE
461.5708FALSE
600.9383FALSE
609.9103FALSE
461.5699FALSE
600.9395FALSE
609.9102FALSE
461.5717FALSE
601.0112FALSE
609.9102FALSE
601.0139FALSE
461.5268FALSE
609.9102FALSE
601.0085FALSE
461.5269FALSE
609.9102FALSE
600.9278FALSE
461.5266FALSE
609.9102FALSE
600.9272FALSE
461.5265FALSE
609.9102FALSE
600.9283FALSE
461.5265FALSE
609.9102FALSE
$par
smooth_log_cases_lag0.bw 
                -2.29233 

$value
[1] 609.9102

$counts
function gradient 
       5        5 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

601.107FALSE
461.5265FALSE
601.111FALSE
461.5265FALSE
601.1034FALSE
461.5264FALSE
600.9231FALSE
461.5265FALSE
600.9227FALSE
461.5264FALSE
600.9236FALSE
461.5264FALSE
601.0171FALSE
461.5264FALSE
601.0198FALSE
461.5263FALSE
601.0143FALSE
600.921FALSE
461.5263FALSE
600.9205FALSE
461.5263FALSE
600.9214FALSE
461.5264FALSE
601.175FALSE
461.5263FALSE
601.1791FALSE
461.5265FALSE
601.171FALSE
461.5263FALSE
600.9202FALSE
461.5263FALSE
600.9211FALSE
461.5263FALSE
600.9192FALSE
461.5263FALSE
600.9202FALSE
461.5263FALSE
600.9197FALSE
461.5263FALSE
600.9206FALSE
461.5263FALSE
600.9193FALSE
461.5263FALSE
600.9198FALSE
461.5263FALSE
$par
time_ind_lag0.bw 
       -1.673775 

$value
[1] 461.5263

$counts
function gradient 
      12       12 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

600.9197FALSE
600.9194FALSE
600.9196FALSE
600.9198FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9299FALSE
600.9294FALSE
600.9305FALSE
600.9194FALSE
600.9196FALSE
600.9198FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
600.9193FALSE
600.9198FALSE
600.9197FALSE
$par
smooth_log_cases_lag1.bw 
               -2.169326 

$value
[1] 600.9193

$counts
function gradient 
      53       53 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

501.3174FALSE
500.0145FALSE
501.3223FALSE
500.0181FALSE
501.3125FALSE
500.0109FALSE
501.337FALSE
500.0312FALSE
501.2979FALSE
499.9978FALSE
492.047FALSE
493.7103FALSE
492.0597FALSE
493.7291FALSE
492.0342FALSE
493.6913FALSE
492.0438FALSE
493.6993FALSE
492.0501FALSE
493.7212FALSE
501.4893FALSE
495.0518FALSE
501.4527FALSE
495.0403FALSE
501.526FALSE
495.0634FALSE
501.4781FALSE
495.0361FALSE
501.5003FALSE
495.0677FALSE
491.03FALSE
491.1221FALSE
491.049FALSE
491.1384FALSE
491.0109FALSE
491.106FALSE
491.0162FALSE
491.1086FALSE
491.0438FALSE
491.1358FALSE
491.2675FALSE
634.2627FALSE
634.2145FALSE
491.234FALSE
634.311FALSE
491.3008FALSE
634.3184FALSE
491.298FALSE
634.207FALSE
491.2368FALSE
497.9048FALSE
490.7403FALSE
497.8786FALSE
490.759FALSE
497.931FALSE
490.7218FALSE
497.8995FALSE
490.7265FALSE
497.9101FALSE
490.7543FALSE
492.8804FALSE
491.005FALSE
492.8675FALSE
490.9705FALSE
492.8937FALSE
491.0394FALSE
491.0378FALSE
492.8869FALSE
492.8738FALSE
490.972FALSE
490.9414FALSE
490.6816FALSE
490.9531FALSE
490.7FALSE
490.9301FALSE
490.6634FALSE
490.9328FALSE
490.6683FALSE
490.9504FALSE
490.6952FALSE
491.777FALSE
490.8633FALSE
491.7489FALSE
490.8284FALSE
491.8048FALSE
490.8982FALSE
491.8006FALSE
490.8967FALSE
491.753FALSE
490.8298FALSE
490.9162FALSE
490.6816FALSE
490.9237FALSE
490.7FALSE
490.9487FALSE
490.6634FALSE
490.9474FALSE
490.6683FALSE
490.6952FALSE
490.9211FALSE
501.5507FALSE
490.9272FALSE
501.5084FALSE
490.9384FALSE
501.593FALSE
490.9164FALSE
501.5437FALSE
490.919FALSE
501.5576FALSE
490.9358FALSE
493.1956FALSE
490.9155FALSE
493.187FALSE
490.9263FALSE
493.2041FALSE
490.9411FALSE
493.199FALSE
490.9398FALSE
493.1921FALSE
490.9237FALSE
491.0671FALSE
490.9088FALSE
491.0337FALSE
490.9202FALSE
491.1002FALSE
490.8978FALSE
491.0995FALSE
490.9005FALSE
491.0343FALSE
490.6559FALSE
490.9175FALSE
490.674FALSE
491.0841FALSE
491.0913FALSE
490.6819FALSE
491.0773FALSE
490.6838FALSE
490.6691FALSE
491.07FALSE
491.0543FALSE
491.0986FALSE
491.0687FALSE
490.8999FALSE
491.0402FALSE
490.9116FALSE
491.0321FALSE
490.8895FALSE
491.0769FALSE
490.8915FALSE
490.6348FALSE
490.9088FALSE
490.9506FALSE
490.6522FALSE
490.6475FALSE
490.9586FALSE
490.6458FALSE
490.9433FALSE
490.651FALSE
490.939FALSE
490.6329FALSE
490.963FALSE
490.8999FALSE
490.6502FALSE
490.9102FALSE
490.6535FALSE
490.8907FALSE
490.6517FALSE
490.8907FALSE
490.649FALSE
490.9103FALSE
490.6347FALSE
490.8949FALSE
490.652FALSE
490.9051FALSE
490.6517FALSE
490.8874FALSE
490.6501FALSE
490.8861FALSE
490.6507FALSE
490.9042FALSE
490.9271FALSE
490.6329FALSE
490.8949FALSE
490.6502FALSE
490.9601FALSE
490.6534FALSE
490.9588FALSE
490.6517FALSE
490.895FALSE
490.649FALSE
490.8913FALSE
490.6329FALSE
490.9015FALSE
490.6502FALSE
490.9004FALSE
490.6535FALSE
490.8974FALSE
490.6517FALSE
490.9004FALSE
490.649FALSE
490.8921FALSE
490.6329FALSE
490.903FALSE
490.6502FALSE
490.9202FALSE
490.6535FALSE
490.919FALSE
490.6517FALSE
490.9003FALSE
490.649FALSE
490.8911FALSE
490.6329FALSE
490.9022FALSE
490.6502FALSE
490.9086FALSE
490.6535FALSE
490.6517FALSE
490.9074FALSE
490.8995FALSE
490.649FALSE
490.8906FALSE
490.6329FALSE
490.6502FALSE
490.9018FALSE
490.6535FALSE
490.9037FALSE
490.6517FALSE
490.9014FALSE
490.649FALSE
490.6329FALSE
490.8995FALSE
490.6502FALSE
490.891FALSE
490.6535FALSE
490.9022FALSE
490.6517FALSE
490.902FALSE
490.649FALSE
490.8997FALSE
490.6329FALSE
490.9FALSE
490.6502FALSE
490.8906FALSE
490.6535FALSE
490.9018FALSE
490.6517FALSE
490.9037FALSE
490.649FALSE
490.9014FALSE
490.6329FALSE
490.8995FALSE
490.6502FALSE
490.6535FALSE
490.8906FALSE
490.6517FALSE
490.9018FALSE
490.649FALSE
490.9037FALSE
490.6329FALSE
490.9014FALSE
490.6502FALSE
490.8995FALSE
490.6535FALSE
490.8906FALSE
490.6517FALSE
490.649FALSE
490.9018FALSE
490.6329FALSE
490.9037FALSE
490.6502FALSE
490.9014FALSE
490.6535FALSE
490.8995FALSE
490.6517FALSE
490.8906FALSE
490.649FALSE
490.9018FALSE
490.6329FALSE
490.9037FALSE
490.6502FALSE
490.9014FALSE
490.6535FALSE
490.8995FALSE
490.6517FALSE
490.8906FALSE
490.649FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
               -2.678562                -2.704714 

$value
[1] 490.6329

$counts
function gradient 
      29       29 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
498.42FALSE
498.4103FALSE
498.4296FALSE
498.4085FALSE
498.4314FALSE
492.2938FALSE
492.3182FALSE
492.2689FALSE
492.2697FALSE
492.3174FALSE
490.9025FALSE
490.9142FALSE
490.8919FALSE
490.8939FALSE
490.9114FALSE
490.8909FALSE
490.9021FALSE
490.9028FALSE
490.9005FALSE
490.8997FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
490.8906FALSE
490.9018FALSE
490.9037FALSE
490.9014FALSE
490.8995FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
               -2.642096                -2.648497 

$value
[1] 490.8906

$counts
function gradient 
      63       63 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
 825.468    1.441 1137.793 
