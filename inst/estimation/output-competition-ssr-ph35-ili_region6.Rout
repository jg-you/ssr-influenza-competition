
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
986.0528FALSE
688.4397FALSE
998.7451FALSE
986.0541FALSE
688.4302FALSE
998.7295FALSE
986.0515FALSE
688.4491FALSE
998.7607FALSE
997.6524FALSE
689.3731FALSE
995.8736FALSE
997.6368FALSE
689.4169FALSE
995.8736FALSE
997.668FALSE
689.3294FALSE
995.8736FALSE
986.0028FALSE
684.2203FALSE
995.8736FALSE
986.0047FALSE
684.2164FALSE
986.0009FALSE
995.8736FALSE
684.2243FALSE
995.8736FALSE
986.0047FALSE
686.2664FALSE
995.8736FALSE
986.0034FALSE
686.2954FALSE
995.8736FALSE
986.0059FALSE
686.2374FALSE
995.8736FALSE
985.9821FALSE
683.815FALSE
995.8736FALSE
985.9817FALSE
683.8134FALSE
995.8736FALSE
985.9825FALSE
683.8166FALSE
995.8736FALSE
$par
smooth_log_cases_lag1.bw 
               -1.304517 

$value
[1] 995.8736

$counts
function gradient 
       5        5 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

985.9914FALSE
683.826FALSE
985.9934FALSE
683.828FALSE
683.824FALSE
985.9894FALSE
985.9815FALSE
683.7598FALSE
985.9811FALSE
683.7591FALSE
683.7605FALSE
985.9819FALSE
683.7978FALSE
985.9811FALSE
683.7997FALSE
985.9807FALSE
683.7959FALSE
985.9815FALSE
683.7576FALSE
985.983FALSE
683.7581FALSE
985.9851FALSE
683.7579FALSE
985.9809FALSE
683.7575FALSE
985.9806FALSE
683.7579FALSE
985.9801FALSE
683.7582FALSE
985.981FALSE
683.7575FALSE
985.9803FALSE
683.758FALSE
985.9801FALSE
683.758FALSE
683.7575FALSE
985.9808FALSE
986.0384FALSE
683.758FALSE
683.758FALSE
986.0399FALSE
683.7575FALSE
986.0368FALSE
683.758FALSE
985.9808FALSE
683.758FALSE
985.9829FALSE
683.7575FALSE
985.9802FALSE
683.758FALSE
985.9802FALSE
683.758FALSE
985.9809FALSE
683.7575FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.758FALSE
985.9807FALSE
683.7575FALSE
683.758FALSE
985.9807FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
683.758FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.7575FALSE
985.9802FALSE
683.758FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.7575FALSE
985.9802FALSE
683.758FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.7575FALSE
985.9802FALSE
683.758FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.7575FALSE
985.9802FALSE
683.758FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.7575FALSE
683.758FALSE
985.9802FALSE
683.758FALSE
985.9809FALSE
683.7575FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.758FALSE
985.9809FALSE
683.7575FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.758FALSE
985.9809FALSE
683.7575FALSE
985.9806FALSE
683.758FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
683.758FALSE
985.9802FALSE
683.7575FALSE
985.9809FALSE
683.758FALSE
985.9806FALSE
$par
smooth_log_cases_lag0.bw 
               -2.345602 

$value
[1] 985.9802

$counts
function gradient 
      33       33 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
$par
time_ind_lag0.bw 
       -1.600968 

$value
[1] 683.7575

$counts
function gradient 
      47       47 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

719.8785FALSE
726.1401FALSE
719.8535FALSE
726.1115FALSE
719.9035FALSE
726.1689FALSE
719.8436FALSE
726.116FALSE
719.9134FALSE
726.1642FALSE
774.9073FALSE
742.201FALSE
774.9061FALSE
742.1914FALSE
774.9085FALSE
742.2105FALSE
742.3642FALSE
775.1405FALSE
742.0378FALSE
774.674FALSE
716.3555FALSE
713.0401FALSE
716.3335FALSE
713.0286FALSE
716.3774FALSE
713.0514FALSE
716.3713FALSE
713.039FALSE
716.3397FALSE
713.0411FALSE
707.9159FALSE
711.712FALSE
707.8938FALSE
711.697FALSE
707.9379FALSE
711.727FALSE
707.9456FALSE
711.7168FALSE
707.8862FALSE
711.7073FALSE
691.1958FALSE
706.8052FALSE
691.1908FALSE
706.7887FALSE
691.2008FALSE
706.8217FALSE
691.2366FALSE
706.8344FALSE
691.1551FALSE
706.7763FALSE
684.279FALSE
712.7837FALSE
684.2782FALSE
712.7781FALSE
684.2799FALSE
712.7893FALSE
684.2773FALSE
712.9146FALSE
684.2807FALSE
712.6535FALSE
684.202FALSE
703.893FALSE
684.2013FALSE
703.8825FALSE
684.2027FALSE
703.9035FALSE
684.2003FALSE
703.9549FALSE
703.8315FALSE
684.2036FALSE
693.2301FALSE
683.9307FALSE
693.2278FALSE
683.9304FALSE
693.2325FALSE
683.9309FALSE
693.2891FALSE
683.929FALSE
693.1712FALSE
683.9324FALSE
685.8306FALSE
683.8206FALSE
685.8299FALSE
683.8205FALSE
685.8312FALSE
683.8208FALSE
685.8525FALSE
683.8203FALSE
685.8087FALSE
683.821FALSE
684.233FALSE
683.8154FALSE
684.2326FALSE
683.8153FALSE
684.2334FALSE
683.8154FALSE
684.2404FALSE
683.8172FALSE
684.2256FALSE
683.8136FALSE
683.7991FALSE
683.9392FALSE
683.799FALSE
683.939FALSE
683.7991FALSE
683.9395FALSE
683.8008FALSE
683.9411FALSE
683.7974FALSE
683.9374FALSE
683.7896FALSE
683.7895FALSE
683.8644FALSE
683.7896FALSE
683.8642FALSE
683.7882FALSE
683.8646FALSE
683.7909FALSE
683.8655FALSE
683.8632FALSE
683.7734FALSE
683.8661FALSE
683.7734FALSE
683.866FALSE
683.7734FALSE
683.8662FALSE
683.7727FALSE
683.8645FALSE
683.7741FALSE
683.8677FALSE
683.7734FALSE
683.8499FALSE
683.7734FALSE
683.8498FALSE
683.7734FALSE
683.7746FALSE
683.8485FALSE
683.7723FALSE
683.8513FALSE
683.7691FALSE
683.8441FALSE
683.7691FALSE
683.8439FALSE
683.7691FALSE
683.77FALSE
683.8442FALSE
683.7685FALSE
683.8427FALSE
683.7648FALSE
683.8455FALSE
683.7648FALSE
683.8278FALSE
683.7648FALSE
683.8277FALSE
683.7653FALSE
683.7651FALSE
683.828FALSE
683.7609FALSE
683.8282FALSE
683.7609FALSE
683.8281FALSE
683.8131FALSE
683.7609FALSE
683.7614FALSE
683.813FALSE
683.7614FALSE
683.8132FALSE
683.8143FALSE
683.7593FALSE
683.812FALSE
683.7593FALSE
683.7593FALSE
683.7825FALSE
683.7598FALSE
683.7824FALSE
683.7597FALSE
683.7825FALSE
683.7583FALSE
683.7834FALSE
683.7583FALSE
683.7818FALSE
683.7583FALSE
683.7732FALSE
683.7732FALSE
683.7587FALSE
683.7732FALSE
683.759FALSE
683.758FALSE
683.7725FALSE
683.758FALSE
683.7746FALSE
683.7581FALSE
683.7668FALSE
683.7585FALSE
683.7668FALSE
683.7582FALSE
683.7669FALSE
683.7577FALSE
683.7661FALSE
683.7577FALSE
683.7675FALSE
683.7577FALSE
683.7617FALSE
683.7582FALSE
683.7617FALSE
683.7583FALSE
683.7617FALSE
683.7576FALSE
683.7576FALSE
683.7624FALSE
683.7612FALSE
683.7576FALSE
683.7581FALSE
683.7602FALSE
683.7602FALSE
683.7581FALSE
683.7602FALSE
683.7575FALSE
683.7607FALSE
683.7575FALSE
683.7599FALSE
683.7575FALSE
683.7595FALSE
683.758FALSE
683.7581FALSE
683.7595FALSE
683.7576FALSE
683.7595FALSE
683.7576FALSE
683.7588FALSE
683.7576FALSE
683.7602FALSE
683.7581FALSE
683.7579FALSE
683.7583FALSE
683.7575FALSE
683.7583FALSE
683.7575FALSE
683.7583FALSE
683.7575FALSE
683.7585FALSE
683.758FALSE
683.759FALSE
683.7581FALSE
683.7581FALSE
683.7575FALSE
683.7581FALSE
683.7575FALSE
683.7581FALSE
683.7575FALSE
683.7585FALSE
683.758FALSE
683.7581FALSE
683.7581FALSE
683.7578FALSE
683.7575FALSE
683.7578FALSE
683.7575FALSE
683.7578FALSE
683.7575FALSE
683.7583FALSE
683.758FALSE
683.7581FALSE
683.7581FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.7575FALSE
683.758FALSE
683.7581FALSE
683.7581FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.758FALSE
683.7581FALSE
683.7581FALSE
683.7576FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.7575FALSE
683.758FALSE
683.758FALSE
683.7576FALSE
683.7581FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.7575FALSE
683.7581FALSE
683.758FALSE
683.7576FALSE
683.7581FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.7575FALSE
683.7581FALSE
683.758FALSE
683.7576FALSE
683.7581FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.7575FALSE
683.7581FALSE
683.758FALSE
683.7576FALSE
683.7581FALSE
683.7576FALSE
683.7575FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.758FALSE
683.7581FALSE
683.7576FALSE
683.7581FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.7575FALSE
683.7581FALSE
683.758FALSE
683.7576FALSE
683.7581FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.7575FALSE
683.7581FALSE
683.758FALSE
683.7576FALSE
683.7581FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.758FALSE
683.7581FALSE
683.7581FALSE
683.7576FALSE
683.7576FALSE
683.7575FALSE
683.7576FALSE
683.7575FALSE
683.7581FALSE
683.7575FALSE
683.7581FALSE
683.758FALSE
683.7576FALSE
683.7581FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                 5.36809                 -1.60103 

$value
[1] 683.7575

$counts
function gradient 
      38       38 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

683.7576FALSE
683.7576FALSE
683.7581FALSE
683.7581FALSE
683.7576FALSE
683.7576FALSE
683.7576FALSE
683.7581FALSE
683.7581FALSE
683.7576FALSE
683.7576FALSE
683.7576FALSE
683.7581FALSE
683.7581FALSE
683.7576FALSE
683.7576FALSE
683.7576FALSE
683.7581FALSE
683.7581FALSE
683.7576FALSE
683.7576FALSE
683.7576FALSE
683.7581FALSE
683.7581FALSE
683.7576FALSE
683.7576FALSE
683.7576FALSE
683.7581FALSE
683.7581FALSE
683.7576FALSE
683.7576FALSE
683.7576FALSE
683.7581FALSE
683.7581FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                5.309031                -1.600996 

$value
[1] 683.7576

$counts
function gradient 
      44       44 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1051.700    0.961  899.485 
