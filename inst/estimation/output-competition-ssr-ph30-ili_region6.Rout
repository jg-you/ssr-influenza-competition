
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
924.5536FALSE
929.2635FALSE
692.5812FALSE
924.5215FALSE
929.2778FALSE
692.5716FALSE
924.5858FALSE
692.5907FALSE
929.2491FALSE
915.9552FALSE
692.6363FALSE
932.8849FALSE
692.6786FALSE
915.9796FALSE
692.594FALSE
915.9309FALSE
932.8687FALSE
911.1507FALSE
688.0348FALSE
932.9011FALSE
911.1443FALSE
688.0302FALSE
920.7782FALSE
911.1572FALSE
688.0394FALSE
920.7666FALSE
910.9259FALSE
696.7281FALSE
920.7897FALSE
910.9268FALSE
696.7864FALSE
924.0176FALSE
696.67FALSE
910.925FALSE
924.0455FALSE
687.6525FALSE
910.9185FALSE
923.9895FALSE
687.6503FALSE
910.9189FALSE
687.6547FALSE
910.9181FALSE
920.5603FALSE
910.9166FALSE
687.5602FALSE
920.546FALSE
910.9166FALSE
687.5601FALSE
910.9166FALSE
687.5603FALSE
920.5745FALSE
910.9166FALSE
687.56FALSE
920.4818FALSE
910.9166FALSE
687.5599FALSE
920.4769FALSE
910.9166FALSE
$par
smooth_log_cases_lag0.bw 
               -1.664641 

$value
[1] 910.9166

$counts
function gradient 
       7        7 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

687.56FALSE
920.4866FALSE
687.5642FALSE
920.5665FALSE
687.5651FALSE
920.605FALSE
687.5633FALSE
920.528FALSE
687.5599FALSE
920.4307FALSE
687.5598FALSE
920.4245FALSE
687.56FALSE
920.4367FALSE
687.5929FALSE
920.4221FALSE
687.5958FALSE
687.5904FALSE
920.4287FALSE
687.5599FALSE
920.4155FALSE
687.5598FALSE
920.419FALSE
687.5599FALSE
920.4154FALSE
687.5741FALSE
920.4253FALSE
687.5757FALSE
920.4145FALSE
687.5725FALSE
920.4212FALSE
687.5598FALSE
920.4199FALSE
687.5598FALSE
920.4224FALSE
687.5599FALSE
920.416FALSE
687.5658FALSE
920.4286FALSE
687.5667FALSE
687.5649FALSE
920.4142FALSE
687.5598FALSE
920.4209FALSE
687.5597FALSE
920.4201FALSE
687.5599FALSE
920.4141FALSE
687.5626FALSE
920.4205FALSE
687.5634FALSE
920.4205FALSE
687.5617FALSE
920.4141FALSE
687.5598FALSE
687.5597FALSE
920.4205FALSE
687.5598FALSE
920.4205FALSE
687.5606FALSE
920.4141FALSE
687.5615FALSE
920.4205FALSE
687.5598FALSE
920.4205FALSE
687.5597FALSE
920.4141FALSE
687.5597FALSE
920.4205FALSE
687.5598FALSE
920.4205FALSE
687.5886FALSE
687.5911FALSE
920.4141FALSE
687.5868FALSE
920.4205FALSE
687.5597FALSE
920.4205FALSE
687.5596FALSE
920.4141FALSE
687.5597FALSE
920.4205FALSE
687.5676FALSE
920.4205FALSE
687.5692FALSE
920.4141FALSE
687.5664FALSE
687.5597FALSE
920.4205FALSE
687.5596FALSE
920.4205FALSE
687.5597FALSE
920.4141FALSE
687.5642FALSE
920.4205FALSE
687.5651FALSE
920.4205FALSE
687.5633FALSE
920.4141FALSE
687.5597FALSE
920.4205FALSE
687.5596FALSE
920.4205FALSE
687.5597FALSE
920.4141FALSE
687.5623FALSE
920.4205FALSE
687.5631FALSE
920.4205FALSE
687.5614FALSE
920.4141FALSE
687.5597FALSE
920.4205FALSE
687.5596FALSE
920.4205FALSE
$par
smooth_log_cases_lag1.bw 
                 -2.6088 

$value
[1] 920.4141

$counts
function gradient 
      24       24 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

687.5597FALSE
687.561FALSE
687.5619FALSE
687.5602FALSE
687.5596FALSE
687.5596FALSE
687.5597FALSE
687.5602FALSE
687.5611FALSE
687.5596FALSE
687.5596FALSE
687.5597FALSE
687.5597FALSE
687.5596FALSE
687.5598FALSE
687.5597FALSE
687.5596FALSE
687.5597FALSE
687.5597FALSE
$par
time_ind_lag0.bw 
       -1.550797 

$value
[1] 687.5596

$counts
function gradient 
      33       33 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

746.1901FALSE
744.2508FALSE
744.2048FALSE
746.1317FALSE
744.2967FALSE
746.2485FALSE
744.2809FALSE
746.2361FALSE
744.2206FALSE
746.1443FALSE
703.8275FALSE
702.6556FALSE
702.6332FALSE
703.8011FALSE
702.6781FALSE
703.8539FALSE
702.6528FALSE
703.8203FALSE
702.6584FALSE
703.8348FALSE
696.7162FALSE
693.7719FALSE
696.7073FALSE
693.7672FALSE
696.7251FALSE
693.7765FALSE
696.711FALSE
693.7626FALSE
696.7213FALSE
693.73FALSE
693.7812FALSE
693.7302FALSE
691.224FALSE
693.7298FALSE
691.2201FALSE
693.7217FALSE
691.2279FALSE
693.7383FALSE
691.2204FALSE
692.0326FALSE
691.2276FALSE
692.0294FALSE
688.8645FALSE
692.0359FALSE
688.8622FALSE
692.0308FALSE
688.8669FALSE
692.0347FALSE
688.8659FALSE
702.3501FALSE
688.8632FALSE
702.3447FALSE
688.5849FALSE
702.3554FALSE
688.5833FALSE
702.4223FALSE
688.5864FALSE
702.278FALSE
691.6603FALSE
688.5971FALSE
691.6558FALSE
688.5727FALSE
691.6649FALSE
687.851FALSE
691.6627FALSE
687.8504FALSE
691.6579FALSE
687.8516FALSE
691.3346FALSE
687.8511FALSE
691.3299FALSE
687.851FALSE
691.3392FALSE
687.7337FALSE
691.3494FALSE
687.7334FALSE
691.3197FALSE
687.7341FALSE
687.7337FALSE
690.6457FALSE
687.7337FALSE
690.6412FALSE
687.6384FALSE
690.6503FALSE
687.6382FALSE
690.653FALSE
687.6385FALSE
690.6385FALSE
687.6384FALSE
689.1393FALSE
687.6384FALSE
689.1366FALSE
687.5999FALSE
689.142FALSE
687.5999FALSE
689.1388FALSE
687.6FALSE
689.1399FALSE
687.5999FALSE
688.2622FALSE
687.6FALSE
688.2609FALSE
687.5799FALSE
688.2635FALSE
687.5799FALSE
688.2611FALSE
687.5799FALSE
688.2633FALSE
687.5808FALSE
687.8698FALSE
687.5793FALSE
687.8693FALSE
687.5693FALSE
687.8704FALSE
687.5693FALSE
687.8698FALSE
687.5693FALSE
687.8698FALSE
687.5692FALSE
687.7132FALSE
687.5694FALSE
687.7129FALSE
687.5644FALSE
687.7135FALSE
687.5644FALSE
687.7124FALSE
687.5644FALSE
687.7145FALSE
687.5643FALSE
687.6343FALSE
687.5644FALSE
687.6341FALSE
693.9428FALSE
687.6344FALSE
693.9428FALSE
687.6342FALSE
693.9428FALSE
693.9901FALSE
687.6344FALSE
693.8956FALSE
687.5973FALSE
687.5644FALSE
687.5972FALSE
687.5973FALSE
687.5643FALSE
687.5972FALSE
687.5644FALSE
687.5974FALSE
687.5643FALSE
690.8555FALSE
687.5644FALSE
690.8554FALSE
687.5734FALSE
687.5734FALSE
690.8555FALSE
690.892FALSE
687.5734FALSE
690.819FALSE
687.575FALSE
687.5963FALSE
687.5718FALSE
687.5962FALSE
687.5643FALSE
687.5963FALSE
687.5643FALSE
687.5962FALSE
687.5643FALSE
687.5964FALSE
687.5643FALSE
687.6716FALSE
687.5644FALSE
687.6715FALSE
687.5688FALSE
687.6716FALSE
687.6752FALSE
FALSE
687.5688FALSE
687.668FALSE
687.5929FALSE
687.5697FALSE
687.5928FALSE
687.568FALSE
687.593FALSE
687.5643FALSE
687.5643FALSE
687.5928FALSE
687.5643FALSE
687.593FALSE
687.5642FALSE
687.9324FALSE
687.5643FALSE
687.9324FALSE
687.5666FALSE
687.9324FALSE
687.5665FALSE
687.944FALSE
687.5666FALSE
687.9216FALSE
687.5674FALSE
687.5892FALSE
687.5657FALSE
687.5892FALSE
687.5643FALSE
687.5893FALSE
687.5643FALSE
687.5892FALSE
687.5643FALSE
687.5893FALSE
687.5642FALSE
687.6497FALSE
687.5643FALSE
687.6496FALSE
687.5651FALSE
687.6497FALSE
687.5651FALSE
687.6529FALSE
687.5652FALSE
687.6464FALSE
687.566FALSE
687.5643FALSE
687.5843FALSE
687.5642FALSE
687.5843FALSE
687.5642FALSE
687.5844FALSE
687.5643FALSE
687.5843FALSE
687.5642FALSE
687.5844FALSE
687.5643FALSE
687.5979FALSE
687.5644FALSE
687.5979FALSE
687.5643FALSE
687.5979FALSE
687.5644FALSE
687.5652FALSE
687.6004FALSE
687.5959FALSE
687.5642FALSE
687.5799FALSE
687.5642FALSE
687.5799FALSE
687.5642FALSE
687.5642FALSE
687.58FALSE
687.5643FALSE
687.5808FALSE
687.5643FALSE
687.5791FALSE
687.562FALSE
687.5796FALSE
687.562FALSE
687.5796FALSE
687.562FALSE
687.5796FALSE
687.5619FALSE
687.5776FALSE
687.562FALSE
687.5816FALSE
687.5632FALSE
687.5622FALSE
687.5632FALSE
687.5622FALSE
687.5632FALSE
687.5622FALSE
687.5641FALSE
687.5621FALSE
687.5623FALSE
687.5624FALSE
687.5615FALSE
687.5621FALSE
687.5615FALSE
687.5621FALSE
687.5615FALSE
687.5621FALSE
687.5622FALSE
687.562FALSE
687.5616FALSE
687.5622FALSE
687.56FALSE
687.5614FALSE
687.56FALSE
687.5614FALSE
687.56FALSE
687.5614FALSE
687.5599FALSE
687.5613FALSE
687.56FALSE
687.5615FALSE
687.5599FALSE
687.6029FALSE
687.5599FALSE
687.6029FALSE
687.5599FALSE
687.6029FALSE
687.5598FALSE
687.6061FALSE
687.56FALSE
687.5997FALSE
687.5598FALSE
687.5607FALSE
687.5598FALSE
687.5607FALSE
687.5598FALSE
687.5607FALSE
687.5597FALSE
687.5606FALSE
687.5598FALSE
687.5608FALSE
687.5597FALSE
687.5753FALSE
687.5597FALSE
687.5753FALSE
687.5597FALSE
687.5753FALSE
687.5597FALSE
687.5769FALSE
687.5597FALSE
687.5737FALSE
687.5596FALSE
687.5605FALSE
687.5596FALSE
687.5605FALSE
687.5596FALSE
687.5605FALSE
687.5601FALSE
687.5604FALSE
687.5597FALSE
687.5606FALSE
687.6106FALSE
687.5597FALSE
687.6106FALSE
687.5597FALSE
687.6106FALSE
687.5597FALSE
687.6138FALSE
687.5598FALSE
687.6074FALSE
687.5597FALSE
687.5604FALSE
687.5597FALSE
687.5604FALSE
687.5597FALSE
687.5604FALSE
687.5597FALSE
687.5603FALSE
687.5598FALSE
687.5604FALSE
687.5597FALSE
687.5793FALSE
687.5597FALSE
687.5793FALSE
687.5597FALSE
687.5793FALSE
687.5597FALSE
687.581FALSE
687.5597FALSE
687.5777FALSE
687.5597FALSE
687.5603FALSE
687.5596FALSE
687.5603FALSE
687.5596FALSE
687.5603FALSE
687.5596FALSE
687.5602FALSE
687.5597FALSE
687.5603FALSE
687.5597FALSE
687.5666FALSE
687.5596FALSE
687.5666FALSE
687.5596FALSE
687.5666FALSE
687.5596FALSE
687.5678FALSE
687.5597FALSE
687.5657FALSE
687.5597FALSE
687.5601FALSE
687.5596FALSE
687.5601FALSE
687.5596FALSE
687.5601FALSE
687.5596FALSE
687.5601FALSE
687.5597FALSE
687.5602FALSE
687.5597FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                7.358322                -1.550797 

$value
[1] 687.5596

$counts
function gradient 
      39       39 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

687.594FALSE
687.594FALSE
687.594FALSE
687.5972FALSE
687.5915FALSE
687.5601FALSE
687.5601FALSE
687.5601FALSE
687.56FALSE
687.5601FALSE
687.5759FALSE
687.5759FALSE
687.5759FALSE
687.5776FALSE
687.5743FALSE
687.56FALSE
687.56FALSE
687.56FALSE
687.56FALSE
687.5601FALSE
687.5664FALSE
687.5664FALSE
687.5664FALSE
687.5675FALSE
687.5655FALSE
687.56FALSE
687.56FALSE
687.56FALSE
687.5599FALSE
687.56FALSE
687.5629FALSE
687.5629FALSE
687.563FALSE
687.5638FALSE
687.5621FALSE
687.5599FALSE
687.5599FALSE
687.5599FALSE
687.5599FALSE
687.56FALSE
687.59FALSE
687.59FALSE
687.59FALSE
687.5924FALSE
687.5877FALSE
687.5599FALSE
687.5599FALSE
687.5599FALSE
687.5598FALSE
687.56FALSE
687.5725FALSE
687.5725FALSE
687.5725FALSE
687.5741FALSE
687.5708FALSE
687.5599FALSE
687.5599FALSE
687.5599FALSE
687.5598FALSE
687.5599FALSE
687.5658FALSE
687.5658FALSE
687.5658FALSE
687.5667FALSE
687.5649FALSE
687.5599FALSE
687.5599FALSE
687.5599FALSE
687.5598FALSE
687.5599FALSE
687.5631FALSE
687.5631FALSE
687.5631FALSE
687.564FALSE
687.5622FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5599FALSE
687.5614FALSE
687.5614FALSE
687.5614FALSE
687.5623FALSE
687.5606FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5599FALSE
687.5604FALSE
687.5604FALSE
687.5604FALSE
687.5612FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5599FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5607FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5599FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5603FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5599FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5598FALSE
687.5597FALSE
687.5598FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5596FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5598FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.7006FALSE
687.7006FALSE
687.7006FALSE
687.6974FALSE
687.7039FALSE
687.5601FALSE
687.5601FALSE
687.5601FALSE
687.56FALSE
687.5601FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5598FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5597FALSE
687.5599FALSE
687.5597FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.914037                -1.550547 

$value
[1] 687.5597

$counts
function gradient 
     105      105 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
 954.492    0.705 1499.063 
