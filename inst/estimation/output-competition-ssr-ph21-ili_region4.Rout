
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
519.1248FALSE
525.5696FALSE
391.2453FALSE
519.1188FALSE
525.5621FALSE
391.2442FALSE
519.1307FALSE
525.5772FALSE
391.2464FALSE
518.5229FALSE
525.8944FALSE
400.0517FALSE
518.5396FALSE
525.9136FALSE
400.0833FALSE
518.5063FALSE
525.8752FALSE
517.4213FALSE
400.0203FALSE
522.2191FALSE
517.4146FALSE
391.2154FALSE
522.2176FALSE
517.4282FALSE
391.216FALSE
522.2207FALSE
515.6526FALSE
391.2148FALSE
522.354FALSE
515.6523FALSE
391.1844FALSE
522.3581FALSE
515.653FALSE
391.1849FALSE
522.35FALSE
515.6703FALSE
391.1839FALSE
522.1873FALSE
515.6711FALSE
391.3836FALSE
522.1879FALSE
515.6694FALSE
391.3822FALSE
522.1866FALSE
391.385FALSE
515.6506FALSE
522.1879FALSE
515.6509FALSE
391.1897FALSE
522.1874FALSE
515.6508FALSE
522.1884FALSE
391.1891FALSE
515.6508FALSE
522.1844FALSE
391.1903FALSE
515.6507FALSE
522.1847FALSE
391.1812FALSE
515.6511FALSE
522.1847FALSE
391.1817FALSE
515.6506FALSE
522.1845FALSE
515.6509FALSE
391.1807FALSE
522.1847FALSE
515.6508FALSE
522.1846FALSE
391.1808FALSE
515.6506FALSE
522.1844FALSE
391.1804FALSE
515.6509FALSE
522.1847FALSE
391.1814FALSE
515.6509FALSE
522.1847FALSE
391.1805FALSE
515.6506FALSE
522.1844FALSE
391.181FALSE
515.6509FALSE
522.1847FALSE
391.1806FALSE
515.6508FALSE
391.1839FALSE
522.1847FALSE
515.6506FALSE
391.1833FALSE
522.1844FALSE
515.6509FALSE
391.1845FALSE
522.1847FALSE
515.6508FALSE
391.1803FALSE
522.1847FALSE
515.6506FALSE
391.1807FALSE
391.1809FALSE
522.1844FALSE
515.6509FALSE
391.1803FALSE
522.1847FALSE
515.6509FALSE
391.1808FALSE
522.1847FALSE
515.6506FALSE
391.1808FALSE
522.1844FALSE
515.6509FALSE
391.1803FALSE
522.1847FALSE
391.1808FALSE
515.6509FALSE
391.1809FALSE
522.1847FALSE
515.6506FALSE
391.1803FALSE
522.1844FALSE
515.6509FALSE
391.1808FALSE
522.1847FALSE
391.1808FALSE
515.6509FALSE
391.1803FALSE
522.1847FALSE
515.6506FALSE
391.1808FALSE
522.1844FALSE
515.6509FALSE
391.1809FALSE
522.1847FALSE
515.6509FALSE
391.1803FALSE
522.1847FALSE
515.6506FALSE
391.1808FALSE
522.1844FALSE
515.6509FALSE
391.1809FALSE
515.6509FALSE
522.1847FALSE
391.1803FALSE
515.6506FALSE
522.1847FALSE
391.1808FALSE
515.6509FALSE
522.1844FALSE
391.1809FALSE
515.6509FALSE
522.1847FALSE
391.1803FALSE
515.6506FALSE
391.1808FALSE
522.1847FALSE
515.6509FALSE
391.1808FALSE
522.1844FALSE
515.6509FALSE
391.1803FALSE
522.1847FALSE
515.6506FALSE
391.1808FALSE
522.1847FALSE
515.6509FALSE
391.1809FALSE
515.6509FALSE
522.1844FALSE
391.1803FALSE
515.6506FALSE
522.1847FALSE
391.1808FALSE
515.6509FALSE
522.1847FALSE
391.1809FALSE
515.6509FALSE
522.1844FALSE
391.1803FALSE
515.6506FALSE
522.1847FALSE
391.1808FALSE
515.6509FALSE
515.6509FALSE
391.1809FALSE
522.1847FALSE
515.6506FALSE
391.1803FALSE
522.1844FALSE
515.6509FALSE
391.1808FALSE
522.1847FALSE
391.1809FALSE
515.6509FALSE
522.1847FALSE
$par
smooth_log_cases_lag0.bw 
               -1.732753 

$value
[1] 522.1844

$counts
function gradient 
      21       21 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

515.6506FALSE
391.1803FALSE
515.6509FALSE
391.1808FALSE
391.1809FALSE
515.6509FALSE
391.1803FALSE
515.6506FALSE
391.1808FALSE
515.6509FALSE
391.1809FALSE
515.6509FALSE
391.1803FALSE
515.6506FALSE
391.1808FALSE
515.6509FALSE
391.1809FALSE
515.6509FALSE
391.1803FALSE
515.6506FALSE
391.1808FALSE
391.1809FALSE
515.6509FALSE
391.1803FALSE
515.6509FALSE
391.1808FALSE
515.6506FALSE
391.1809FALSE
515.6509FALSE
391.1803FALSE
391.1808FALSE
515.6509FALSE
515.6506FALSE
391.1809FALSE
515.6509FALSE
391.1803FALSE
515.6509FALSE
391.1808FALSE
391.1809FALSE
515.6506FALSE
391.1803FALSE
515.6509FALSE
391.1808FALSE
515.6509FALSE
$par
smooth_log_cases_lag1.bw 
               -1.657506 

$value
[1] 515.6506

$counts
function gradient 
      29       29 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1966FALSE
391.197FALSE
391.1961FALSE
391.1806FALSE
391.1811FALSE
391.1805FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
391.1803FALSE
391.1808FALSE
391.1809FALSE
$par
time_ind_lag0.bw 
       -2.210719 

$value
[1] 391.1803

$counts
function gradient 
      57       57 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

409.9915FALSE
415.727FALSE
415.7299FALSE
410.0021FALSE
415.7238FALSE
409.9807FALSE
409.9617FALSE
415.6979FALSE
415.7559FALSE
423.048FALSE
429.6042FALSE
423.0393FALSE
429.5927FALSE
423.0566FALSE
429.6156FALSE
423.1036FALSE
429.667FALSE
422.9924FALSE
429.5414FALSE
404.3169FALSE
411.1831FALSE
404.3138FALSE
411.1812FALSE
404.32FALSE
411.185FALSE
404.3124FALSE
411.175FALSE
404.3215FALSE
411.1912FALSE
404.1306FALSE
410.5298FALSE
404.1292FALSE
410.5309FALSE
404.1319FALSE
410.5287FALSE
404.131FALSE
410.5282FALSE
404.1302FALSE
410.5315FALSE
404.1058FALSE
410.6764FALSE
404.1038FALSE
410.6769FALSE
404.1078FALSE
410.6759FALSE
404.107FALSE
410.6834FALSE
404.1046FALSE
410.6694FALSE
404.4042FALSE
410.5188FALSE
404.4074FALSE
410.5202FALSE
404.4008FALSE
410.5173FALSE
404.4005FALSE
410.5172FALSE
404.408FALSE
410.5204FALSE
404.0921FALSE
410.5105FALSE
404.0896FALSE
410.5124FALSE
404.0945FALSE
410.5087FALSE
404.0935FALSE
410.5095FALSE
404.0906FALSE
410.5121FALSE
404.0764FALSE
410.5783FALSE
404.0735FALSE
410.5781FALSE
404.0793FALSE
410.5784FALSE
404.0781FALSE
410.5849FALSE
404.0748FALSE
410.5717FALSE
404.25FALSE
410.5083FALSE
404.2556FALSE
410.5093FALSE
404.2446FALSE
410.5079FALSE
404.2441FALSE
410.5096FALSE
404.256FALSE
410.5083FALSE
404.0853FALSE
410.5114FALSE
404.092FALSE
410.5106FALSE
404.0785FALSE
410.5121FALSE
404.0778FALSE
410.513FALSE
404.0927FALSE
410.5098FALSE
404.0764FALSE
410.5072FALSE
404.0735FALSE
410.5068FALSE
404.0793FALSE
410.5083FALSE
404.0781FALSE
410.5093FALSE
404.0748FALSE
410.5059FALSE
404.3464FALSE
410.5091FALSE
404.3516FALSE
410.511FALSE
404.341FALSE
410.5071FALSE
404.3406FALSE
410.507FALSE
404.352FALSE
410.5111FALSE
410.5047FALSE
404.0934FALSE
410.5066FALSE
404.1001FALSE
410.505FALSE
404.0867FALSE
410.5057FALSE
404.086FALSE
410.5065FALSE
404.1009FALSE
410.5042FALSE
404.0751FALSE
410.5054FALSE
404.0759FALSE
410.5044FALSE
404.078FALSE
410.5051FALSE
410.5053FALSE
404.0768FALSE
410.5047FALSE
404.0765FALSE
410.5057FALSE
404.0716FALSE
410.5036FALSE
410.5034FALSE
404.0685FALSE
410.506FALSE
404.0745FALSE
410.5042FALSE
404.0739FALSE
410.5049FALSE
410.5036FALSE
404.0693FALSE
410.5035FALSE
404.0707FALSE
410.5051FALSE
404.0706FALSE
410.5042FALSE
404.0739FALSE
410.5049FALSE
404.0741FALSE
410.504FALSE
404.0701FALSE
410.5046FALSE
410.5049FALSE
404.0685FALSE
410.5042FALSE
404.0733FALSE
410.5053FALSE
404.0716FALSE
410.5044FALSE
410.505FALSE
404.0716FALSE
410.5052FALSE
404.0728FALSE
410.5042FALSE
404.0685FALSE
410.5054FALSE
404.0718FALSE
410.5044FALSE
404.0715FALSE
410.505FALSE
404.0715FALSE
410.5053FALSE
404.0718FALSE
410.5042FALSE
404.0685FALSE
410.5054FALSE
404.0728FALSE
410.5044FALSE
404.0715FALSE
410.5051FALSE
404.0715FALSE
410.5053FALSE
404.0723FALSE
410.5042FALSE
404.0685FALSE
410.5054FALSE
404.0722FALSE
410.5044FALSE
404.0715FALSE
410.5051FALSE
404.0715FALSE
410.5053FALSE
404.0717FALSE
410.5042FALSE
404.0685FALSE
410.5054FALSE
404.0727FALSE
410.5044FALSE
410.5051FALSE
404.0715FALSE
410.5053FALSE
404.0715FALSE
410.5042FALSE
404.0722FALSE
410.5054FALSE
404.0685FALSE
410.5044FALSE
404.0728FALSE
410.5051FALSE
404.0715FALSE
410.5053FALSE
410.5042FALSE
404.0715FALSE
410.5054FALSE
404.0723FALSE
410.5044FALSE
410.5051FALSE
404.0685FALSE
410.5053FALSE
404.0728FALSE
410.5042FALSE
404.0715FALSE
410.5054FALSE
410.5044FALSE
404.0715FALSE
410.5051FALSE
404.0723FALSE
410.5053FALSE
404.1559FALSE
410.5042FALSE
404.1536FALSE
410.5054FALSE
404.1586FALSE
410.5044FALSE
410.5051FALSE
404.1554FALSE
410.5053FALSE
404.1565FALSE
410.5042FALSE
404.0685FALSE
410.5054FALSE
404.0721FALSE
410.5044FALSE
404.0715FALSE
410.5051FALSE
404.0713FALSE
410.5053FALSE
404.0723FALSE
410.5042FALSE
404.0684FALSE
410.5054FALSE
404.0725FALSE
410.5044FALSE
410.5051FALSE
404.0714FALSE
410.5053FALSE
404.0714FALSE
404.072FALSE
410.5042FALSE
404.0684FALSE
410.5054FALSE
404.0722FALSE
410.5044FALSE
404.0714FALSE
410.5051FALSE
410.5053FALSE
404.0713FALSE
410.5042FALSE
404.0721FALSE
410.5054FALSE
404.0686FALSE
410.5044FALSE
404.0718FALSE
410.5051FALSE
404.0716FALSE
410.5053FALSE
404.0715FALSE
404.0719FALSE
410.5042FALSE
404.0684FALSE
410.5054FALSE
404.0722FALSE
404.0714FALSE
410.5044FALSE
404.0713FALSE
404.0721FALSE
410.5051FALSE
404.0684FALSE
410.5053FALSE
404.0722FALSE
404.0714FALSE
410.5042FALSE
404.0713FALSE
410.5054FALSE
410.5044FALSE
404.0721FALSE
410.5051FALSE
404.0684FALSE
410.5053FALSE
404.0722FALSE
410.5042FALSE
404.0714FALSE
410.5054FALSE
404.0713FALSE
410.5044FALSE
410.5051FALSE
404.0721FALSE
410.5053FALSE
404.0684FALSE
410.5042FALSE
404.0722FALSE
410.5054FALSE
410.5044FALSE
404.0714FALSE
410.5051FALSE
410.5053FALSE
404.0713FALSE
418.2101FALSE
404.0721FALSE
418.1898FALSE
404.0684FALSE
418.2304FALSE
404.0722FALSE
418.2426FALSE
404.0714FALSE
418.1776FALSE
404.0713FALSE
410.5112FALSE
410.5105FALSE
404.0721FALSE
410.5119FALSE
404.0684FALSE
410.5128FALSE
404.0722FALSE
410.5097FALSE
404.0714FALSE
410.5041FALSE
404.0713FALSE
410.5043FALSE
404.0721FALSE
404.0684FALSE
410.5051FALSE
404.0722FALSE
404.0714FALSE
410.5057FALSE
404.0713FALSE
410.5045FALSE
404.0721FALSE
404.0684FALSE
410.504FALSE
404.0722FALSE
410.5049FALSE
404.0714FALSE
404.0713FALSE
410.5048FALSE
404.0721FALSE
404.0684FALSE
410.5054FALSE
404.0722FALSE
410.5048FALSE
404.0714FALSE
404.0713FALSE
410.504FALSE
404.0721FALSE
410.5049FALSE
404.0684FALSE
404.0722FALSE
410.5047FALSE
404.0714FALSE
404.0713FALSE
410.5053FALSE
404.0721FALSE
410.5048FALSE
404.0684FALSE
404.0722FALSE
410.504FALSE
404.0714FALSE
404.0713FALSE
410.5049FALSE
404.0721FALSE
404.0684FALSE
410.5048FALSE
404.0722FALSE
410.5054FALSE
404.0714FALSE
404.0713FALSE
410.5048FALSE
404.0721FALSE
404.0684FALSE
410.504FALSE
404.0722FALSE
410.5049FALSE
404.0714FALSE
404.0713FALSE
410.5048FALSE
404.0721FALSE
404.0684FALSE
410.5054FALSE
404.0722FALSE
404.0714FALSE
410.5048FALSE
404.0713FALSE
404.0721FALSE
410.504FALSE
404.0684FALSE
410.5049FALSE
404.0722FALSE
404.0714FALSE
410.5048FALSE
404.0713FALSE
410.5054FALSE
404.0721FALSE
404.0684FALSE
410.5048FALSE
404.0722FALSE
410.504FALSE
404.0714FALSE
404.0713FALSE
410.5049FALSE
404.0721FALSE
404.0684FALSE
410.5048FALSE
404.0722FALSE
404.0714FALSE
410.5054FALSE
404.0713FALSE
410.5048FALSE
404.0721FALSE
404.0684FALSE
410.504FALSE
404.0722FALSE
404.0714FALSE
410.5049FALSE
404.0713FALSE
410.5048FALSE
404.0721FALSE
410.5054FALSE
404.0684FALSE
410.5048FALSE
410.504FALSE
404.0722FALSE
410.5049FALSE
404.0714FALSE
410.5048FALSE
404.0713FALSE
404.0721FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
               -2.341691                -1.813645 

$value
[1] 404.0684

$counts
function gradient 
      47       47 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
410.504FALSE
410.5049FALSE
410.5048FALSE
410.5054FALSE
410.5048FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
               -2.305697                -1.714478 

$value
[1] 410.504

$counts
function gradient 
      57       57 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1265.250    0.611 1036.421 
