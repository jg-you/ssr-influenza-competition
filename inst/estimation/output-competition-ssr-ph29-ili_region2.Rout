
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
579.1843FALSE
581.6187FALSE
456.8023FALSE
579.1823FALSE
581.6179FALSE
456.802FALSE
579.1862FALSE
581.6195FALSE
456.8025FALSE
570.6472FALSE
570.6426FALSE
569.5906FALSE
461.9167FALSE
570.6518FALSE
569.5825FALSE
461.9441FALSE
589.7031FALSE
589.7031FALSE
569.5988FALSE
461.8895FALSE
589.703FALSE
456.8059FALSE
589.6996FALSE
570.9119FALSE
456.8065FALSE
589.6997FALSE
570.921FALSE
456.8053FALSE
570.9028FALSE
589.6995FALSE
456.7645FALSE
570.1171FALSE
571.281FALSE
456.7647FALSE
570.1163FALSE
571.2941FALSE
570.118FALSE
456.7644FALSE
581.2888FALSE
456.777FALSE
571.268FALSE
581.3019FALSE
456.7766FALSE
568.5809FALSE
581.2757FALSE
456.7774FALSE
570.1097FALSE
568.5812FALSE
456.7635FALSE
570.1096FALSE
568.5805FALSE
456.7637FALSE
570.1098FALSE
456.7634FALSE
570.1095FALSE
571.4646FALSE
456.7628FALSE
570.1094FALSE
456.7629FALSE
571.4524FALSE
570.1096FALSE
456.7626FALSE
570.1093FALSE
571.4769FALSE
456.7688FALSE
570.1097FALSE
568.5797FALSE
570.1093FALSE
456.7684FALSE
568.5794FALSE
570.1094FALSE
456.7693FALSE
570.1094FALSE
456.7627FALSE
568.5799FALSE
570.1095FALSE
456.7626FALSE
570.1093FALSE
568.5796FALSE
456.763FALSE
570.1097FALSE
568.5799FALSE
570.1093FALSE
456.7626FALSE
568.5794FALSE
570.1094FALSE
456.7628FALSE
568.5794FALSE
570.1093FALSE
456.7627FALSE
568.5796FALSE
570.1094FALSE
456.7636FALSE
568.5796FALSE
570.1093FALSE
456.7634FALSE
568.5794FALSE
570.1097FALSE
568.5796FALSE
456.7639FALSE
570.1093FALSE
568.5796FALSE
456.7626FALSE
568.5794FALSE
570.1094FALSE
568.5796FALSE
456.7627FALSE
570.1093FALSE
568.5796FALSE
456.7627FALSE
570.1094FALSE
568.5794FALSE
570.1093FALSE
568.5796FALSE
456.7626FALSE
570.1097FALSE
568.5796FALSE
456.7627FALSE
570.1093FALSE
568.5794FALSE
456.7627FALSE
570.1094FALSE
456.7626FALSE
568.5796FALSE
570.1093FALSE
456.7627FALSE
568.5796FALSE
570.1094FALSE
456.7627FALSE
568.5794FALSE
570.1093FALSE
456.7626FALSE
568.5796FALSE
570.1097FALSE
456.7627FALSE
568.5796FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
568.5794FALSE
570.1093FALSE
568.5796FALSE
456.7626FALSE
570.1094FALSE
456.7627FALSE
568.5796FALSE
570.1093FALSE
456.7627FALSE
568.5794FALSE
570.1097FALSE
456.7626FALSE
568.5796FALSE
570.1093FALSE
456.7627FALSE
568.5796FALSE
570.1093FALSE
456.7627FALSE
568.5794FALSE
570.1093FALSE
456.7626FALSE
568.5796FALSE
570.1094FALSE
568.5796FALSE
456.7627FALSE
570.1093FALSE
456.7627FALSE
568.5794FALSE
570.1097FALSE
456.7626FALSE
568.5796FALSE
570.1093FALSE
456.7627FALSE
568.5796FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
568.5794FALSE
456.7626FALSE
570.1094FALSE
568.5796FALSE
456.7627FALSE
570.1093FALSE
568.5796FALSE
456.7627FALSE
570.1097FALSE
568.5794FALSE
456.7626FALSE
570.1093FALSE
568.5796FALSE
570.1093FALSE
456.7627FALSE
568.5796FALSE
570.1093FALSE
456.7627FALSE
568.5794FALSE
570.1094FALSE
568.5796FALSE
570.1093FALSE
456.7626FALSE
568.5796FALSE
570.1093FALSE
456.7627FALSE
568.5794FALSE
570.1093FALSE
568.5796FALSE
456.7627FALSE
570.1093FALSE
568.5796FALSE
456.7626FALSE
570.1093FALSE
568.5794FALSE
456.7627FALSE
570.1093FALSE
568.5796FALSE
456.7627FALSE
570.1093FALSE
568.5796FALSE
456.7626FALSE
570.1093FALSE
568.5794FALSE
456.7627FALSE
570.1093FALSE
568.5796FALSE
456.7627FALSE
570.1093FALSE
568.5796FALSE
456.7626FALSE
570.1093FALSE
568.5794FALSE
456.7627FALSE
570.1093FALSE
568.5796FALSE
456.7627FALSE
568.5796FALSE
570.1093FALSE
568.5794FALSE
570.1093FALSE
456.7626FALSE
568.5796FALSE
570.1093FALSE
568.5796FALSE
$par
smooth_log_cases_lag0.bw 
               -1.092659 

$value
[1] 568.5794

$counts
function gradient 
      26       26 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

456.7627FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
456.7626FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
456.7626FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
456.7626FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
456.7626FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
570.1093FALSE
456.7627FALSE
456.7626FALSE
570.1093FALSE
456.7627FALSE
570.1093FALSE
456.7627FALSE
$par
time_ind_lag0.bw 
       -2.186776 

$value
[1] 456.7626

$counts
function gradient 
      31       31 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

570.1093FALSE
570.1093FALSE
570.1093FALSE
570.1093FALSE
570.1093FALSE
570.1093FALSE
570.1093FALSE
570.1093FALSE
570.1093FALSE
570.1093FALSE
570.1093FALSE
$par
smooth_log_cases_lag1.bw 
               -1.071308 

$value
[1] 570.1093

$counts
function gradient 
      38       38 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

505.0856FALSE
504.6741FALSE
504.6597FALSE
505.0648FALSE
504.6884FALSE
505.107FALSE
504.6508FALSE
505.0611FALSE
504.6974FALSE
505.1103FALSE
487.6663FALSE
480.6959FALSE
487.6378FALSE
480.6663FALSE
487.6948FALSE
480.7255FALSE
487.6917FALSE
480.7181FALSE
487.641FALSE
480.6737FALSE
476.5948FALSE
472.0038FALSE
476.5779FALSE
471.9926FALSE
476.6117FALSE
472.0151FALSE
476.6208FALSE
472.0454FALSE
476.5689FALSE
461.1532FALSE
471.9623FALSE
459.8386FALSE
461.1462FALSE
459.835FALSE
461.1601FALSE
459.8422FALSE
461.1539FALSE
459.8463FALSE
461.1525FALSE
459.831FALSE
459.1322FALSE
458.6579FALSE
459.1281FALSE
458.6554FALSE
459.1363FALSE
459.1322FALSE
458.6603FALSE
458.662FALSE
459.1322FALSE
458.6537FALSE
457.7219FALSE
457.5966FALSE
457.7202FALSE
457.5954FALSE
457.7237FALSE
457.5979FALSE
457.7217FALSE
457.5984FALSE
457.7221FALSE
457.5949FALSE
457.2575FALSE
457.1687FALSE
457.2566FALSE
457.1681FALSE
457.2584FALSE
457.1693FALSE
457.2573FALSE
457.1694FALSE
457.2577FALSE
457.168FALSE
457.0222FALSE
456.9543FALSE
457.0218FALSE
456.954FALSE
457.0227FALSE
456.9547FALSE
457.022FALSE
456.955FALSE
457.0225FALSE
456.9537FALSE
456.9005FALSE
457.3054FALSE
456.9003FALSE
457.3052FALSE
456.9008FALSE
457.3055FALSE
456.9002FALSE
457.3033FALSE
456.9009FALSE
457.3074FALSE
457.9751FALSE
456.9137FALSE
457.975FALSE
456.9134FALSE
457.9752FALSE
457.9816FALSE
456.914FALSE
457.9687FALSE
456.9133FALSE
456.8597FALSE
456.914FALSE
456.8596FALSE
456.8738FALSE
456.8599FALSE
456.8735FALSE
456.8604FALSE
456.874FALSE
456.859FALSE
456.8734FALSE
456.8567FALSE
456.8742FALSE
456.8565FALSE
456.8744FALSE
456.8568FALSE
456.8743FALSE
456.8568FALSE
456.8744FALSE
456.8565FALSE
456.875FALSE
456.821FALSE
456.8737FALSE
456.8208FALSE
456.8288FALSE
456.8211FALSE
456.8287FALSE
456.8289FALSE
456.8207FALSE
456.8292FALSE
456.8212FALSE
456.8284FALSE
456.7863FALSE
456.8106FALSE
456.7863FALSE
456.8105FALSE
456.7863FALSE
456.8107FALSE
456.7867FALSE
456.8107FALSE
456.7859FALSE
456.8105FALSE
456.7851FALSE
456.7793FALSE
456.7851FALSE
456.7793FALSE
456.7851FALSE
456.7793FALSE
456.7852FALSE
456.7794FALSE
456.785FALSE
456.7793FALSE
456.7755FALSE
456.7764FALSE
456.7755FALSE
456.7764FALSE
456.7755FALSE
456.7764FALSE
456.7756FALSE
456.7765FALSE
456.7754FALSE
456.7763FALSE
456.7668FALSE
456.7681FALSE
456.7667FALSE
456.7681FALSE
456.7668FALSE
456.7682FALSE
456.7665FALSE
456.7683FALSE
456.767FALSE
456.768FALSE
456.7673FALSE
456.7673FALSE
456.7858FALSE
456.7673FALSE
456.7858FALSE
456.7675FALSE
456.7858FALSE
456.7671FALSE
456.7855FALSE
456.7657FALSE
456.7862FALSE
456.7657FALSE
456.7655FALSE
456.7657FALSE
456.7655FALSE
456.7659FALSE
456.7655FALSE
456.766FALSE
456.7657FALSE
456.7652FALSE
456.7654FALSE
456.7652FALSE
456.7638FALSE
456.7652FALSE
456.7638FALSE
456.7654FALSE
456.7638FALSE
456.7652FALSE
456.764FALSE
456.764FALSE
456.764FALSE
456.764FALSE
456.7641FALSE
456.764FALSE
456.7641FALSE
456.7638FALSE
456.7641FALSE
456.7643FALSE
456.7639FALSE
456.7635FALSE
456.7644FALSE
456.7635FALSE
456.7638FALSE
456.7635FALSE
456.7638FALSE
456.7633FALSE
456.7638FALSE
456.7638FALSE
456.764FALSE
456.7636FALSE
456.7641FALSE
456.7636FALSE
456.7635FALSE
456.7636FALSE
456.7635FALSE
456.7638FALSE
456.7635FALSE
456.7635FALSE
456.7635FALSE
456.763FALSE
456.7637FALSE
456.763FALSE
456.7629FALSE
456.7629FALSE
456.763FALSE
456.7629FALSE
456.7632FALSE
456.7631FALSE
456.7629FALSE
456.7632FALSE
456.7661FALSE
456.7628FALSE
456.7661FALSE
456.7628FALSE
456.7661FALSE
456.7628FALSE
456.7656FALSE
456.7629FALSE
456.7665FALSE
456.7629FALSE
456.7629FALSE
456.7627FALSE
456.7629FALSE
456.7627FALSE
456.7629FALSE
456.7627FALSE
456.7628FALSE
456.7628FALSE
456.7632FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.763FALSE
456.7628FALSE
456.7629FALSE
456.7628FALSE
456.763FALSE
456.7631FALSE
456.7631FALSE
456.763FALSE
456.7631FALSE
456.763FALSE
456.7633FALSE
456.7628FALSE
456.7629FALSE
456.7626FALSE
456.7633FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.763FALSE
456.7626FALSE
456.763FALSE
456.7626FALSE
456.7627FALSE
456.7628FALSE
456.7627FALSE
456.7628FALSE
456.7627FALSE
456.7626FALSE
456.7629FALSE
456.7626FALSE
456.7629FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7627FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7628FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                5.231305                -2.186806 

$value
[1] 456.7626

$counts
function gradient 
      43       43 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7627FALSE
456.7627FALSE
456.7627FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
456.7626FALSE
456.7626FALSE
456.7626FALSE
456.7628FALSE
456.7628FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.499381                -2.186767 

$value
[1] 456.7626

$counts
function gradient 
      70       70 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1208.747    0.990 1193.976 
