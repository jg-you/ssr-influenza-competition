
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
346.1382FALSE
407.8394FALSE
402.734FALSE
346.1334FALSE
407.821FALSE
402.714FALSE
346.1429FALSE
407.8577FALSE
402.7539FALSE
338.5696FALSE
401.1629FALSE
395.2748FALSE
338.5697FALSE
401.1761FALSE
395.2903FALSE
338.5695FALSE
401.1497FALSE
395.2593FALSE
338.5909FALSE
399.3961FALSE
394.0617FALSE
338.589FALSE
399.3901FALSE
394.0542FALSE
338.5931FALSE
399.4021FALSE
338.5695FALSE
394.0693FALSE
399.004FALSE
338.5696FALSE
393.3218FALSE
399.0044FALSE
399.0036FALSE
393.3197FALSE
338.5694FALSE
399.0047FALSE
338.5694FALSE
393.324FALSE
399.0045FALSE
338.5694FALSE
393.2615FALSE
399.005FALSE
338.5694FALSE
393.2617FALSE
399.0037FALSE
338.5694FALSE
393.2613FALSE
399.0036FALSE
338.5694FALSE
393.2607FALSE
399.0038FALSE
338.5694FALSE
$par
time_ind_lag0.bw 
       -1.307323 

$value
[1] 338.5694

$counts
function gradient 
       6        6 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

393.2608FALSE
399.0036FALSE
393.2606FALSE
399.0038FALSE
393.2605FALSE
399.0037FALSE
393.2605FALSE
399.0036FALSE
393.2605FALSE
399.0037FALSE
393.2605FALSE
399.0037FALSE
399.0036FALSE
393.2605FALSE
399.0038FALSE
393.2605FALSE
$par
smooth_log_cases_lag0.bw 
                -1.55007 

$value
[1] 393.2605

$counts
function gradient 
       8        8 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
399.0036FALSE
399.0038FALSE
399.0037FALSE
$par
smooth_log_cases_lag1.bw 
                -1.59241 

$value
[1] 399.0036

$counts
function gradient 
      24       24 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

362.5301FALSE
362.3073FALSE
362.2882FALSE
362.51FALSE
362.3264FALSE
362.5502FALSE
362.3159FALSE
362.5358FALSE
362.2994FALSE
362.5244FALSE
348.6396FALSE
347.0472FALSE
348.6303FALSE
347.0385FALSE
348.6492FALSE
347.0559FALSE
348.6327FALSE
347.0405FALSE
348.6466FALSE
347.0539FALSE
340.4377FALSE
340.4121FALSE
340.4099FALSE
340.4353FALSE
340.4142FALSE
340.4401FALSE
340.4236FALSE
340.4306FALSE
340.4008FALSE
340.4448FALSE
339.8158FALSE
347.7458FALSE
339.8143FALSE
347.7466FALSE
339.8173FALSE
347.7451FALSE
339.8095FALSE
347.7964FALSE
339.8222FALSE
347.6954FALSE
339.4519FALSE
339.2446FALSE
339.45FALSE
339.2435FALSE
339.4538FALSE
339.2458FALSE
339.4498FALSE
339.2417FALSE
339.4541FALSE
339.2476FALSE
339.2146FALSE
338.8617FALSE
339.2137FALSE
338.8613FALSE
339.2156FALSE
338.8621FALSE
339.2202FALSE
338.8659FALSE
339.2093FALSE
338.8575FALSE
338.9575FALSE
338.736FALSE
338.9566FALSE
338.7357FALSE
338.9583FALSE
338.9591FALSE
338.7363FALSE
338.9559FALSE
338.7365FALSE
338.7598FALSE
338.7356FALSE
338.7594FALSE
338.6719FALSE
338.7602FALSE
338.6717FALSE
338.7574FALSE
338.7622FALSE
338.6721FALSE
338.6742FALSE
338.6722FALSE
338.6739FALSE
338.6717FALSE
338.6744FALSE
338.6224FALSE
338.6729FALSE
338.6223FALSE
338.676FALSE
338.6224FALSE
338.6275FALSE
338.6208FALSE
338.6274FALSE
338.6239FALSE
338.6276FALSE
338.5951FALSE
338.6279FALSE
338.6271FALSE
338.5951FALSE
338.5952FALSE
338.6064FALSE
338.5952FALSE
338.6063FALSE
338.5951FALSE
338.6064FALSE
338.5819FALSE
338.6067FALSE
338.5818FALSE
338.606FALSE
338.5819FALSE
338.5819FALSE
338.5852FALSE
338.5819FALSE
338.5852FALSE
338.5756FALSE
338.5852FALSE
338.5756FALSE
338.5854FALSE
338.5757FALSE
338.5851FALSE
338.5757FALSE
338.5773FALSE
338.5758FALSE
338.5773FALSE
338.5725FALSE
338.5773FALSE
338.5725FALSE
338.5773FALSE
338.5725FALSE
338.5773FALSE
338.5725FALSE
338.5731FALSE
338.5724FALSE
338.5731FALSE
338.5712FALSE
338.5732FALSE
338.5712FALSE
338.5732FALSE
338.5712FALSE
338.5731FALSE
338.5823FALSE
338.5713FALSE
338.5822FALSE
338.5711FALSE
338.5823FALSE
338.7049FALSE
338.5806FALSE
338.7049FALSE
338.5839FALSE
338.7049FALSE
338.5727FALSE
338.7008FALSE
338.7089FALSE
338.5727FALSE
338.5711FALSE
338.5727FALSE
338.5711FALSE
338.5728FALSE
338.5711FALSE
338.5727FALSE
338.5712FALSE
338.5708FALSE
338.571FALSE
338.5708FALSE
338.5708FALSE
338.5701FALSE
338.5708FALSE
338.5701FALSE
338.5712FALSE
338.5701FALSE
338.5701FALSE
338.5702FALSE
338.5702FALSE
338.5702FALSE
338.5698FALSE
338.5702FALSE
338.5698FALSE
338.5704FALSE
338.5698FALSE
338.5701FALSE
338.5698FALSE
338.57FALSE
338.5698FALSE
338.57FALSE
338.5696FALSE
338.57FALSE
338.5696FALSE
338.5701FALSE
338.5696FALSE
338.5699FALSE
338.5696FALSE
338.5696FALSE
338.5696FALSE
338.5696FALSE
338.5695FALSE
338.5695FALSE
338.5696FALSE
338.5695FALSE
338.5696FALSE
338.5695FALSE
338.5696FALSE
338.5695FALSE
338.5695FALSE
338.5694FALSE
338.5695FALSE
338.5694FALSE
338.5695FALSE
338.5694FALSE
338.5695FALSE
338.5694FALSE
338.5697FALSE
338.5694FALSE
338.5694FALSE
338.5696FALSE
338.5694FALSE
338.5696FALSE
338.5696FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5703FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.289311                -1.306859 

$value
[1] 338.5694

$counts
function gradient 
      27       27 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
338.5694FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                6.967188                -1.307189 

$value
[1] 338.5694

$counts
function gradient 
      28       28 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
620.263   0.751 539.427 
