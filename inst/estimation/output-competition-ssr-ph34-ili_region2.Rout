
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
571.5363FALSE
454.3253FALSE
573.6352FALSE
454.3248FALSE
573.6322FALSE
571.5326FALSE
571.54FALSE
454.3258FALSE
573.6381FALSE
575.5621FALSE
459.0832FALSE
577.8443FALSE
575.5647FALSE
459.1098FALSE
577.8491FALSE
575.5594FALSE
459.0571FALSE
571.2585FALSE
577.8394FALSE
571.2575FALSE
573.4286FALSE
454.2348FALSE
571.2594FALSE
573.4277FALSE
454.2349FALSE
571.2146FALSE
573.4295FALSE
454.2347FALSE
571.2133FALSE
573.4493FALSE
571.2159FALSE
454.2296FALSE
571.2486FALSE
454.2298FALSE
573.4503FALSE
571.252FALSE
454.2294FALSE
571.2453FALSE
573.4486FALSE
454.2914FALSE
571.1333FALSE
573.4233FALSE
454.2908FALSE
573.424FALSE
454.292FALSE
571.1327FALSE
454.2267FALSE
573.4229FALSE
571.1339FALSE
454.2269FALSE
573.4233FALSE
571.8275FALSE
573.423FALSE
571.8349FALSE
454.2266FALSE
573.4236FALSE
571.8201FALSE
454.2274FALSE
573.4226FALSE
571.1257FALSE
454.2273FALSE
573.4229FALSE
571.1257FALSE
454.2275FALSE
573.4229FALSE
571.1257FALSE
454.2267FALSE
573.4226FALSE
571.1257FALSE
454.2266FALSE
573.4229FALSE
571.1257FALSE
454.2268FALSE
573.4229FALSE
571.1256FALSE
573.4226FALSE
571.128FALSE
454.2309FALSE
573.4229FALSE
571.1273FALSE
454.231FALSE
573.4229FALSE
571.1287FALSE
454.2307FALSE
573.4226FALSE
571.1257FALSE
454.2269FALSE
573.4229FALSE
454.227FALSE
571.1257FALSE
573.4229FALSE
571.1257FALSE
454.2267FALSE
573.4226FALSE
454.2266FALSE
573.4229FALSE
571.1256FALSE
454.2267FALSE
573.4229FALSE
571.1257FALSE
454.2267FALSE
573.4226FALSE
571.1257FALSE
$par
smooth_log_cases_lag0.bw 
               -2.050058 

$value
[1] 571.1256

$counts
function gradient 
      12       12 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

454.2266FALSE
573.4229FALSE
454.2267FALSE
573.4229FALSE
454.2267FALSE
573.4226FALSE
454.2266FALSE
573.4229FALSE
454.2267FALSE
573.4229FALSE
454.2267FALSE
$par
time_ind_lag0.bw 
       -2.098995 

$value
[1] 454.2266

$counts
function gradient 
      13       13 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4497FALSE
573.4489FALSE
573.4504FALSE
573.4227FALSE
573.4228FALSE
573.423FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
573.4226FALSE
573.4229FALSE
573.4229FALSE
$par
smooth_log_cases_lag1.bw 
               -2.174386 

$value
[1] 573.4226

$counts
function gradient 
      42       42 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

506.1994FALSE
507.6582FALSE
507.651FALSE
506.1858FALSE
506.2129FALSE
507.6652FALSE
506.177FALSE
507.629FALSE
506.2218FALSE
507.6872FALSE
483.0892FALSE
491.4486FALSE
483.0801FALSE
491.4327FALSE
483.0982FALSE
491.4644FALSE
483.0995FALSE
491.4817FALSE
483.079FALSE
491.4154FALSE
479.0922FALSE
489.0056FALSE
479.0716FALSE
489.0108FALSE
479.1127FALSE
489.0004FALSE
479.0905FALSE
488.9789FALSE
479.0939FALSE
489.0324FALSE
458.111FALSE
571.1512FALSE
458.104FALSE
571.1496FALSE
458.1181FALSE
571.1527FALSE
458.111FALSE
571.1512FALSE
458.1111FALSE
571.1511FALSE
454.8873FALSE
506.036FALSE
454.8871FALSE
506.0274FALSE
454.8875FALSE
506.0445FALSE
454.885FALSE
506.0937FALSE
454.8896FALSE
505.9783FALSE
454.5848FALSE
487.1988FALSE
487.1805FALSE
454.5845FALSE
487.2178FALSE
454.585FALSE
487.2065FALSE
454.583FALSE
487.1914FALSE
454.5865FALSE
486.1715FALSE
454.392FALSE
486.1607FALSE
454.3917FALSE
486.1822FALSE
454.3923FALSE
486.1717FALSE
454.392FALSE
486.1713FALSE
454.3919FALSE
484.1741FALSE
454.366FALSE
484.1611FALSE
454.3657FALSE
484.187FALSE
454.3662FALSE
484.1796FALSE
454.3661FALSE
484.1687FALSE
454.3659FALSE
496.3126FALSE
454.3237FALSE
496.3034FALSE
454.3236FALSE
496.322FALSE
454.3238FALSE
496.3902FALSE
454.323FALSE
496.236FALSE
454.3244FALSE
483.5295FALSE
454.2969FALSE
483.5192FALSE
454.2968FALSE
483.5428FALSE
454.2971FALSE
483.5547FALSE
454.2971FALSE
483.5085FALSE
454.2968FALSE
482.1446FALSE
454.2756FALSE
454.2755FALSE
482.1336FALSE
454.2757FALSE
482.1555FALSE
454.2755FALSE
482.1619FALSE
454.2757FALSE
482.1274FALSE
454.2479FALSE
464.6182FALSE
454.2478FALSE
464.6157FALSE
454.2479FALSE
464.6208FALSE
454.2479FALSE
464.6595FALSE
454.248FALSE
464.577FALSE
454.238FALSE
456.972FALSE
454.238FALSE
456.9717FALSE
454.238FALSE
456.9723FALSE
454.2382FALSE
454.2378FALSE
456.9875FALSE
454.2322FALSE
456.9566FALSE
454.2322FALSE
455.541FALSE
454.2322FALSE
455.5408FALSE
454.2321FALSE
455.5411FALSE
454.2323FALSE
455.5491FALSE
454.2311FALSE
455.5329FALSE
454.2311FALSE
454.7134FALSE
454.2311FALSE
454.7134FALSE
454.231FALSE
454.7135FALSE
454.2312FALSE
454.7181FALSE
454.2385FALSE
454.7088FALSE
454.2385FALSE
454.2938FALSE
454.2385FALSE
454.2937FALSE
454.2385FALSE
454.2938FALSE
454.2385FALSE
454.2946FALSE
454.2291FALSE
454.293FALSE
454.2644FALSE
454.2291FALSE
454.2644FALSE
454.2291FALSE
454.2645FALSE
454.2293FALSE
454.2651FALSE
454.2289FALSE
454.2638FALSE
454.2302FALSE
454.2397FALSE
454.2302FALSE
454.2397FALSE
454.2303FALSE
454.2397FALSE
454.2301FALSE
454.2398FALSE
454.2303FALSE
454.2397FALSE
454.229FALSE
454.2372FALSE
454.229FALSE
454.2372FALSE
454.229FALSE
454.2372FALSE
454.229FALSE
454.2373FALSE
454.2292FALSE
454.2371FALSE
454.229FALSE
454.2369FALSE
454.229FALSE
454.2369FALSE
454.229FALSE
454.2369FALSE
454.2291FALSE
454.2365FALSE
454.229FALSE
454.2373FALSE
454.2279FALSE
454.2338FALSE
454.2279FALSE
454.2338FALSE
454.2279FALSE
454.2338FALSE
454.2278FALSE
454.234FALSE
454.2281FALSE
454.2337FALSE
454.2312FALSE
454.2292FALSE
454.2312FALSE
454.2292FALSE
454.2312FALSE
454.2292FALSE
454.2314FALSE
454.2291FALSE
454.2311FALSE
454.2293FALSE
454.2279FALSE
454.2301FALSE
454.2279FALSE
454.2301FALSE
454.2279FALSE
454.2301FALSE
454.2281FALSE
454.2303FALSE
454.2299FALSE
454.2277FALSE
454.2289FALSE
454.2273FALSE
454.2289FALSE
454.2273FALSE
454.2289FALSE
454.2273FALSE
454.2288FALSE
454.2275FALSE
454.2271FALSE
454.2291FALSE
454.2279FALSE
454.2288FALSE
454.2279FALSE
454.2288FALSE
454.2279FALSE
454.2288FALSE
454.2278FALSE
454.2288FALSE
454.2289FALSE
454.228FALSE
454.2339FALSE
454.2274FALSE
454.2339FALSE
454.2274FALSE
454.2339FALSE
454.2274FALSE
454.234FALSE
454.2273FALSE
454.2337FALSE
454.2276FALSE
454.229FALSE
454.2289FALSE
454.229FALSE
454.2289FALSE
454.229FALSE
454.2289FALSE
454.2292FALSE
454.2291FALSE
454.2288FALSE
454.2287FALSE
454.2288FALSE
454.2271FALSE
454.2288FALSE
454.2271FALSE
454.2288FALSE
454.2271FALSE
454.2288FALSE
454.2269FALSE
454.2289FALSE
454.2272FALSE
454.2287FALSE
454.2268FALSE
454.2287FALSE
454.2268FALSE
454.2287FALSE
454.2268FALSE
454.2288FALSE
454.2269FALSE
454.2288FALSE
454.227FALSE
454.2287FALSE
454.2274FALSE
454.2287FALSE
454.2274FALSE
454.2287FALSE
454.2274FALSE
454.2288FALSE
454.2276FALSE
454.2287FALSE
454.2272FALSE
454.2285FALSE
454.2268FALSE
454.2285FALSE
454.2268FALSE
454.2285FALSE
454.2268FALSE
454.2287FALSE
454.2269FALSE
454.2284FALSE
454.2269FALSE
454.2281FALSE
454.2268FALSE
454.2281FALSE
454.2268FALSE
454.2281FALSE
454.2268FALSE
454.2283FALSE
454.2269FALSE
454.2279FALSE
454.2269FALSE
454.2277FALSE
454.2267FALSE
454.2277FALSE
454.2267FALSE
454.2277FALSE
454.2267FALSE
454.2279FALSE
454.2275FALSE
454.2268FALSE
454.4069FALSE
454.2268FALSE
454.4069FALSE
454.2267FALSE
454.4069FALSE
454.2267FALSE
454.4058FALSE
454.2267FALSE
454.4081FALSE
454.2268FALSE
454.2268FALSE
454.231FALSE
454.231FALSE
454.2266FALSE
454.2266FALSE
454.231FALSE
454.2266FALSE
454.2306FALSE
454.2268FALSE
454.2314FALSE
454.2268FALSE
454.2281FALSE
454.2281FALSE
454.2266FALSE
454.2281FALSE
454.2266FALSE
454.2266FALSE
454.228FALSE
454.2282FALSE
454.2267FALSE
454.2274FALSE
454.2267FALSE
454.2344FALSE
454.2274FALSE
454.2344FALSE
454.2274FALSE
454.2274FALSE
454.2345FALSE
454.2275FALSE
454.2343FALSE
454.227FALSE
454.2266FALSE
454.227FALSE
454.2266FALSE
454.227FALSE
454.2266FALSE
454.2271FALSE
454.2268FALSE
454.227FALSE
454.2267FALSE
454.2268FALSE
454.2266FALSE
454.2268FALSE
454.2266FALSE
454.2268FALSE
454.2266FALSE
454.2268FALSE
454.2267FALSE
454.2269FALSE
454.2267FALSE
454.2267FALSE
454.2266FALSE
454.2267FALSE
454.2266FALSE
454.2267FALSE
454.2266FALSE
454.2268FALSE
454.2267FALSE
454.2268FALSE
454.2267FALSE
454.2267FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2267FALSE
454.2266FALSE
454.2268FALSE
454.2268FALSE
454.2267FALSE
454.2266FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2266FALSE
454.2268FALSE
454.2267FALSE
454.2266FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2266FALSE
454.2267FALSE
454.2267FALSE
454.2266FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2266FALSE
454.2267FALSE
454.2267FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2267FALSE
454.2268FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2267FALSE
454.2268FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2267FALSE
454.2268FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2267FALSE
454.2268FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2267FALSE
454.2268FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2267FALSE
454.2268FALSE
454.2267FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2267FALSE
454.2268FALSE
454.2267FALSE
454.2268FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2267FALSE
454.2268FALSE
454.2267FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.192066                -2.098996 

$value
[1] 454.2266

$counts
function gradient 
      52       52 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

454.2268FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2268FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2268FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2268FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2268FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2268FALSE
454.2266FALSE
454.2266FALSE
454.2266FALSE
454.2268FALSE
454.2268FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.805590                -2.098993 

$value
[1] 454.2266

$counts
function gradient 
      58       58 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1100.105    0.965 1052.711 
