
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
438.1229FALSE
449.0549FALSE
356.772FALSE
438.1182FALSE
449.0489FALSE
356.77FALSE
438.1277FALSE
449.0609FALSE
356.774FALSE
469.1613FALSE
475.2418FALSE
365.513FALSE
469.2315FALSE
475.3072FALSE
469.0912FALSE
365.5521FALSE
475.1765FALSE
437.8826FALSE
365.474FALSE
448.6205FALSE
437.8814FALSE
356.3762FALSE
448.6188FALSE
437.8838FALSE
437.8611FALSE
448.6223FALSE
356.3764FALSE
437.8605FALSE
448.5739FALSE
356.3759FALSE
437.8617FALSE
448.5738FALSE
356.3713FALSE
437.8551FALSE
448.574FALSE
356.3716FALSE
437.8553FALSE
448.5737FALSE
437.8549FALSE
356.3711FALSE
448.5737FALSE
437.8545FALSE
448.5737FALSE
437.8544FALSE
356.5344FALSE
448.5737FALSE
437.8547FALSE
437.8545FALSE
448.5737FALSE
356.5321FALSE
437.8546FALSE
448.5737FALSE
437.8544FALSE
448.5737FALSE
356.5367FALSE
437.8544FALSE
448.5737FALSE
356.37FALSE
437.8545FALSE
448.5737FALSE
$par
smooth_log_cases_lag1.bw 
               -2.151802 

$value
[1] 448.5737

$counts
function gradient 
       7        7 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

356.3703FALSE
437.8545FALSE
437.8544FALSE
356.3698FALSE
437.8545FALSE
356.3686FALSE
437.8545FALSE
437.8544FALSE
356.3689FALSE
437.8545FALSE
356.3683FALSE
437.8545FALSE
356.4205FALSE
437.8544FALSE
356.4183FALSE
437.8545FALSE
356.4226FALSE
437.8545FALSE
437.8544FALSE
356.3679FALSE
437.8545FALSE
356.368FALSE
437.8545FALSE
356.3678FALSE
437.8544FALSE
437.8545FALSE
356.3795FALSE
437.8545FALSE
356.3776FALSE
437.8544FALSE
356.3814FALSE
437.8545FALSE
437.8545FALSE
356.3673FALSE
437.8544FALSE
437.8545FALSE
356.3674FALSE
437.8545FALSE
356.3672FALSE
437.8544FALSE
356.3675FALSE
437.8545FALSE
356.3674FALSE
437.8545FALSE
356.3677FALSE
437.8544FALSE
356.3672FALSE
437.8545FALSE
356.3673FALSE
437.8545FALSE
356.3672FALSE
437.8544FALSE
356.3677FALSE
437.8545FALSE
356.3675FALSE
437.8545FALSE
356.3679FALSE
437.8544FALSE
356.3671FALSE
437.8545FALSE
356.3673FALSE
437.8545FALSE
356.3673FALSE
437.8544FALSE
356.3671FALSE
437.8545FALSE
356.3673FALSE
437.8545FALSE
356.3673FALSE
437.8544FALSE
356.3671FALSE
437.8545FALSE
356.3673FALSE
437.8545FALSE
356.3673FALSE
$par
time_ind_lag0.bw 
       -2.109099 

$value
[1] 356.3671

$counts
function gradient 
      17       17 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

437.8544FALSE
437.8545FALSE
437.8545FALSE
437.8544FALSE
437.8545FALSE
437.8545FALSE
437.8544FALSE
437.8545FALSE
437.8545FALSE
437.8544FALSE
437.8545FALSE
437.8545FALSE
437.8544FALSE
437.8545FALSE
437.8545FALSE
437.8544FALSE
437.8545FALSE
437.8545FALSE
437.8544FALSE
437.8545FALSE
437.8545FALSE
$par
smooth_log_cases_lag0.bw 
               -2.191152 

$value
[1] 437.8544

$counts
function gradient 
      28       28 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

374.7241FALSE
369.1748FALSE
374.7049FALSE
369.1596FALSE
369.1901FALSE
374.7433FALSE
369.194FALSE
374.7433FALSE
369.1556FALSE
374.7049FALSE
364.094FALSE
366.2875FALSE
364.0987FALSE
366.2843FALSE
364.0892FALSE
366.2908FALSE
364.0891FALSE
366.2848FALSE
364.0989FALSE
366.2902FALSE
363.2949FALSE
365.4371FALSE
363.2964FALSE
365.4315FALSE
363.2935FALSE
365.4427FALSE
363.2938FALSE
365.434FALSE
363.2961FALSE
365.4403FALSE
362.8783FALSE
360.7915FALSE
362.885FALSE
360.7858FALSE
362.8716FALSE
360.7971FALSE
362.8722FALSE
360.7893FALSE
362.8844FALSE
360.794FALSE
363.1782FALSE
379.0768FALSE
363.1809FALSE
379.077FALSE
363.1754FALSE
379.0766FALSE
363.1778FALSE
379.174FALSE
363.1786FALSE
378.9797FALSE
362.7415FALSE
357.493FALSE
362.74FALSE
357.491FALSE
362.743FALSE
357.4949FALSE
362.7414FALSE
357.4941FALSE
362.7416FALSE
357.4919FALSE
362.6284FALSE
358.6861FALSE
362.6279FALSE
358.6856FALSE
362.6288FALSE
358.6866FALSE
362.6287FALSE
358.6976FALSE
362.6281FALSE
358.6746FALSE
363.0715FALSE
357.4071FALSE
363.0763FALSE
357.4055FALSE
363.0666FALSE
357.4086FALSE
363.0671FALSE
357.4112FALSE
363.0758FALSE
357.403FALSE
362.6279FALSE
356.8872FALSE
362.6275FALSE
356.8863FALSE
362.6283FALSE
356.8881FALSE
356.8885FALSE
362.6282FALSE
362.6276FALSE
356.8859FALSE
362.6277FALSE
356.5933FALSE
362.6362FALSE
356.5929FALSE
362.6261FALSE
356.5937FALSE
362.6266FALSE
356.5942FALSE
362.6351FALSE
356.5924FALSE
362.6277FALSE
356.4779FALSE
362.6273FALSE
356.4777FALSE
362.6281FALSE
356.4781FALSE
362.6279FALSE
356.4783FALSE
362.6274FALSE
356.4774FALSE
362.6459FALSE
356.425FALSE
362.6545FALSE
356.4249FALSE
362.6374FALSE
356.4251FALSE
362.6387FALSE
356.4251FALSE
362.6532FALSE
356.4249FALSE
362.6268FALSE
356.4066FALSE
362.6269FALSE
356.4065FALSE
362.6271FALSE
356.4066FALSE
362.6272FALSE
356.4065FALSE
362.6267FALSE
356.4066FALSE
362.6553FALSE
356.3896FALSE
362.6632FALSE
356.3896FALSE
362.6473FALSE
356.3897FALSE
356.3897FALSE
362.6478FALSE
362.6628FALSE
356.3896FALSE
362.6267FALSE
356.3852FALSE
356.3852FALSE
362.6267FALSE
362.627FALSE
356.3852FALSE
362.6269FALSE
356.3853FALSE
362.6266FALSE
356.3852FALSE
362.6273FALSE
356.5053FALSE
362.6359FALSE
356.5053FALSE
362.6261FALSE
356.5053FALSE
356.5028FALSE
362.6265FALSE
356.5077FALSE
362.6348FALSE
362.6263FALSE
356.3844FALSE
362.6265FALSE
356.3843FALSE
362.6265FALSE
356.3844FALSE
362.6266FALSE
356.3844FALSE
362.6262FALSE
356.3843FALSE
362.6455FALSE
356.3814FALSE
362.6536FALSE
356.3814FALSE
362.6375FALSE
356.3814FALSE
362.6379FALSE
356.3816FALSE
362.6531FALSE
356.3812FALSE
362.6262FALSE
356.3738FALSE
362.6265FALSE
356.3738FALSE
362.6265FALSE
356.3738FALSE
362.6266FALSE
356.3727FALSE
362.6262FALSE
356.3749FALSE
362.6298FALSE
356.3789FALSE
362.6381FALSE
356.3788FALSE
362.6261FALSE
356.3789FALSE
362.6261FALSE
356.379FALSE
362.6374FALSE
356.3788FALSE
362.6262FALSE
356.3711FALSE
362.6264FALSE
356.371FALSE
362.6263FALSE
356.3711FALSE
362.6264FALSE
356.3712FALSE
362.6261FALSE
356.3709FALSE
362.6287FALSE
356.3709FALSE
362.6369FALSE
356.3709FALSE
362.6261FALSE
356.3709FALSE
362.6261FALSE
356.3707FALSE
362.6363FALSE
356.3711FALSE
362.6261FALSE
356.3709FALSE
362.6263FALSE
356.3709FALSE
356.3709FALSE
362.6263FALSE
356.3707FALSE
362.6263FALSE
356.3711FALSE
362.6261FALSE
356.3823FALSE
362.6268FALSE
356.3823FALSE
362.635FALSE
356.3823FALSE
362.6262FALSE
356.3825FALSE
362.6261FALSE
356.3822FALSE
362.6344FALSE
356.3711FALSE
362.6261FALSE
356.3711FALSE
362.6273FALSE
356.3711FALSE
362.6262FALSE
356.3712FALSE
356.371FALSE
362.6262FALSE
356.3704FALSE
362.6266FALSE
362.6261FALSE
356.3704FALSE
362.6263FALSE
356.3704FALSE
362.6263FALSE
356.3706FALSE
362.6263FALSE
356.3705FALSE
362.6261FALSE
356.3696FALSE
362.6261FALSE
356.3696FALSE
362.6266FALSE
356.3696FALSE
362.6262FALSE
356.3698FALSE
362.6263FALSE
356.3698FALSE
362.6261FALSE
356.3683FALSE
362.6261FALSE
356.3683FALSE
362.6322FALSE
356.3683FALSE
362.6262FALSE
356.3684FALSE
362.6261FALSE
356.3681FALSE
362.6318FALSE
356.3678FALSE
362.6261FALSE
356.3678FALSE
362.6298FALSE
356.3678FALSE
362.6262FALSE
356.3676FALSE
362.6261FALSE
356.368FALSE
362.6293FALSE
362.6261FALSE
356.3674FALSE
362.6268FALSE
356.3674FALSE
362.6262FALSE
356.3674FALSE
362.6262FALSE
356.3675FALSE
362.6261FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
               -1.893912                -2.646904 

$value
[1] 362.6261

$counts
function gradient 
      30       30 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

356.3676FALSE
356.3673FALSE
356.3673FALSE
356.3673FALSE
356.3674FALSE
356.3674FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3674FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3674FALSE
356.3674FALSE
356.3674FALSE
356.3676FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3674FALSE
356.3674FALSE
356.3674FALSE
356.3675FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
356.3672FALSE
356.3672FALSE
356.3672FALSE
356.3673FALSE
356.3673FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                 5.35828                 -2.10911 

$value
[1] 356.3672

$counts
function gradient 
      68       68 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
 821.436    0.984 1069.790 
