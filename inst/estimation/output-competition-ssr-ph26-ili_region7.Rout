
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
460.591FALSE
564.5823FALSE
564.3479FALSE
564.3359FALSE
460.5851FALSE
564.5738FALSE
460.5969FALSE
564.3599FALSE
564.5908FALSE
559.7888FALSE
460.2829FALSE
560.2211FALSE
460.3051FALSE
559.814FALSE
559.7647FALSE
560.2442FALSE
460.2607FALSE
559.4031FALSE
560.1981FALSE
459.5368FALSE
559.3871FALSE
561.1632FALSE
459.5319FALSE
559.4191FALSE
561.1477FALSE
459.5418FALSE
556.0758FALSE
479.9403FALSE
561.1787FALSE
480.0539FALSE
556.0756FALSE
556.7947FALSE
479.8267FALSE
556.7961FALSE
457.9183FALSE
556.076FALSE
556.7933FALSE
457.9159FALSE
556.0756FALSE
557.0247FALSE
457.9207FALSE
556.0757FALSE
557.019FALSE
458.3507FALSE
556.0754FALSE
557.0305FALSE
556.0752FALSE
458.3587FALSE
556.0752FALSE
556.7742FALSE
458.3426FALSE
556.775FALSE
556.0752FALSE
457.7038FALSE
556.0752FALSE
556.7734FALSE
457.7029FALSE
556.0752FALSE
556.7866FALSE
457.7046FALSE
556.0752FALSE
$par
smooth_log_cases_lag0.bw 
               -1.611255 

$value
[1] 556.0752

$counts
function gradient 
       7        7 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

556.7834FALSE
457.764FALSE
457.7655FALSE
556.7899FALSE
457.7625FALSE
556.767FALSE
457.6964FALSE
556.7675FALSE
457.6961FALSE
556.7665FALSE
457.6966FALSE
556.7867FALSE
457.698FALSE
556.7835FALSE
457.699FALSE
556.7899FALSE
457.6969FALSE
556.7658FALSE
457.6961FALSE
556.7662FALSE
457.6959FALSE
556.7654FALSE
457.6964FALSE
556.7867FALSE
457.696FALSE
556.7835FALSE
457.6959FALSE
556.79FALSE
556.7652FALSE
457.6963FALSE
556.7656FALSE
556.7649FALSE
457.7FALSE
556.7735FALSE
457.701FALSE
556.7705FALSE
457.6989FALSE
556.7766FALSE
457.696FALSE
556.7647FALSE
457.6962FALSE
556.7651FALSE
457.6962FALSE
556.7644FALSE
457.6959FALSE
556.7868FALSE
457.6962FALSE
556.7836FALSE
457.6962FALSE
556.79FALSE
457.6959FALSE
556.7645FALSE
457.6962FALSE
556.7649FALSE
457.6962FALSE
556.7642FALSE
457.6959FALSE
556.7756FALSE
457.6962FALSE
556.7725FALSE
457.6962FALSE
556.7787FALSE
457.6959FALSE
556.7644FALSE
457.6962FALSE
556.7647FALSE
457.6962FALSE
556.7641FALSE
457.6959FALSE
556.7689FALSE
457.6962FALSE
556.7659FALSE
457.6962FALSE
556.772FALSE
457.6959FALSE
556.7642FALSE
457.6962FALSE
556.7645FALSE
457.6962FALSE
457.6959FALSE
556.764FALSE
457.6962FALSE
556.7775FALSE
457.6962FALSE
556.7744FALSE
457.6959FALSE
556.7807FALSE
457.6962FALSE
556.7641FALSE
556.7644FALSE
457.6962FALSE
556.7641FALSE
457.6959FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6959FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6959FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6959FALSE
556.7641FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7641FALSE
457.6959FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7641FALSE
457.6959FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7641FALSE
457.6959FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7641FALSE
457.6959FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7641FALSE
457.6959FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7641FALSE
457.6959FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7641FALSE
556.7643FALSE
457.6959FALSE
556.7643FALSE
457.6962FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
457.6959FALSE
556.7643FALSE
457.6962FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
556.7643FALSE
457.6959FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6959FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6959FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6959FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
556.7641FALSE
457.6959FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6959FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
457.6959FALSE
556.7641FALSE
457.6962FALSE
556.7643FALSE
457.6962FALSE
556.7643FALSE
$par
smooth_log_cases_lag1.bw 
                -1.63674 

$value
[1] 556.7641

$counts
function gradient 
      42       42 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

457.6959FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6962FALSE
457.6962FALSE
$par
time_ind_lag0.bw 
       -1.621206 

$value
[1] 457.6959

$counts
function gradient 
      51       51 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

502.912FALSE
506.7878FALSE
502.8752FALSE
506.7517FALSE
502.9488FALSE
506.8239FALSE
506.8192FALSE
502.9403FALSE
506.7565FALSE
502.8837FALSE
475.843FALSE
478.0926FALSE
475.8213FALSE
478.0712FALSE
475.8648FALSE
478.114FALSE
475.8429FALSE
478.0944FALSE
475.8431FALSE
478.0908FALSE
463.5687FALSE
464.9402FALSE
463.5634FALSE
464.9336FALSE
463.5739FALSE
464.9467FALSE
463.5636FALSE
464.9357FALSE
463.5738FALSE
464.9446FALSE
461.1725FALSE
461.9312FALSE
461.1695FALSE
461.9281FALSE
461.1754FALSE
461.9343FALSE
461.1674FALSE
461.1776FALSE
461.9271FALSE
461.9353FALSE
459.4002FALSE
458.6814FALSE
459.3997FALSE
458.6803FALSE
459.4008FALSE
458.6824FALSE
459.4146FALSE
458.6768FALSE
458.686FALSE
459.386FALSE
458.8105FALSE
580.0828FALSE
458.8092FALSE
580.0833FALSE
458.8117FALSE
580.0823FALSE
458.8064FALSE
580.1853FALSE
458.8145FALSE
579.98FALSE
458.5355FALSE
464.5712FALSE
458.5346FALSE
464.5706FALSE
458.5364FALSE
464.5718FALSE
458.5325FALSE
464.614FALSE
458.5384FALSE
464.5285FALSE
458.2599FALSE
458.2787FALSE
458.2777FALSE
458.2591FALSE
458.2797FALSE
458.2607FALSE
458.2784FALSE
458.2582FALSE
458.279FALSE
458.2616FALSE
458.2214FALSE
457.9784FALSE
458.2205FALSE
458.2222FALSE
457.978FALSE
458.2237FALSE
457.9789FALSE
457.9802FALSE
458.219FALSE
457.9767FALSE
458.1121FALSE
457.9511FALSE
457.9506FALSE
458.1114FALSE
457.9516FALSE
458.1128FALSE
457.9504FALSE
458.1141FALSE
458.1101FALSE
457.9518FALSE
457.9024FALSE
457.9019FALSE
457.9021FALSE
457.9015FALSE
457.9023FALSE
457.9027FALSE
457.9018FALSE
457.9011FALSE
457.902FALSE
457.9037FALSE
457.7819FALSE
457.838FALSE
457.7817FALSE
457.8378FALSE
457.782FALSE
457.8382FALSE
457.7829FALSE
457.8375FALSE
457.7808FALSE
457.8385FALSE
457.7415FALSE
457.7771FALSE
457.777FALSE
457.7414FALSE
457.7772FALSE
457.7415FALSE
457.7766FALSE
457.7406FALSE
457.7775FALSE
457.7423FALSE
457.7223FALSE
457.7429FALSE
457.7223FALSE
457.7429FALSE
457.7224FALSE
457.743FALSE
457.7215FALSE
457.7423FALSE
457.7232FALSE
457.7436FALSE
457.711FALSE
457.7406FALSE
457.711FALSE
457.7406FALSE
457.711FALSE
457.7406FALSE
457.712FALSE
457.7419FALSE
457.71FALSE
457.7392FALSE
457.7043FALSE
457.7056FALSE
457.7043FALSE
457.7056FALSE
457.7044FALSE
457.7056FALSE
457.7054FALSE
457.7067FALSE
457.7033FALSE
457.7058FALSE
457.7094FALSE
457.7078FALSE
457.7094FALSE
457.7078FALSE
457.7094FALSE
457.7086FALSE
457.7078FALSE
457.7069FALSE
457.7101FALSE
457.7037FALSE
457.7087FALSE
457.7037FALSE
457.7058FALSE
457.7037FALSE
457.7058FALSE
457.7028FALSE
457.7058FALSE
457.7045FALSE
457.7238FALSE
457.7055FALSE
457.7237FALSE
457.7061FALSE
457.7238FALSE
457.7056FALSE
457.7249FALSE
457.7056FALSE
457.7056FALSE
457.7226FALSE
457.7063FALSE
457.6994FALSE
457.7059FALSE
457.6994FALSE
457.6994FALSE
457.7056FALSE
457.7055FALSE
457.6992FALSE
457.6999FALSE
457.7056FALSE
457.7062FALSE
457.7066FALSE
457.7062FALSE
457.7058FALSE
457.7062FALSE
457.7056FALSE
457.7075FALSE
457.7056FALSE
457.705FALSE
457.7056FALSE
457.699FALSE
457.7064FALSE
457.699FALSE
457.7059FALSE
457.699FALSE
457.7056FALSE
457.6987FALSE
457.7056FALSE
457.6992FALSE
457.7056FALSE
457.7004FALSE
457.7066FALSE
457.7003FALSE
457.7058FALSE
457.7004FALSE
457.7041FALSE
457.7014FALSE
457.7041FALSE
457.6993FALSE
457.7041FALSE
457.6985FALSE
457.7032FALSE
457.6985FALSE
457.705FALSE
457.6985FALSE
457.7031FALSE
457.6987FALSE
457.7031FALSE
457.6988FALSE
457.7031FALSE
457.6975FALSE
457.7028FALSE
457.6975FALSE
457.704FALSE
457.6975FALSE
457.7022FALSE
457.6986FALSE
457.7022FALSE
457.6977FALSE
457.6967FALSE
457.7023FALSE
457.6967FALSE
457.702FALSE
457.6967FALSE
457.7025FALSE
457.6964FALSE
457.7002FALSE
457.7002FALSE
457.697FALSE
457.7003FALSE
457.6964FALSE
457.7011FALSE
457.6964FALSE
457.6964FALSE
457.7005FALSE
457.6963FALSE
457.6988FALSE
457.6967FALSE
457.6988FALSE
457.6961FALSE
457.6961FALSE
457.6988FALSE
457.6961FALSE
457.6999FALSE
457.6966FALSE
457.699FALSE
457.6964FALSE
457.6976FALSE
457.696FALSE
457.6976FALSE
457.696FALSE
457.6976FALSE
457.696FALSE
457.6973FALSE
457.6964FALSE
457.6978FALSE
457.6963FALSE
457.6971FALSE
457.696FALSE
457.6971FALSE
457.696FALSE
457.6971FALSE
457.696FALSE
457.6968FALSE
457.6963FALSE
457.6973FALSE
457.6963FALSE
457.6975FALSE
457.696FALSE
457.6975FALSE
457.696FALSE
457.6975FALSE
457.696FALSE
457.6985FALSE
457.6962FALSE
457.6962FALSE
457.6964FALSE
457.6965FALSE
457.6962FALSE
457.6962FALSE
457.6965FALSE
457.6962FALSE
457.6965FALSE
457.6959FALSE
457.6968FALSE
457.6964FALSE
457.6967FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6967FALSE
457.6962FALSE
457.6965FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6962FALSE
457.6965FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6964FALSE
457.6962FALSE
457.696FALSE
457.6963FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6963FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6964FALSE
457.696FALSE
457.6964FALSE
457.6962FALSE
457.6964FALSE
457.6962FALSE
457.6974FALSE
457.696FALSE
457.6959FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.6962FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.525772                -1.621204 

$value
[1] 457.696

$counts
function gradient 
      53       53 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
457.6959FALSE
457.6959FALSE
457.6959FALSE
457.697FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.696FALSE
457.6962FALSE
457.6962FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.300676                -1.621205 

$value
[1] 457.696

$counts
function gradient 
      60       60 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1506.766    0.695 1241.925 
