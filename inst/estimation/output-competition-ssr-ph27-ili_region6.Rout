
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
893.04FALSE
895.0051FALSE
696.4728FALSE
893.0424FALSE
696.4629FALSE
894.9651FALSE
893.0376FALSE
696.4828FALSE
895.0451FALSE
887.901FALSE
696.0589FALSE
886.4389FALSE
696.1024FALSE
887.8929FALSE
886.4624FALSE
887.9091FALSE
696.0155FALSE
886.4153FALSE
694.5925FALSE
888.8564FALSE
882.1065FALSE
694.5824FALSE
888.8903FALSE
882.1079FALSE
694.6026FALSE
888.8224FALSE
882.1053FALSE
691.0784FALSE
880.5667FALSE
882.0917FALSE
880.563FALSE
691.0752FALSE
882.0918FALSE
691.0819FALSE
880.5704FALSE
882.0916FALSE
696.4329FALSE
880.4816FALSE
882.0916FALSE
696.4772FALSE
880.4756FALSE
696.3887FALSE
882.0916FALSE
880.4875FALSE
690.9945FALSE
882.0916FALSE
880.4541FALSE
690.9945FALSE
882.0916FALSE
880.4574FALSE
690.9946FALSE
882.0916FALSE
880.4508FALSE
690.9945FALSE
882.0916FALSE
$par
smooth_log_cases_lag0.bw 
               -1.696758 

$value
[1] 882.0916

$counts
function gradient 
       6        6 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

880.4541FALSE
690.9944FALSE
880.4574FALSE
690.9945FALSE
880.4508FALSE
690.9943FALSE
999.1617FALSE
690.9943FALSE
999.1264FALSE
690.9944FALSE
999.1968FALSE
690.9939FALSE
880.9482FALSE
690.9939FALSE
880.9333FALSE
690.9939FALSE
880.9628FALSE
690.9939FALSE
880.4163FALSE
690.9939FALSE
880.4205FALSE
690.9939FALSE
880.4121FALSE
690.9939FALSE
880.4457FALSE
690.9939FALSE
880.4389FALSE
690.9939FALSE
$par
time_ind_lag0.bw 
        -1.57716 

$value
[1] 690.9939

$counts
function gradient 
      11       11 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

880.4523FALSE
880.4112FALSE
880.4155FALSE
880.4106FALSE
880.5707FALSE
880.5671FALSE
880.5742FALSE
880.4203FALSE
880.413FALSE
880.4275FALSE
880.4098FALSE
880.4141FALSE
880.413FALSE
880.4094FALSE
880.4137FALSE
880.4137FALSE
880.4094FALSE
880.4137FALSE
880.4137FALSE
$par
smooth_log_cases_lag1.bw 
               -2.876873 

$value
[1] 880.4094

$counts
function gradient 
      17       17 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

744.628FALSE
748.2181FALSE
744.5647FALSE
748.1486FALSE
744.6913FALSE
748.2876FALSE
744.691FALSE
748.2832FALSE
744.565FALSE
748.153FALSE
705.4616FALSE
704.2096FALSE
705.4546FALSE
704.2016FALSE
705.4687FALSE
704.2176FALSE
705.4518FALSE
704.2016FALSE
705.4714FALSE
704.2176FALSE
703.9843FALSE
703.9767FALSE
702.9467FALSE
703.9919FALSE
702.9391FALSE
703.9751FALSE
702.9543FALSE
703.9935FALSE
702.9404FALSE
699.1032FALSE
702.953FALSE
699.093FALSE
696.0684FALSE
699.1133FALSE
696.0639FALSE
699.1057FALSE
696.073FALSE
699.1006FALSE
696.0718FALSE
698.9683FALSE
696.0651FALSE
698.9637FALSE
696.1098FALSE
698.9729FALSE
698.9995FALSE
696.1058FALSE
698.9376FALSE
696.1138FALSE
697.4016FALSE
696.1157FALSE
697.3895FALSE
696.1039FALSE
697.4138FALSE
696.1788FALSE
697.4091FALSE
696.1794FALSE
697.3949FALSE
696.1783FALSE
1006.628FALSE
696.1829FALSE
1006.628FALSE
696.1748FALSE
1006.628FALSE
696.0532FALSE
1006.647FALSE
696.0516FALSE
1006.609FALSE
696.0547FALSE
696.8703FALSE
696.8616FALSE
696.0575FALSE
696.879FALSE
696.0489FALSE
696.8783FALSE
696.0079FALSE
696.8623FALSE
696.01FALSE
696.5001FALSE
696.0058FALSE
696.5008FALSE
696.0074FALSE
696.4993FALSE
696.0084FALSE
696.5081FALSE
695.9859FALSE
696.4921FALSE
695.9882FALSE
696.0264FALSE
695.9853FALSE
696.0283FALSE
695.9854FALSE
696.0245FALSE
695.9864FALSE
696.0305FALSE
696.0185FALSE
696.0144FALSE
696.0224FALSE
696.1952FALSE
696.0226FALSE
696.1914FALSE
696.0203FALSE
696.1991FALSE
696.017FALSE
696.1928FALSE
695.9881FALSE
696.1977FALSE
695.9867FALSE
695.93FALSE
695.9896FALSE
695.9259FALSE
695.9879FALSE
695.9341FALSE
695.9884FALSE
695.9325FALSE
695.9836FALSE
695.9275FALSE
695.9842FALSE
695.8175FALSE
695.984FALSE
695.8178FALSE
695.9833FALSE
695.8182FALSE
695.984FALSE
695.8158FALSE
695.8192FALSE
695.982FALSE
695.8249FALSE
695.9825FALSE
695.8277FALSE
695.9833FALSE
695.8244FALSE
695.9817FALSE
695.8259FALSE
695.9823FALSE
696.0598FALSE
695.8238FALSE
696.059FALSE
695.8105FALSE
696.0616FALSE
695.8109FALSE
696.0641FALSE
695.8103FALSE
696.0556FALSE
695.8113FALSE
695.9809FALSE
695.8105FALSE
695.9815FALSE
695.8098FALSE
695.9824FALSE
695.8103FALSE
695.9807FALSE
695.8096FALSE
695.9812FALSE
695.8101FALSE
696.0059FALSE
695.8105FALSE
696.0052FALSE
695.8271FALSE
696.0082FALSE
695.823FALSE
696.0093FALSE
695.8312FALSE
696.003FALSE
695.8264FALSE
695.9798FALSE
695.8287FALSE
695.9802FALSE
695.8097FALSE
695.9814FALSE
695.8102FALSE
695.9796FALSE
695.8098FALSE
695.98FALSE
695.8101FALSE
695.9929FALSE
695.8105FALSE
695.9929FALSE
695.8097FALSE
695.9942FALSE
695.8101FALSE
695.9957FALSE
695.8101FALSE
695.9901FALSE
695.8102FALSE
695.979FALSE
695.8101FALSE
695.9795FALSE
695.8097FALSE
695.9805FALSE
695.8101FALSE
695.9788FALSE
695.8101FALSE
695.8102FALSE
695.9793FALSE
695.8102FALSE
695.9787FALSE
695.8097FALSE
695.9792FALSE
695.8101FALSE
695.98FALSE
695.8101FALSE
695.9791FALSE
695.8102FALSE
695.9789FALSE
695.8102FALSE
695.9792FALSE
695.8097FALSE
695.9796FALSE
695.8101FALSE
695.9798FALSE
695.8101FALSE
695.9789FALSE
695.8102FALSE
695.9794FALSE
695.8102FALSE
695.9787FALSE
695.8097FALSE
695.9792FALSE
695.8101FALSE
695.98FALSE
695.8101FALSE
695.979FALSE
695.8102FALSE
695.9789FALSE
695.8102FALSE
695.9787FALSE
695.8097FALSE
695.8101FALSE
695.9792FALSE
695.8101FALSE
695.8102FALSE
695.98FALSE
695.9791FALSE
695.8102FALSE
695.8097FALSE
695.9789FALSE
695.8101FALSE
695.9787FALSE
695.8101FALSE
695.9792FALSE
695.8102FALSE
695.98FALSE
695.8102FALSE
695.9791FALSE
695.8097FALSE
695.9789FALSE
695.8101FALSE
695.9787FALSE
695.8101FALSE
695.8102FALSE
695.9792FALSE
695.98FALSE
695.8102FALSE
695.9791FALSE
695.9789FALSE
695.8097FALSE
695.8101FALSE
695.9787FALSE
695.8101FALSE
695.9792FALSE
695.8102FALSE
695.98FALSE
695.8102FALSE
695.9791FALSE
695.8097FALSE
695.8101FALSE
695.9789FALSE
695.8101FALSE
695.9787FALSE
695.8102FALSE
695.9792FALSE
695.8102FALSE
695.98FALSE
695.8097FALSE
695.9791FALSE
695.8101FALSE
695.9789FALSE
695.8101FALSE
695.9787FALSE
695.8102FALSE
695.9792FALSE
695.8102FALSE
695.98FALSE
695.8097FALSE
695.9791FALSE
695.8101FALSE
695.9789FALSE
695.8101FALSE
695.9787FALSE
695.8102FALSE
695.9792FALSE
695.8102FALSE
695.98FALSE
695.8097FALSE
695.8101FALSE
695.9791FALSE
695.8101FALSE
695.9789FALSE
695.8102FALSE
695.9787FALSE
695.8102FALSE
695.9792FALSE
695.8097FALSE
695.98FALSE
695.8101FALSE
695.9791FALSE
695.8101FALSE
695.9789FALSE
695.8102FALSE
695.9787FALSE
695.8102FALSE
695.9792FALSE
695.8097FALSE
695.98FALSE
695.8101FALSE
695.9791FALSE
695.8101FALSE
695.9789FALSE
695.8102FALSE
695.9787FALSE
695.8102FALSE
695.9792FALSE
695.8097FALSE
695.98FALSE
695.8101FALSE
695.9791FALSE
695.8101FALSE
695.9789FALSE
695.8102FALSE
695.8102FALSE
695.9787FALSE
695.8097FALSE
695.9792FALSE
695.8101FALSE
695.98FALSE
695.8101FALSE
695.9791FALSE
695.8102FALSE
695.9789FALSE
695.8102FALSE
695.9787FALSE
695.8097FALSE
695.9792FALSE
695.8101FALSE
695.98FALSE
695.8101FALSE
695.8102FALSE
695.9791FALSE
695.8102FALSE
695.9789FALSE
695.8097FALSE
695.9787FALSE
695.8101FALSE
695.9792FALSE
695.8101FALSE
695.98FALSE
695.8102FALSE
695.9791FALSE
695.8102FALSE
695.9789FALSE
695.8097FALSE
695.9787FALSE
695.8101FALSE
695.9792FALSE
695.8101FALSE
695.98FALSE
695.8102FALSE
695.9791FALSE
695.8102FALSE
695.9789FALSE
695.8097FALSE
695.9787FALSE
695.8101FALSE
695.9792FALSE
695.8101FALSE
695.98FALSE
695.9791FALSE
695.8102FALSE
695.9789FALSE
695.8102FALSE
695.9787FALSE
695.8097FALSE
695.9792FALSE
695.8101FALSE
695.98FALSE
695.8101FALSE
695.9791FALSE
695.8102FALSE
695.8102FALSE
695.9789FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
              -0.6903244               -1.7014116 

$value
[1] 695.9787

$counts
function gradient 
      38       38 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

695.8405FALSE
695.8433FALSE
695.8376FALSE
695.8384FALSE
695.8426FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
695.8097FALSE
695.8101FALSE
695.8101FALSE
695.8102FALSE
695.8102FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
              -0.7121178               -1.7335127 

$value
[1] 695.8097

$counts
function gradient 
      56       56 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
810.467   0.839 949.223 
