
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
584.4581FALSE
462.5565FALSE
591.4515FALSE
584.4518FALSE
462.551FALSE
591.4476FALSE
584.4645FALSE
462.562FALSE
591.4554FALSE
463.5333FALSE
587.5622FALSE
596.361FALSE
463.5546FALSE
587.5762FALSE
596.375FALSE
463.5121FALSE
460.6588FALSE
587.5482FALSE
596.3469FALSE
460.6569FALSE
583.3308FALSE
460.6606FALSE
591.1939FALSE
583.3314FALSE
460.8781FALSE
591.1966FALSE
583.3303FALSE
460.8814FALSE
583.3171FALSE
460.8748FALSE
591.1913FALSE
583.3175FALSE
460.6509FALSE
583.3166FALSE
591.1893FALSE
460.6514FALSE
583.3678FALSE
460.6504FALSE
591.1886FALSE
583.3663FALSE
460.641FALSE
591.19FALSE
583.3693FALSE
591.1782FALSE
460.6417FALSE
583.3147FALSE
591.1777FALSE
583.3145FALSE
460.6403FALSE
591.1787FALSE
583.315FALSE
460.6589FALSE
583.3149FALSE
591.1699FALSE
460.657FALSE
591.1703FALSE
583.3151FALSE
460.6608FALSE
591.1694FALSE
583.3148FALSE
460.6175FALSE
591.1661FALSE
583.3143FALSE
460.6177FALSE
583.3145FALSE
591.1659FALSE
460.6182FALSE
583.3144FALSE
591.1664FALSE
460.6315FALSE
583.3143FALSE
591.1637FALSE
583.3144FALSE
460.6324FALSE
583.3145FALSE
591.1635FALSE
460.6307FALSE
583.3143FALSE
591.1639FALSE
460.6176FALSE
583.3144FALSE
591.1899FALSE
460.6184FALSE
583.3144FALSE
460.6176FALSE
591.1925FALSE
583.3143FALSE
460.6173FALSE
583.3144FALSE
591.1875FALSE
460.618FALSE
583.3145FALSE
591.1644FALSE
460.618FALSE
583.3143FALSE
591.1648FALSE
460.6173FALSE
583.3144FALSE
591.1641FALSE
460.618FALSE
583.3145FALSE
460.618FALSE
591.1635FALSE
583.3143FALSE
460.6173FALSE
591.1636FALSE
583.3144FALSE
460.618FALSE
591.1637FALSE
583.3145FALSE
460.618FALSE
591.1635FALSE
583.3143FALSE
460.6173FALSE
583.3144FALSE
591.1637FALSE
460.618FALSE
583.3145FALSE
591.1637FALSE
460.618FALSE
583.3143FALSE
591.1635FALSE
460.6173FALSE
583.3144FALSE
591.1637FALSE
460.618FALSE
583.3145FALSE
591.1637FALSE
460.618FALSE
583.3143FALSE
591.1635FALSE
460.6173FALSE
583.3144FALSE
591.1637FALSE
460.618FALSE
583.3145FALSE
591.1637FALSE
460.618FALSE
583.3143FALSE
591.1635FALSE
460.6173FALSE
583.3144FALSE
591.1637FALSE
460.618FALSE
583.3145FALSE
591.1637FALSE
460.618FALSE
583.3143FALSE
460.6173FALSE
591.1635FALSE
583.3144FALSE
460.618FALSE
591.1637FALSE
460.618FALSE
591.1637FALSE
583.3145FALSE
460.6173FALSE
591.1635FALSE
583.3143FALSE
460.618FALSE
591.1637FALSE
460.618FALSE
583.3144FALSE
591.1637FALSE
460.6173FALSE
591.1635FALSE
583.3145FALSE
460.618FALSE
591.1637FALSE
583.3143FALSE
460.618FALSE
591.1637FALSE
583.3144FALSE
460.6173FALSE
591.1635FALSE
460.618FALSE
583.3145FALSE
591.1637FALSE
460.618FALSE
583.3143FALSE
591.1637FALSE
460.6173FALSE
591.1635FALSE
583.3144FALSE
460.618FALSE
460.618FALSE
591.1637FALSE
583.3145FALSE
460.6173FALSE
591.1637FALSE
583.3143FALSE
460.618FALSE
591.1635FALSE
583.3144FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
583.3145FALSE
591.1637FALSE
460.618FALSE
583.3143FALSE
591.1635FALSE
460.618FALSE
460.6173FALSE
591.1637FALSE
583.3144FALSE
460.618FALSE
591.1637FALSE
583.3145FALSE
460.618FALSE
591.1635FALSE
583.3143FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
583.3144FALSE
460.618FALSE
591.1637FALSE
583.3145FALSE
460.6173FALSE
591.1635FALSE
583.3143FALSE
591.1637FALSE
460.618FALSE
583.3144FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.6173FALSE
583.3145FALSE
$par
smooth_log_cases_lag1.bw 
               -1.997232 

$value
[1] 583.3143

$counts
function gradient 
      25       25 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

591.1637FALSE
460.618FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1692FALSE
460.618FALSE
591.1689FALSE
460.6173FALSE
591.1696FALSE
460.618FALSE
591.1636FALSE
460.618FALSE
591.1635FALSE
460.6173FALSE
591.1638FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
591.1637FALSE
460.6173FALSE
591.1635FALSE
591.1637FALSE
460.618FALSE
591.1637FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
591.1637FALSE
460.6173FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1637FALSE
460.618FALSE
591.1635FALSE
460.6173FALSE
591.1637FALSE
460.618FALSE
591.1637FALSE
591.1635FALSE
460.618FALSE
591.1637FALSE
460.6173FALSE
591.1637FALSE
$par
smooth_log_cases_lag0.bw 
               -2.108433 

$value
[1] 591.1635

$counts
function gradient 
      48       48 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

460.618FALSE
460.618FALSE
460.6173FALSE
460.618FALSE
460.618FALSE
460.6173FALSE
460.618FALSE
460.618FALSE
460.6173FALSE
460.618FALSE
460.618FALSE
$par
time_ind_lag0.bw 
       -1.758895 

$value
[1] 460.6173

$counts
function gradient 
      52       52 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

506.0259FALSE
500.9558FALSE
506.0145FALSE
500.9556FALSE
506.0373FALSE
500.956FALSE
506.0421FALSE
500.9701FALSE
506.0097FALSE
500.9415FALSE
493.5852FALSE
496.2841FALSE
493.5617FALSE
496.2703FALSE
493.6086FALSE
496.2975FALSE
496.2991FALSE
493.5895FALSE
496.2687FALSE
493.5808FALSE
499.0816FALSE
473.8452FALSE
499.0882FALSE
473.8452FALSE
499.0749FALSE
473.8452FALSE
499.0816FALSE
473.8452FALSE
499.0816FALSE
565.3187FALSE
473.8452FALSE
565.2775FALSE
473.8452FALSE
473.8452FALSE
565.3597FALSE
473.8452FALSE
565.3187FALSE
473.8452FALSE
565.3187FALSE
473.8452FALSE
498.8352FALSE
473.8452FALSE
498.8361FALSE
473.8452FALSE
498.8343FALSE
473.8452FALSE
498.8352FALSE
473.8452FALSE
498.8352FALSE
473.8452FALSE
498.8214FALSE
473.8452FALSE
498.8225FALSE
498.8201FALSE
473.8452FALSE
498.8214FALSE
473.8452FALSE
473.8452FALSE
498.8214FALSE
473.8452FALSE
498.8835FALSE
473.8452FALSE
498.8819FALSE
473.8452FALSE
498.8857FALSE
473.8452FALSE
498.8835FALSE
473.8452FALSE
498.8835FALSE
498.81FALSE
473.8452FALSE
498.8115FALSE
473.8452FALSE
498.8085FALSE
473.8452FALSE
498.81FALSE
473.8452FALSE
473.8452FALSE
498.81FALSE
473.8452FALSE
498.8062FALSE
473.8452FALSE
498.8036FALSE
473.8452FALSE
498.8088FALSE
473.8452FALSE
473.8452FALSE
498.8062FALSE
473.8452FALSE
498.8062FALSE
473.8452FALSE
498.8069FALSE
473.8452FALSE
498.8083FALSE
473.8452FALSE
498.8055FALSE
473.8452FALSE
473.8452FALSE
498.8069FALSE
473.8452FALSE
473.8452FALSE
498.8069FALSE
473.8452FALSE
498.8037FALSE
473.8452FALSE
473.8452FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.675438               -12.474296 

$value
[1] 473.8452

$counts
function gradient 
      11       11 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8073FALSE
498.8087FALSE
498.8059FALSE
498.8073FALSE
498.8073FALSE
498.8038FALSE
498.8051FALSE
498.8051FALSE
498.8038FALSE
498.8038FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
499.0273FALSE
499.0324FALSE
499.0221FALSE
499.0273FALSE
499.0273FALSE
498.8073FALSE
498.8086FALSE
498.8058FALSE
498.8073FALSE
498.8073FALSE
498.8038FALSE
498.8051FALSE
498.8051FALSE
498.8038FALSE
498.8038FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
498.8037FALSE
498.8051FALSE
498.8053FALSE
498.8037FALSE
498.8037FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
               -2.350293                -6.808771 

$value
[1] 498.8037

$counts
function gradient 
      50       50 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
991.893   0.711 920.555 
