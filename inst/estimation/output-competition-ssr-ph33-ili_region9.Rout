
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
628.1896FALSE
628.1731FALSE
629.4254FALSE
455.9903FALSE
628.206FALSE
629.4119FALSE
619.5973FALSE
455.9897FALSE
619.6057FALSE
629.439FALSE
455.9909FALSE
619.5889FALSE
619.0642FALSE
623.1817FALSE
460.9929FALSE
619.0582FALSE
619.0702FALSE
623.1911FALSE
461.0257FALSE
618.612FALSE
618.6116FALSE
623.1723FALSE
460.9602FALSE
618.6124FALSE
618.6079FALSE
621.9845FALSE
455.6115FALSE
618.6074FALSE
621.9764FALSE
455.6118FALSE
618.6084FALSE
618.6381FALSE
621.9925FALSE
455.6112FALSE
618.6411FALSE
621.3482FALSE
455.7238FALSE
618.6351FALSE
621.3531FALSE
455.722FALSE
618.6028FALSE
621.3433FALSE
455.7255FALSE
618.6023FALSE
621.244FALSE
455.6107FALSE
618.6034FALSE
621.2406FALSE
618.6001FALSE
455.6106FALSE
621.2474FALSE
618.5995FALSE
455.6107FALSE
621.2259FALSE
618.6007FALSE
455.6106FALSE
621.2268FALSE
618.5984FALSE
455.6106FALSE
618.5977FALSE
621.2249FALSE
455.6107FALSE
618.599FALSE
618.6092FALSE
621.2223FALSE
455.6105FALSE
618.611FALSE
618.6073FALSE
621.2223FALSE
455.6104FALSE
618.5974FALSE
618.597FALSE
621.2222FALSE
455.6106FALSE
618.598FALSE
621.2223FALSE
455.6133FALSE
618.5968FALSE
621.2223FALSE
455.6135FALSE
618.5974FALSE
621.2222FALSE
455.613FALSE
618.5972FALSE
621.2222FALSE
455.6105FALSE
618.6FALSE
621.2223FALSE
618.5993FALSE
621.2222FALSE
455.6106FALSE
618.6006FALSE
621.2227FALSE
618.5969FALSE
621.2223FALSE
455.6105FALSE
618.5972FALSE
621.2231FALSE
618.5973FALSE
621.2222FALSE
455.6106FALSE
618.5968FALSE
621.2222FALSE
618.5974FALSE
455.6105FALSE
621.2221FALSE
618.5972FALSE
621.2222FALSE
618.5968FALSE
455.6106FALSE
621.2222FALSE
618.5974FALSE
621.2221FALSE
618.5972FALSE
455.6105FALSE
621.2222FALSE
618.5968FALSE
621.2222FALSE
618.5974FALSE
455.6105FALSE
618.5972FALSE
621.2225FALSE
618.5968FALSE
621.2222FALSE
455.6105FALSE
618.5974FALSE
621.2222FALSE
618.5972FALSE
621.2221FALSE
455.6105FALSE
618.5968FALSE
621.2221FALSE
618.5974FALSE
455.6106FALSE
621.2222FALSE
618.5972FALSE
455.6105FALSE
621.2224FALSE
618.5968FALSE
621.2221FALSE
455.6105FALSE
618.5974FALSE
621.2222FALSE
618.5972FALSE
621.2222FALSE
455.6106FALSE
618.5968FALSE
621.2222FALSE
618.5974FALSE
455.6105FALSE
621.2222FALSE
618.5972FALSE
621.2221FALSE
618.5968FALSE
455.6105FALSE
621.2222FALSE
618.5974FALSE
621.2222FALSE
618.5972FALSE
455.6106FALSE
621.2222FALSE
618.5968FALSE
621.2221FALSE
618.5974FALSE
455.6105FALSE
621.2222FALSE
618.5972FALSE
621.2222FALSE
618.5968FALSE
455.6105FALSE
621.2221FALSE
455.6106FALSE
618.5972FALSE
621.2222FALSE
455.6105FALSE
618.5968FALSE
621.2222FALSE
618.5974FALSE
455.6105FALSE
621.2221FALSE
618.5972FALSE
$par
smooth_log_cases_lag0.bw 
               -1.469813 

$value
[1] 618.5968

$counts
function gradient 
      25       25 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

455.6106FALSE
621.2222FALSE
455.6105FALSE
621.2222FALSE
455.6105FALSE
621.2221FALSE
455.6106FALSE
621.2222FALSE
455.6105FALSE
621.2222FALSE
455.6105FALSE
621.2221FALSE
455.6106FALSE
621.2222FALSE
455.6105FALSE
621.2222FALSE
455.6105FALSE
621.2221FALSE
455.6106FALSE
621.2222FALSE
455.6105FALSE
621.2222FALSE
455.6105FALSE
621.2221FALSE
455.6106FALSE
621.2222FALSE
455.6105FALSE
621.2222FALSE
455.6105FALSE
621.2221FALSE
455.6106FALSE
621.2222FALSE
621.2222FALSE
455.6105FALSE
621.2221FALSE
455.6105FALSE
621.2222FALSE
455.6106FALSE
621.2222FALSE
455.6105FALSE
621.2221FALSE
455.6105FALSE
621.2222FALSE
455.6106FALSE
621.2222FALSE
455.6105FALSE
621.2221FALSE
455.6105FALSE
621.2222FALSE
455.6106FALSE
621.2222FALSE
455.6105FALSE
621.2221FALSE
455.6105FALSE
621.2222FALSE
455.6106FALSE
621.2222FALSE
455.6105FALSE
$par
time_ind_lag0.bw 
       -2.022276 

$value
[1] 455.6105

$counts
function gradient 
      25       25 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2294FALSE
621.2309FALSE
621.2284FALSE
621.2222FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
621.2221FALSE
621.2222FALSE
621.2222FALSE
$par
smooth_log_cases_lag1.bw 
               -1.574403 

$value
[1] 621.2221

$counts
function gradient 
      47       47 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

501.7045FALSE
490.1498FALSE
501.6662FALSE
490.1273FALSE
501.7428FALSE
490.1723FALSE
501.7034FALSE
490.1508FALSE
501.7056FALSE
490.1488FALSE
468.3507FALSE
466.4827FALSE
468.3275FALSE
466.4649FALSE
466.5009FALSE
466.4835FALSE
468.3519FALSE
468.3495FALSE
466.4823FALSE
456.6734FALSE
455.6225FALSE
456.672FALSE
455.6224FALSE
456.6748FALSE
455.6225FALSE
455.6226FALSE
456.6726FALSE
455.6223FALSE
456.6741FALSE
455.6166FALSE
456.503FALSE
455.6166FALSE
456.5018FALSE
455.6166FALSE
456.5042FALSE
455.6156FALSE
456.5018FALSE
455.6175FALSE
456.5043FALSE
455.6214FALSE
455.911FALSE
455.6214FALSE
455.9104FALSE
455.6214FALSE
455.9116FALSE
455.6215FALSE
455.9112FALSE
455.6213FALSE
455.9108FALSE
455.7975FALSE
455.6194FALSE
455.7972FALSE
455.6194FALSE
455.7978FALSE
455.6194FALSE
455.7962FALSE
455.6196FALSE
455.7987FALSE
455.6192FALSE
455.6555FALSE
455.6434FALSE
455.6555FALSE
455.6434FALSE
455.6556FALSE
455.6434FALSE
455.6562FALSE
455.642FALSE
455.6548FALSE
455.6447FALSE
455.6436FALSE
455.6175FALSE
455.6435FALSE
455.6175FALSE
455.6436FALSE
455.6175FALSE
455.6439FALSE
455.6178FALSE
455.6433FALSE
455.6172FALSE
455.6374FALSE
455.616FALSE
455.6374FALSE
455.6159FALSE
455.6375FALSE
455.616FALSE
455.6372FALSE
455.6163FALSE
455.6376FALSE
455.6156FALSE
455.632FALSE
455.6199FALSE
455.6319FALSE
455.6199FALSE
455.632FALSE
455.6199FALSE
455.6318FALSE
455.6189FALSE
455.6322FALSE
455.6209FALSE
455.6276FALSE
455.6156FALSE
455.6276FALSE
455.6156FALSE
455.6276FALSE
455.6156FALSE
455.6284FALSE
455.6155FALSE
455.6271FALSE
455.6156FALSE
455.6237FALSE
455.6158FALSE
455.6237FALSE
455.6158FALSE
455.6237FALSE
455.6158FALSE
455.624FALSE
455.6161FALSE
455.6234FALSE
455.6154FALSE
455.62FALSE
455.6155FALSE
455.62FALSE
455.62FALSE
455.6155FALSE
455.6198FALSE
455.6155FALSE
455.6203FALSE
455.6155FALSE
455.6188FALSE
455.6155FALSE
455.6188FALSE
455.6154FALSE
455.6188FALSE
455.6154FALSE
455.6192FALSE
455.6155FALSE
455.6186FALSE
455.6154FALSE
455.6175FALSE
455.6155FALSE
455.6175FALSE
455.6154FALSE
455.6175FALSE
455.6154FALSE
455.6177FALSE
455.6154FALSE
455.6176FALSE
455.6155FALSE
455.6166FALSE
455.6155FALSE
455.6166FALSE
455.6154FALSE
455.6166FALSE
455.6154FALSE
455.6163FALSE
455.6154FALSE
455.6168FALSE
455.6156FALSE
455.6158FALSE
455.6154FALSE
455.6158FALSE
455.6145FALSE
455.6158FALSE
455.6145FALSE
455.6159FALSE
455.6146FALSE
455.6156FALSE
455.6147FALSE
455.6155FALSE
455.6146FALSE
455.6155FALSE
455.6121FALSE
455.6155FALSE
455.6121FALSE
455.6157FALSE
455.6121FALSE
455.6156FALSE
455.6122FALSE
455.6153FALSE
455.6122FALSE
455.6153FALSE
455.6114FALSE
455.6153FALSE
455.6114FALSE
455.6155FALSE
455.6114FALSE
455.6155FALSE
455.6115FALSE
455.6152FALSE
455.6114FALSE
455.6152FALSE
455.6109FALSE
455.6152FALSE
455.6109FALSE
455.6154FALSE
455.6109FALSE
455.6154FALSE
455.611FALSE
455.6153FALSE
455.611FALSE
455.6153FALSE
455.6107FALSE
455.6153FALSE
455.6107FALSE
455.6154FALSE
455.6107FALSE
455.6153FALSE
455.6108FALSE
455.6152FALSE
455.6108FALSE
455.6152FALSE
455.6152FALSE
455.6106FALSE
455.6154FALSE
455.6154FALSE
455.6106FALSE
455.6152FALSE
455.6152FALSE
455.6106FALSE
455.6152FALSE
455.6106FALSE
455.6154FALSE
455.6107FALSE
455.6154FALSE
455.6134FALSE
455.6152FALSE
455.6134FALSE
455.6152FALSE
455.6134FALSE
455.6152FALSE
455.6137FALSE
455.6154FALSE
455.6132FALSE
455.6154FALSE
455.6106FALSE
455.6152FALSE
455.6106FALSE
455.6152FALSE
455.6106FALSE
455.6152FALSE
455.6107FALSE
455.6154FALSE
455.6154FALSE
455.6106FALSE
455.6105FALSE
455.6152FALSE
455.6152FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6154FALSE
455.6106FALSE
455.6154FALSE
455.6106FALSE
455.6152FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6154FALSE
455.6106FALSE
455.6154FALSE
455.6106FALSE
455.6152FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6154FALSE
455.6106FALSE
455.6154FALSE
455.6106FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6107FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6106FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6106FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6106FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6106FALSE
455.6152FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6106FALSE
455.6154FALSE
455.6105FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6106FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6106FALSE
455.6154FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6152FALSE
455.6106FALSE
455.6154FALSE
455.6105FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6105FALSE
455.6106FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6105FALSE
455.6105FALSE
455.6152FALSE
455.6106FALSE
455.6105FALSE
455.6154FALSE
455.6105FALSE
455.6105FALSE
455.6154FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                4.928922                -1.938628 

$value
[1] 455.6152

$counts
function gradient 
      36       36 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

455.6105FALSE
455.6106FALSE
455.6105FALSE
455.6105FALSE
455.6105FALSE
455.6105FALSE
455.6106FALSE
455.6105FALSE
455.6105FALSE
455.6105FALSE
455.6105FALSE
455.6106FALSE
455.6105FALSE
455.6105FALSE
455.6105FALSE
455.6105FALSE
455.6106FALSE
455.6105FALSE
455.6105FALSE
455.6105FALSE
455.6105FALSE
455.6106FALSE
455.6105FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.495460                -2.022316 

$value
[1] 455.6105

$counts
function gradient 
      46       46 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1093.017    0.546  779.661 
