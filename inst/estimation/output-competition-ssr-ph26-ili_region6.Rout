
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
886.0397FALSE
886.2329FALSE
697.5121FALSE
886.0391FALSE
886.1979FALSE
697.5018FALSE
886.0402FALSE
697.5224FALSE
886.268FALSE
697.155FALSE
888.328FALSE
882.6644FALSE
888.3529FALSE
697.1993FALSE
882.6946FALSE
888.3031FALSE
697.1107FALSE
882.6341FALSE
883.3123FALSE
695.5756FALSE
876.3467FALSE
883.3054FALSE
695.5652FALSE
876.3452FALSE
883.3193FALSE
695.586FALSE
882.5976FALSE
876.3482FALSE
692.0567FALSE
882.5974FALSE
876.3263FALSE
692.0538FALSE
876.326FALSE
882.5978FALSE
692.0596FALSE
887.6355FALSE
876.3267FALSE
694.5101FALSE
887.6584FALSE
876.3249FALSE
887.6127FALSE
694.5423FALSE
876.3249FALSE
882.5969FALSE
694.478FALSE
876.3249FALSE
882.5969FALSE
691.9591FALSE
876.3249FALSE
882.597FALSE
691.9597FALSE
876.3249FALSE
691.9585FALSE
882.5969FALSE
876.3249FALSE
$par
smooth_log_cases_lag0.bw 
               -1.736841 

$value
[1] 876.3249

$counts
function gradient 
       6        6 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

691.96FALSE
882.5969FALSE
691.9596FALSE
882.5969FALSE
691.9603FALSE
882.5969FALSE
691.9583FALSE
882.5969FALSE
691.9583FALSE
882.5969FALSE
$par
smooth_log_cases_lag1.bw 
                -1.77949 

$value
[1] 882.5969

$counts
function gradient 
       8        8 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

691.9586FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
691.9581FALSE
691.9586FALSE
691.9584FALSE
$par
time_ind_lag0.bw 
       -1.587472 

$value
[1] 691.9581

$counts
function gradient 
      29       29 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

747.5372FALSE
744.4942FALSE
747.4695FALSE
744.4379FALSE
747.6048FALSE
744.551FALSE
747.6004FALSE
744.5513FALSE
747.4739FALSE
744.4379FALSE
706.0894FALSE
708.1314FALSE
706.0824FALSE
708.1213FALSE
706.0965FALSE
708.1416FALSE
706.0807FALSE
708.1194FALSE
706.0981FALSE
708.1434FALSE
704.7679FALSE
705.6497FALSE
704.7607FALSE
705.6393FALSE
704.7751FALSE
705.66FALSE
704.7599FALSE
705.6417FALSE
704.7758FALSE
705.6576FALSE
700.0918FALSE
696.8232FALSE
700.0805FALSE
696.8179FALSE
700.1029FALSE
696.8284FALSE
700.0906FALSE
696.8329FALSE
700.093FALSE
696.8135FALSE
992.6412FALSE
695.8222FALSE
992.6426FALSE
695.8175FALSE
992.6398FALSE
695.8269FALSE
992.6879FALSE
695.8253FALSE
992.5944FALSE
695.819FALSE
699.469FALSE
692.2505FALSE
699.4623FALSE
692.25FALSE
699.4756FALSE
692.2509FALSE
699.4705FALSE
692.254FALSE
699.4675FALSE
692.247FALSE
698.9109FALSE
692.146FALSE
698.9014FALSE
692.1457FALSE
698.9204FALSE
692.1463FALSE
698.913FALSE
692.1477FALSE
698.9089FALSE
692.1443FALSE
697.0038FALSE
692.0531FALSE
696.9999FALSE
692.0529FALSE
692.0532FALSE
697.0078FALSE
692.0528FALSE
697.0047FALSE
692.0533FALSE
697.003FALSE
692.0281FALSE
695.9851FALSE
695.9804FALSE
692.028FALSE
695.9898FALSE
692.0283FALSE
692.0266FALSE
695.9865FALSE
692.0296FALSE
695.9837FALSE
706.969FALSE
691.9915FALSE
706.9688FALSE
691.9915FALSE
706.9693FALSE
691.9916FALSE
707.0561FALSE
691.9913FALSE
706.8822FALSE
691.9918FALSE
694.0866FALSE
691.976FALSE
694.0835FALSE
691.976FALSE
694.0897FALSE
691.976FALSE
694.0977FALSE
691.9757FALSE
694.0756FALSE
691.9763FALSE
693.0053FALSE
692.0334FALSE
693.0044FALSE
692.0334FALSE
693.0062FALSE
692.0334FALSE
693.0174FALSE
692.0368FALSE
692.9932FALSE
692.03FALSE
693.0247FALSE
691.973FALSE
693.0243FALSE
691.973FALSE
693.0251FALSE
691.9731FALSE
693.0189FALSE
691.9736FALSE
693.0306FALSE
691.9725FALSE
692.3226FALSE
691.9667FALSE
692.3219FALSE
691.9667FALSE
692.3233FALSE
691.9667FALSE
692.3233FALSE
691.9664FALSE
692.3219FALSE
691.967FALSE
692.1864FALSE
691.962FALSE
692.186FALSE
691.962FALSE
692.1868FALSE
691.962FALSE
692.185FALSE
691.9617FALSE
692.1878FALSE
691.9623FALSE
692.0515FALSE
691.9639FALSE
692.0513FALSE
691.9639FALSE
692.0517FALSE
691.9639FALSE
692.0521FALSE
691.9645FALSE
692.0509FALSE
691.9633FALSE
692.0083FALSE
691.9616FALSE
691.9616FALSE
692.0082FALSE
691.9616FALSE
692.0084FALSE
691.9622FALSE
692.0089FALSE
691.9611FALSE
692.008FALSE
691.96FALSE
691.983FALSE
691.96FALSE
691.96FALSE
691.9829FALSE
691.9606FALSE
691.983FALSE
691.9603FALSE
691.9827FALSE
691.9591FALSE
691.9833FALSE
691.9591FALSE
691.9591FALSE
691.9707FALSE
691.9593FALSE
691.9707FALSE
691.9594FALSE
691.9707FALSE
691.9587FALSE
691.9704FALSE
691.9587FALSE
691.971FALSE
691.9587FALSE
705.498FALSE
691.9589FALSE
705.4979FALSE
691.959FALSE
691.9584FALSE
705.498FALSE
691.9584FALSE
705.5776FALSE
691.9584FALSE
705.4184FALSE
691.9587FALSE
691.9711FALSE
691.9587FALSE
691.9711FALSE
691.9583FALSE
691.9583FALSE
691.9712FALSE
691.9583FALSE
691.9717FALSE
691.9586FALSE
691.9586FALSE
691.9706FALSE
691.9601FALSE
691.9704FALSE
691.9601FALSE
691.9704FALSE
691.9601FALSE
691.9704FALSE
691.9607FALSE
691.9706FALSE
691.9595FALSE
691.9707FALSE
691.9583FALSE
691.9583FALSE
691.9643FALSE
691.9583FALSE
691.9643FALSE
691.9586FALSE
691.9643FALSE
691.9586FALSE
691.9645FALSE
691.9582FALSE
691.9646FALSE
691.9582FALSE
691.9612FALSE
691.9582FALSE
691.9612FALSE
691.9585FALSE
691.9612FALSE
691.9585FALSE
691.9616FALSE
691.9615FALSE
691.9582FALSE
691.9597FALSE
691.9582FALSE
691.9597FALSE
691.9582FALSE
691.9598FALSE
691.9585FALSE
691.9599FALSE
691.9585FALSE
691.96FALSE
691.9582FALSE
691.9588FALSE
691.9582FALSE
691.9582FALSE
691.9588FALSE
691.9585FALSE
691.9588FALSE
691.9585FALSE
691.9594FALSE
691.9582FALSE
691.9591FALSE
691.9582FALSE
691.9586FALSE
691.9582FALSE
691.9585FALSE
691.9586FALSE
691.9585FALSE
691.9586FALSE
691.9582FALSE
691.9587FALSE
691.9582FALSE
691.9589FALSE
691.9582FALSE
691.9583FALSE
691.9585FALSE
691.9583FALSE
691.9585FALSE
691.9583FALSE
691.9582FALSE
691.9587FALSE
691.9582FALSE
691.9586FALSE
691.9582FALSE
691.9583FALSE
691.9585FALSE
691.9583FALSE
691.9585FALSE
691.9583FALSE
691.9582FALSE
691.9586FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.959FALSE
691.9582FALSE
691.959FALSE
691.9585FALSE
691.959FALSE
691.9585FALSE
691.9595FALSE
691.9582FALSE
691.9584FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                7.482882                -1.587637 

$value
[1] 691.9582

$counts
function gradient 
      37       37 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9584FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
691.9582FALSE
691.9582FALSE
691.9582FALSE
691.9585FALSE
691.9585FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                6.619388                -1.587635 

$value
[1] 691.9582

$counts
function gradient 
      68       68 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
737.976   0.632 965.095 
