
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
617.8598FALSE
462.5438FALSE
619.6721FALSE
617.8272FALSE
462.5429FALSE
619.6421FALSE
617.8924FALSE
619.7021FALSE
462.5448FALSE
609.4789FALSE
613.0038FALSE
467.9608FALSE
609.4992FALSE
613.0219FALSE
467.9959FALSE
609.4587FALSE
612.9859FALSE
467.9258FALSE
604.5009FALSE
609.6613FALSE
462.1025FALSE
609.6602FALSE
604.5041FALSE
462.1021FALSE
604.4995FALSE
609.6625FALSE
462.1028FALSE
609.6384FALSE
604.576FALSE
462.0983FALSE
609.6384FALSE
604.5734FALSE
462.0997FALSE
609.6385FALSE
604.5787FALSE
462.0969FALSE
609.6383FALSE
604.4933FALSE
462.0845FALSE
609.6382FALSE
604.4929FALSE
462.0839FALSE
609.6384FALSE
604.4945FALSE
462.0851FALSE
609.6387FALSE
604.493FALSE
462.0495FALSE
609.6391FALSE
462.0498FALSE
604.4938FALSE
609.6382FALSE
462.0492FALSE
604.4927FALSE
609.6379FALSE
462.0659FALSE
604.4927FALSE
609.6379FALSE
462.065FALSE
604.493FALSE
609.638FALSE
462.0667FALSE
604.493FALSE
609.6389FALSE
462.0469FALSE
609.6393FALSE
604.4927FALSE
462.0466FALSE
609.6384FALSE
604.493FALSE
462.0472FALSE
609.6379FALSE
604.493FALSE
462.0478FALSE
609.6378FALSE
604.4927FALSE
462.0481FALSE
609.6379FALSE
604.493FALSE
462.0474FALSE
609.639FALSE
604.493FALSE
462.0465FALSE
609.6395FALSE
462.0466FALSE
604.4927FALSE
609.6385FALSE
462.0468FALSE
609.6378FALSE
604.493FALSE
462.0471FALSE
609.6378FALSE
604.493FALSE
462.0475FALSE
609.6379FALSE
604.4927FALSE
609.6381FALSE
462.0468FALSE
604.493FALSE
609.6385FALSE
462.0464FALSE
604.493FALSE
609.6378FALSE
462.0467FALSE
604.4927FALSE
609.6378FALSE
462.0467FALSE
604.493FALSE
609.6378FALSE
462.0464FALSE
604.493FALSE
609.6378FALSE
462.0467FALSE
604.4927FALSE
462.0467FALSE
609.639FALSE
604.493FALSE
462.0464FALSE
609.6395FALSE
604.493FALSE
462.0467FALSE
609.6386FALSE
462.0467FALSE
604.4927FALSE
609.6378FALSE
462.0464FALSE
609.6378FALSE
604.493FALSE
609.6378FALSE
604.493FALSE
462.0467FALSE
609.6383FALSE
604.4927FALSE
462.0467FALSE
609.6388FALSE
604.493FALSE
462.0464FALSE
609.6379FALSE
462.0467FALSE
604.493FALSE
609.6378FALSE
604.4927FALSE
462.0467FALSE
609.6378FALSE
462.0464FALSE
604.493FALSE
609.6378FALSE
462.0467FALSE
609.6379FALSE
604.493FALSE
462.0467FALSE
609.6384FALSE
604.4927FALSE
609.6378FALSE
462.0464FALSE
604.493FALSE
609.6378FALSE
462.0467FALSE
604.493FALSE
609.6378FALSE
462.0467FALSE
604.4927FALSE
609.6378FALSE
462.0464FALSE
604.493FALSE
609.6383FALSE
462.0467FALSE
609.6387FALSE
604.493FALSE
462.0467FALSE
609.6378FALSE
604.4927FALSE
462.0464FALSE
609.6378FALSE
604.493FALSE
462.0467FALSE
609.6378FALSE
604.493FALSE
462.0467FALSE
609.6378FALSE
$par
smooth_log_cases_lag0.bw 
               -1.642277 

$value
[1] 609.6378

$counts
function gradient 
      21       21 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

462.0464FALSE
604.4927FALSE
462.0467FALSE
604.493FALSE
462.0467FALSE
604.493FALSE
462.0464FALSE
604.4927FALSE
462.0467FALSE
604.493FALSE
462.0467FALSE
604.493FALSE
462.0464FALSE
604.4927FALSE
462.0467FALSE
604.493FALSE
462.0467FALSE
604.493FALSE
462.0464FALSE
604.4927FALSE
462.0467FALSE
604.493FALSE
462.0467FALSE
604.493FALSE
462.0464FALSE
604.4927FALSE
462.0467FALSE
604.493FALSE
462.0467FALSE
604.493FALSE
462.0464FALSE
604.4927FALSE
462.0467FALSE
604.493FALSE
462.0467FALSE
604.493FALSE
462.0464FALSE
604.4927FALSE
462.0467FALSE
604.493FALSE
462.0467FALSE
604.493FALSE
$par
smooth_log_cases_lag1.bw 
               -1.694187 

$value
[1] 604.4927

$counts
function gradient 
      26       26 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
462.0464FALSE
462.0467FALSE
462.0467FALSE
$par
time_ind_lag0.bw 
       -1.905356 

$value
[1] 462.0464

$counts
function gradient 
      53       53 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

495.9552FALSE
496.23FALSE
495.9417FALSE
496.2201FALSE
495.9686FALSE
496.2397FALSE
495.9581FALSE
496.24FALSE
495.9522FALSE
496.2199FALSE
468.1555FALSE
474.0991FALSE
468.1375FALSE
474.0699FALSE
468.1737FALSE
474.1284FALSE
468.1644FALSE
474.1011FALSE
468.1467FALSE
474.0972FALSE
463.2952FALSE
468.5393FALSE
463.2952FALSE
463.2951FALSE
468.5393FALSE
463.2936FALSE
468.5392FALSE
463.2967FALSE
468.5393FALSE
462.6716FALSE
468.5393FALSE
462.6716FALSE
468.5369FALSE
462.6716FALSE
468.537FALSE
462.6712FALSE
468.5368FALSE
462.672FALSE
468.5369FALSE
462.5502FALSE
468.5369FALSE
462.5502FALSE
468.5262FALSE
462.5502FALSE
468.5263FALSE
462.5493FALSE
468.5261FALSE
462.5511FALSE
468.5262FALSE
462.7829FALSE
468.5262FALSE
462.7829FALSE
468.4513FALSE
462.7829FALSE
468.4516FALSE
462.79FALSE
468.4511FALSE
462.7759FALSE
468.4513FALSE
462.0854FALSE
468.4513FALSE
462.0854FALSE
474.9787FALSE
462.0854FALSE
474.9619FALSE
462.0848FALSE
474.9956FALSE
462.086FALSE
474.9787FALSE
462.0564FALSE
474.9787FALSE
462.0564FALSE
468.3397FALSE
462.0564FALSE
468.34FALSE
462.056FALSE
468.3394FALSE
462.0568FALSE
468.3397FALSE
462.0518FALSE
468.3397FALSE
462.0518FALSE
468.3006FALSE
462.0518FALSE
468.3005FALSE
462.0513FALSE
468.3008FALSE
462.0523FALSE
468.3006FALSE
462.2275FALSE
468.3006FALSE
462.2275FALSE
468.2944FALSE
462.2275FALSE
468.2944FALSE
468.2944FALSE
462.2296FALSE
468.2944FALSE
462.2254FALSE
468.2944FALSE
462.0512FALSE
468.294FALSE
462.0512FALSE
468.294FALSE
462.0512FALSE
468.294FALSE
462.0515FALSE
468.294FALSE
462.0508FALSE
468.294FALSE
462.3544FALSE
468.361FALSE
462.3544FALSE
468.3603FALSE
462.3544FALSE
468.3616FALSE
462.3522FALSE
468.361FALSE
462.3565FALSE
468.361FALSE
462.0552FALSE
468.2939FALSE
468.2939FALSE
462.0552FALSE
468.2939FALSE
462.0552FALSE
468.2939FALSE
462.0548FALSE
468.2939FALSE
462.0556FALSE
468.2943FALSE
462.0491FALSE
468.2941FALSE
462.0491FALSE
468.2944FALSE
462.0491FALSE
468.2943FALSE
462.0494FALSE
468.2943FALSE
462.0489FALSE
468.2939FALSE
462.0586FALSE
468.2939FALSE
462.0586FALSE
468.2939FALSE
462.0586FALSE
468.2939FALSE
462.0583FALSE
468.2939FALSE
462.0589FALSE
468.2939FALSE
462.0496FALSE
468.2939FALSE
462.0496FALSE
468.2939FALSE
462.0496FALSE
468.2939FALSE
462.0493FALSE
468.2939FALSE
462.0499FALSE
468.3166FALSE
462.0488FALSE
468.3164FALSE
462.0488FALSE
468.3168FALSE
468.3166FALSE
462.0488FALSE
468.3166FALSE
462.0492FALSE
468.2939FALSE
462.0491FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0491FALSE
468.2939FALSE
462.0491FALSE
468.2939FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0492FALSE
468.2939FALSE
468.2939FALSE
462.0491FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0492FALSE
468.2939FALSE
462.0491FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0492FALSE
468.2939FALSE
462.0491FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
462.0492FALSE
468.2939FALSE
462.0491FALSE
468.2939FALSE
462.0488FALSE
468.2939FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
              -0.1217755               -5.4890589 

$value
[1] 468.2939

$counts
function gradient 
      23       23 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0591FALSE
462.0591FALSE
462.0591FALSE
462.0588FALSE
462.0594FALSE
462.049FALSE
462.049FALSE
462.049FALSE
462.049FALSE
462.0493FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
462.0488FALSE
462.0488FALSE
462.0488FALSE
462.0492FALSE
462.0491FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                2.669189                -1.905404 

$value
[1] 462.0488

$counts
function gradient 
      57       57 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
 977.250    0.707 1115.879 
