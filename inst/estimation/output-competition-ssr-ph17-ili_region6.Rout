
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
717.6627FALSE
981.0673FALSE
956.7265FALSE
981.0792FALSE
956.7359FALSE
717.6517FALSE
981.0554FALSE
956.717FALSE
717.6737FALSE
978.2666FALSE
959.359FALSE
715.739FALSE
978.2696FALSE
959.3533FALSE
715.7775FALSE
978.2636FALSE
959.3646FALSE
715.7012FALSE
977.4428FALSE
955.8913FALSE
714.904FALSE
977.4425FALSE
955.8885FALSE
714.8915FALSE
955.8942FALSE
714.9164FALSE
977.443FALSE
955.8003FALSE
710.7648FALSE
977.4509FALSE
955.8007FALSE
710.7627FALSE
977.4516FALSE
955.8FALSE
977.4501FALSE
710.7669FALSE
955.7985FALSE
711.6404FALSE
977.4414FALSE
955.7987FALSE
711.6525FALSE
977.4412FALSE
711.6283FALSE
955.7984FALSE
710.7694FALSE
955.7983FALSE
977.4416FALSE
710.7714FALSE
955.7983FALSE
977.4612FALSE
710.7678FALSE
955.7983FALSE
710.7584FALSE
955.7983FALSE
977.462FALSE
710.7578FALSE
955.7983FALSE
977.4605FALSE
710.759FALSE
955.7983FALSE
$par
smooth_log_cases_lag1.bw 
               -2.522311 

$value
[1] 955.7983

$counts
function gradient 
       7        7 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

710.7566FALSE
977.4413FALSE
710.7569FALSE
710.7572FALSE
977.4414FALSE
710.7568FALSE
977.4413FALSE
977.4413FALSE
710.7584FALSE
977.4413FALSE
710.7566FALSE
977.4412FALSE
710.7565FALSE
977.4414FALSE
710.7572FALSE
977.4412FALSE
710.757FALSE
977.4417FALSE
710.7565FALSE
977.4412FALSE
710.7571FALSE
977.4413FALSE
710.7571FALSE
977.4412FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
977.4412FALSE
710.757FALSE
977.4416FALSE
710.7565FALSE
977.4412FALSE
710.7572FALSE
977.4413FALSE
710.757FALSE
977.4413FALSE
710.7565FALSE
977.4412FALSE
710.7572FALSE
977.4413FALSE
710.757FALSE
710.7565FALSE
977.4413FALSE
977.4412FALSE
710.7572FALSE
977.4413FALSE
710.757FALSE
977.4413FALSE
977.4412FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
977.4413FALSE
710.757FALSE
977.4412FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
977.4413FALSE
710.757FALSE
977.4412FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
977.4413FALSE
710.757FALSE
977.4412FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
977.4413FALSE
977.4412FALSE
710.757FALSE
977.4413FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
977.4412FALSE
710.757FALSE
977.4413FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
977.4412FALSE
710.757FALSE
977.4413FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
977.4412FALSE
710.757FALSE
977.4413FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
977.4412FALSE
710.757FALSE
977.4413FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
977.4412FALSE
710.757FALSE
977.4413FALSE
710.7565FALSE
977.4413FALSE
710.7572FALSE
710.757FALSE
$par
time_ind_lag0.bw 
       -1.613191 

$value
[1] 710.7565

$counts
function gradient 
      25       25 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

977.4412FALSE
977.4413FALSE
977.4413FALSE
977.4412FALSE
977.4413FALSE
977.4413FALSE
977.4412FALSE
977.4413FALSE
977.4413FALSE
977.4412FALSE
977.4413FALSE
977.4413FALSE
977.4412FALSE
977.4413FALSE
977.4413FALSE
977.4412FALSE
977.4413FALSE
977.4413FALSE
977.4412FALSE
977.4413FALSE
977.4413FALSE
$par
smooth_log_cases_lag0.bw 
               -3.634892 

$value
[1] 977.4412

$counts
function gradient 
      31       31 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

747.5502FALSE
745.8804FALSE
745.8453FALSE
747.5212FALSE
745.9155FALSE
747.5792FALSE
745.91FALSE
747.5742FALSE
745.8521FALSE
747.5262FALSE
727.375FALSE
728.7398FALSE
727.3355FALSE
728.7035FALSE
727.4142FALSE
728.7759FALSE
727.3668FALSE
728.7322FALSE
727.383FALSE
728.7472FALSE
726.1553FALSE
726.1551FALSE
731.5773FALSE
726.1554FALSE
731.5772FALSE
726.1452FALSE
731.5773FALSE
726.1653FALSE
731.5696FALSE
723.5684FALSE
731.5849FALSE
723.5682FALSE
724.2451FALSE
723.5687FALSE
724.2414FALSE
723.5598FALSE
724.2489FALSE
723.5771FALSE
724.2363FALSE
724.254FALSE
719.3313FALSE
723.12FALSE
719.3337FALSE
723.1168FALSE
719.3289FALSE
723.1231FALSE
719.3917FALSE
723.1101FALSE
719.2713FALSE
723.1298FALSE
721.8712FALSE
717.1901FALSE
721.8709FALSE
717.1882FALSE
721.8716FALSE
717.1921FALSE
721.8638FALSE
717.1753FALSE
717.2049FALSE
721.8787FALSE
918.4455FALSE
711.2877FALSE
918.4564FALSE
711.2873FALSE
918.4346FALSE
711.2882FALSE
918.61FALSE
918.2807FALSE
711.2912FALSE
716.1639FALSE
716.1632FALSE
711.2843FALSE
713.6163FALSE
716.1645FALSE
713.6157FALSE
716.1527FALSE
713.617FALSE
716.175FALSE
713.6068FALSE
713.7818FALSE
713.6258FALSE
713.7819FALSE
711.2291FALSE
713.7818FALSE
713.7741FALSE
711.2282FALSE
713.7895FALSE
711.23FALSE
711.2256FALSE
983.4672FALSE
711.2331FALSE
983.4916FALSE
711.1875FALSE
983.4429FALSE
711.1867FALSE
983.4672FALSE
711.1883FALSE
983.4672FALSE
711.1868FALSE
712.2855FALSE
711.1882FALSE
711.1733FALSE
712.2866FALSE
711.1728FALSE
712.2842FALSE
711.1739FALSE
712.294FALSE
711.175FALSE
712.2772FALSE
711.1716FALSE
712.5724FALSE
711.143FALSE
712.5729FALSE
711.1424FALSE
712.5718FALSE
711.1437FALSE
712.5672FALSE
711.1447FALSE
712.5775FALSE
711.1414FALSE
716.9568FALSE
711.0016FALSE
716.9577FALSE
711.0009FALSE
716.9558FALSE
711.0023FALSE
717.0058FALSE
711.0026FALSE
716.9078FALSE
711.001FALSE
712.2435FALSE
710.8405FALSE
712.2437FALSE
712.2432FALSE
710.8402FALSE
712.2412FALSE
710.8407FALSE
712.2458FALSE
710.8389FALSE
712.1912FALSE
710.842FALSE
712.1915FALSE
710.8161FALSE
712.1908FALSE
710.8159FALSE
712.1925FALSE
710.8162FALSE
712.1899FALSE
710.8139FALSE
712.1695FALSE
712.17FALSE
710.8183FALSE
712.1689FALSE
710.784FALSE
712.1695FALSE
710.784FALSE
712.1695FALSE
710.7841FALSE
712.1622FALSE
712.163FALSE
710.7859FALSE
712.1614FALSE
710.7847FALSE
712.1622FALSE
710.7729FALSE
710.7728FALSE
712.1623FALSE
710.7729FALSE
712.105FALSE
710.7723FALSE
712.1069FALSE
710.7735FALSE
712.103FALSE
710.7691FALSE
712.1047FALSE
710.7691FALSE
712.1052FALSE
711.5366FALSE
710.7691FALSE
711.5417FALSE
710.7685FALSE
711.5314FALSE
710.7697FALSE
711.5357FALSE
711.5374FALSE
710.8841FALSE
722.941FALSE
710.8841FALSE
722.9194FALSE
710.8841FALSE
722.9625FALSE
722.9515FALSE
710.8871FALSE
722.9305FALSE
710.8818FALSE
711.3424FALSE
710.7655FALSE
711.3445FALSE
710.7654FALSE
711.3404FALSE
710.7655FALSE
711.3434FALSE
710.7669FALSE
711.3414FALSE
710.7661FALSE
711.3179FALSE
710.7606FALSE
711.3199FALSE
710.7606FALSE
711.3159FALSE
710.7606FALSE
711.3185FALSE
710.7601FALSE
711.3173FALSE
710.7612FALSE
715.4568FALSE
710.7614FALSE
715.4264FALSE
710.7614FALSE
715.4871FALSE
710.7614FALSE
715.469FALSE
710.763FALSE
715.4445FALSE
710.7599FALSE
711.2612FALSE
710.7593FALSE
711.2641FALSE
710.7593FALSE
711.2582FALSE
711.2618FALSE
710.7593FALSE
711.2605FALSE
710.7609FALSE
711.2735FALSE
711.2705FALSE
710.7595FALSE
710.7583FALSE
711.2766FALSE
710.7583FALSE
711.2768FALSE
710.7583FALSE
711.2703FALSE
710.7587FALSE
711.2612FALSE
710.7589FALSE
711.2641FALSE
710.7576FALSE
710.7576FALSE
711.2582FALSE
711.2618FALSE
710.7576FALSE
711.2605FALSE
710.757FALSE
711.2972FALSE
710.7582FALSE
711.2956FALSE
710.7573FALSE
711.2988FALSE
710.7573FALSE
711.3002FALSE
710.7573FALSE
711.2943FALSE
710.7568FALSE
711.2492FALSE
710.7579FALSE
711.2459FALSE
710.7565FALSE
711.2524FALSE
711.2524FALSE
710.7565FALSE
711.246FALSE
710.7565FALSE
711.1767FALSE
710.758FALSE
711.1742FALSE
710.7571FALSE
711.1792FALSE
711.1783FALSE
710.7567FALSE
711.1751FALSE
710.7567FALSE
711.1883FALSE
710.7567FALSE
711.1926FALSE
710.7573FALSE
711.1839FALSE
710.7573FALSE
711.1852FALSE
710.7565FALSE
711.1914FALSE
710.7565FALSE
711.1673FALSE
710.7566FALSE
711.165FALSE
710.7579FALSE
711.1701FALSE
710.7571FALSE
711.1683FALSE
710.7565FALSE
711.1663FALSE
710.7565FALSE
711.2274FALSE
710.7565FALSE
711.2311FALSE
710.758FALSE
711.2236FALSE
710.7571FALSE
711.2243FALSE
710.7565FALSE
711.2305FALSE
710.7565FALSE
711.1681FALSE
710.7565FALSE
711.1724FALSE
710.758FALSE
711.1654FALSE
710.7571FALSE
711.1665FALSE
711.1698FALSE
710.7565FALSE
711.1653FALSE
710.7565FALSE
711.1681FALSE
710.7565FALSE
711.1681FALSE
710.758FALSE
711.1663FALSE
710.7571FALSE
711.1655FALSE
710.7565FALSE
711.1683FALSE
710.7565FALSE
711.1727FALSE
710.7565FALSE
711.1662FALSE
710.758FALSE
711.1666FALSE
710.7571FALSE
711.1701FALSE
710.7565FALSE
711.1649FALSE
710.7565FALSE
711.1689FALSE
711.1677FALSE
710.7565FALSE
711.1659FALSE
710.758FALSE
711.1662FALSE
710.7571FALSE
711.1653FALSE
710.7565FALSE
711.1684FALSE
710.7565FALSE
711.1681FALSE
710.7565FALSE
711.1662FALSE
710.758FALSE
711.1657FALSE
710.7571FALSE
711.1649FALSE
710.7565FALSE
711.1689FALSE
711.1677FALSE
710.7565FALSE
710.7565FALSE
711.1659FALSE
710.758FALSE
711.1662FALSE
710.7571FALSE
711.1649FALSE
710.7565FALSE
711.1689FALSE
710.7565FALSE
710.7565FALSE
711.1677FALSE
710.758FALSE
710.7571FALSE
711.1659FALSE
710.7565FALSE
711.1662FALSE
711.1649FALSE
710.7565FALSE
710.7565FALSE
711.1689FALSE
710.758FALSE
711.1677FALSE
710.7571FALSE
711.1659FALSE
710.7565FALSE
711.1662FALSE
710.7565FALSE
711.1649FALSE
710.7565FALSE
711.1689FALSE
710.758FALSE
711.1677FALSE
710.7571FALSE
710.7565FALSE
711.1659FALSE
711.1662FALSE
710.7565FALSE
711.1649FALSE
710.7565FALSE
710.758FALSE
711.1689FALSE
710.7571FALSE
711.1677FALSE
710.7565FALSE
711.1659FALSE
710.7565FALSE
711.1662FALSE
710.7565FALSE
710.758FALSE
711.1649FALSE
710.7571FALSE
711.1689FALSE
710.7565FALSE
711.1677FALSE
710.7565FALSE
710.7565FALSE
711.1659FALSE
710.758FALSE
710.7571FALSE
711.1662FALSE
710.7565FALSE
711.1649FALSE
710.7565FALSE
711.1689FALSE
710.7565FALSE
711.1677FALSE
711.1659FALSE
710.758FALSE
711.1662FALSE
710.7571FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                3.773441                -1.612812 

$value
[1] 710.7565

$counts
function gradient 
      43       43 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
728.0865FALSE
728.0639FALSE
728.1091FALSE
728.1231FALSE
728.05FALSE
711.175FALSE
711.1723FALSE
711.1777FALSE
711.176FALSE
711.174FALSE
711.1654FALSE
711.1682FALSE
711.1682FALSE
711.1663FALSE
711.1655FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
711.1649FALSE
711.1689FALSE
711.1677FALSE
711.1659FALSE
711.1662FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
              -0.7588854               -1.6507844 

$value
[1] 711.1649

$counts
function gradient 
      76       76 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1024.437    0.704 1230.112 
