
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
455.893FALSE
572.6278FALSE
573.9032FALSE
455.8927FALSE
572.6242FALSE
573.8987FALSE
455.8933FALSE
572.6314FALSE
460.6997FALSE
573.9077FALSE
460.7265FALSE
574.7247FALSE
572.8833FALSE
460.6737FALSE
574.7273FALSE
572.8837FALSE
455.8449FALSE
574.7221FALSE
455.8452FALSE
572.8828FALSE
455.8447FALSE
572.8529FALSE
572.0716FALSE
455.8384FALSE
572.8537FALSE
455.8382FALSE
572.0709FALSE
572.852FALSE
455.8386FALSE
572.0723FALSE
572.6062FALSE
455.8299FALSE
572.0283FALSE
572.6058FALSE
455.83FALSE
572.6066FALSE
572.0273FALSE
455.8299FALSE
572.7382FALSE
572.0293FALSE
572.739FALSE
455.8298FALSE
572.7374FALSE
572.3921FALSE
455.8295FALSE
572.6081FALSE
572.3956FALSE
572.6086FALSE
455.83FALSE
572.3886FALSE
572.6075FALSE
455.8298FALSE
572.0237FALSE
572.6043FALSE
572.6044FALSE
572.0236FALSE
455.8299FALSE
572.6042FALSE
572.0238FALSE
455.8297FALSE
572.6042FALSE
455.8293FALSE
572.6043FALSE
572.022FALSE
455.8294FALSE
572.0218FALSE
455.8292FALSE
572.6041FALSE
572.0222FALSE
455.8293FALSE
572.6047FALSE
455.8293FALSE
572.6042FALSE
572.0626FALSE
455.8293FALSE
572.6051FALSE
572.0652FALSE
572.6041FALSE
455.8322FALSE
572.6042FALSE
572.0599FALSE
572.604FALSE
455.832FALSE
572.604FALSE
572.0207FALSE
572.6041FALSE
455.8325FALSE
572.6039FALSE
572.0208FALSE
572.604FALSE
455.8292FALSE
572.6041FALSE
572.0209FALSE
455.8293FALSE
572.604FALSE
572.0742FALSE
455.8294FALSE
572.6041FALSE
572.0768FALSE
455.8292FALSE
572.604FALSE
572.6045FALSE
572.0716FALSE
455.8293FALSE
572.604FALSE
572.021FALSE
455.8293FALSE
572.6041FALSE
455.8292FALSE
572.6041FALSE
572.0215FALSE
455.8293FALSE
572.0206FALSE
572.6041FALSE
455.8293FALSE
$par
time_ind_lag0.bw 
       -2.122891 

$value
[1] 455.8292

$counts
function gradient 
      13       13 

$convergence
[1] 0

$message
[1] "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL"

572.0207FALSE
572.6042FALSE
572.0209FALSE
572.604FALSE
572.0209FALSE
572.604FALSE
572.0207FALSE
572.6041FALSE
572.0209FALSE
572.6041FALSE
572.0209FALSE
572.604FALSE
572.0207FALSE
572.6041FALSE
572.0209FALSE
572.6041FALSE
572.0209FALSE
$par
smooth_log_cases_lag1.bw 
               -2.016666 

$value
[1] 572.0207

$counts
function gradient 
      14       14 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
572.604FALSE
572.6041FALSE
572.6041FALSE
$par
smooth_log_cases_lag0.bw 
               -1.749449 

$value
[1] 572.604

$counts
function gradient 
      32       32 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

510.7576FALSE
508.3887FALSE
510.7514FALSE
508.3813FALSE
510.7636FALSE
508.396FALSE
510.7246FALSE
508.3604FALSE
508.4169FALSE
510.7905FALSE
496.607FALSE
496.0994FALSE
496.5835FALSE
496.0813FALSE
496.6304FALSE
496.1174FALSE
496.6475FALSE
496.1357FALSE
496.5665FALSE
496.0631FALSE
493.5544FALSE
491.6705FALSE
493.5523FALSE
491.6653FALSE
493.5565FALSE
491.6756FALSE
493.528FALSE
491.6531FALSE
493.5809FALSE
491.6879FALSE
574.2998FALSE
496.9815FALSE
574.2955FALSE
496.9619FALSE
574.304FALSE
497.0012FALSE
574.2998FALSE
497.0316FALSE
574.2998FALSE
496.9315FALSE
544.2629FALSE
489.8405FALSE
544.2562FALSE
489.8219FALSE
489.8591FALSE
544.2695FALSE
489.8472FALSE
544.3106FALSE
489.8338FALSE
544.215FALSE
487.4343FALSE
493.2282FALSE
487.4165FALSE
493.2034FALSE
487.4519FALSE
493.2528FALSE
487.4455FALSE
493.2358FALSE
487.423FALSE
493.2205FALSE
485.856FALSE
487.8337FALSE
485.8428FALSE
487.8043FALSE
485.8692FALSE
487.8631FALSE
485.9037FALSE
487.8489FALSE
485.8083FALSE
487.8185FALSE
477.8962FALSE
490.6178FALSE
477.8811FALSE
490.606FALSE
477.9113FALSE
490.6295FALSE
477.9314FALSE
490.6803FALSE
477.861FALSE
490.5553FALSE
455.9071FALSE
455.9071FALSE
484.734FALSE
484.7201FALSE
455.9071FALSE
484.7478FALSE
455.9068FALSE
484.7629FALSE
455.9074FALSE
484.7052FALSE
455.9061FALSE
480.6706FALSE
455.9061FALSE
480.6553FALSE
455.9062FALSE
480.6859FALSE
455.9058FALSE
480.6923FALSE
455.9064FALSE
480.649FALSE
455.9019FALSE
455.9019FALSE
467.0802FALSE
455.9019FALSE
467.0637FALSE
455.9016FALSE
467.0968FALSE
455.9022FALSE
467.0855FALSE
467.075FALSE
455.8798FALSE
456.2812FALSE
455.8798FALSE
456.2812FALSE
455.8799FALSE
456.2812FALSE
455.8794FALSE
456.2791FALSE
455.8803FALSE
456.2833FALSE
455.8946FALSE
456.1897FALSE
455.8945FALSE
456.1896FALSE
455.8947FALSE
456.1897FALSE
455.8949FALSE
456.1877FALSE
455.8944FALSE
456.1917FALSE
455.8528FALSE
455.9386FALSE
455.8528FALSE
455.9385FALSE
455.8529FALSE
455.9387FALSE
455.8526FALSE
455.9384FALSE
455.8531FALSE
455.9388FALSE
458.0975FALSE
455.9377FALSE
458.0972FALSE
455.9376FALSE
458.0977FALSE
455.9377FALSE
458.1096FALSE
455.9374FALSE
458.0853FALSE
455.9379FALSE
455.8789FALSE
455.9327FALSE
455.8789FALSE
455.9327FALSE
455.879FALSE
455.9328FALSE
455.8791FALSE
455.9324FALSE
455.8787FALSE
455.933FALSE
455.8514FALSE
455.8948FALSE
455.8514FALSE
455.8947FALSE
455.8515FALSE
455.8949FALSE
455.8515FALSE
455.8942FALSE
455.8514FALSE
455.8954FALSE
455.8484FALSE
456.3769FALSE
455.8484FALSE
456.3766FALSE
455.8485FALSE
456.3773FALSE
455.8485FALSE
456.3804FALSE
455.8486FALSE
456.3734FALSE
455.8423FALSE
455.9094FALSE
455.8422FALSE
455.9093FALSE
455.8423FALSE
455.9096FALSE
455.842FALSE
455.9097FALSE
455.8425FALSE
455.9091FALSE
455.8356FALSE
455.8921FALSE
455.8356FALSE
455.892FALSE
455.8356FALSE
455.8922FALSE
455.8353FALSE
455.8919FALSE
455.8359FALSE
455.8923FALSE
455.8328FALSE
456.0632FALSE
455.8328FALSE
456.0629FALSE
455.8328FALSE
456.0634FALSE
455.833FALSE
456.0643FALSE
455.8328FALSE
456.0621FALSE
455.8324FALSE
455.8894FALSE
455.8324FALSE
455.8893FALSE
455.8324FALSE
455.8895FALSE
455.8324FALSE
455.8891FALSE
455.8323FALSE
455.8897FALSE
455.8314FALSE
455.8958FALSE
455.8314FALSE
455.8957FALSE
455.8314FALSE
455.8959FALSE
455.8314FALSE
455.8961FALSE
455.8313FALSE
455.8955FALSE
455.83FALSE
455.8892FALSE
455.83FALSE
455.8891FALSE
455.83FALSE
455.8893FALSE
455.8301FALSE
455.8893FALSE
455.8299FALSE
455.8891FALSE
455.8397FALSE
455.8892FALSE
455.8397FALSE
455.8891FALSE
455.8397FALSE
455.8893FALSE
455.8395FALSE
455.8889FALSE
455.8399FALSE
455.8895FALSE
455.8295FALSE
455.8892FALSE
455.8295FALSE
455.8891FALSE
455.8295FALSE
455.8893FALSE
455.8296FALSE
455.8889FALSE
455.8297FALSE
455.8296FALSE
455.8895FALSE
455.8296FALSE
457.0381FALSE
455.8296FALSE
457.0376FALSE
455.8297FALSE
457.0385FALSE
455.8295FALSE
457.0445FALSE
455.8295FALSE
457.0317FALSE
455.8295FALSE
455.9114FALSE
455.8295FALSE
455.9112FALSE
455.8296FALSE
455.9115FALSE
455.8297FALSE
455.9116FALSE
455.8295FALSE
455.9111FALSE
455.8295FALSE
455.8896FALSE
455.8295FALSE
455.8895FALSE
455.8296FALSE
455.8897FALSE
455.8297FALSE
455.8897FALSE
455.8295FALSE
455.8895FALSE
455.8295FALSE
455.889FALSE
455.8295FALSE
455.8889FALSE
455.8296FALSE
455.8892FALSE
455.8297FALSE
455.8889FALSE
455.8295FALSE
455.8893FALSE
455.8295FALSE
455.8869FALSE
455.8295FALSE
455.8867FALSE
455.8296FALSE
455.887FALSE
455.8869FALSE
455.8297FALSE
455.8869FALSE
455.8295FALSE
455.8569FALSE
455.8295FALSE
455.8569FALSE
455.8295FALSE
455.857FALSE
455.8296FALSE
455.857FALSE
455.8297FALSE
455.8569FALSE
455.8295FALSE
455.8433FALSE
455.8295FALSE
455.8432FALSE
455.8295FALSE
455.8433FALSE
455.8433FALSE
455.8296FALSE
455.8432FALSE
455.8297FALSE
455.8364FALSE
455.8295FALSE
455.8363FALSE
455.8295FALSE
455.8364FALSE
455.8295FALSE
455.8361FALSE
455.8296FALSE
455.8366FALSE
455.8297FALSE
455.8328FALSE
455.8295FALSE
455.8327FALSE
455.8295FALSE
455.8328FALSE
455.8295FALSE
455.8328FALSE
455.8296FALSE
455.833FALSE
455.8297FALSE
455.831FALSE
455.831FALSE
455.8295FALSE
455.831FALSE
455.8295FALSE
455.8295FALSE
455.831FALSE
455.8311FALSE
455.8296FALSE
455.831FALSE
455.8297FALSE
455.831FALSE
455.8295FALSE
455.831FALSE
455.8295FALSE
455.8307FALSE
455.8295FALSE
455.8313FALSE
455.8296FALSE
455.8308FALSE
455.8297FALSE
455.8308FALSE
455.8295FALSE
455.8308FALSE
455.8295FALSE
455.8305FALSE
455.8295FALSE
455.8311FALSE
455.8296FALSE
455.8299FALSE
455.8299FALSE
455.8297FALSE
455.8299FALSE
455.8295FALSE
455.83FALSE
455.8295FALSE
455.8302FALSE
455.8296FALSE
455.8295FALSE
455.8296FALSE
455.8296FALSE
455.8296FALSE
455.8297FALSE
455.8297FALSE
455.8295FALSE
455.8295FALSE
455.8296FALSE
455.8295FALSE
455.8294FALSE
455.8296FALSE
455.8294FALSE
455.8297FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                4.503839                -2.123168 

$value
[1] 455.8295

$counts
function gradient 
      40       40 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

455.8294FALSE
455.8295FALSE
455.8295FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
456.7216FALSE
456.7216FALSE
456.7216FALSE
456.7277FALSE
456.7155FALSE
455.8445FALSE
455.8445FALSE
455.8445FALSE
455.8448FALSE
455.8443FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8294FALSE
455.8294FALSE
455.8294FALSE
455.8295FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
455.8293FALSE
455.8293FALSE
455.8293FALSE
455.8294FALSE
455.8294FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.458590                -2.122896 

$value
[1] 455.8293

$counts
function gradient 
      76       76 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
 876.326    0.811 1140.214 
