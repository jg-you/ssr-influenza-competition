
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
428.5197FALSE
433.7874FALSE
343.9411FALSE
428.5067FALSE
433.7762FALSE
343.9364FALSE
428.5326FALSE
433.7985FALSE
343.9458FALSE
422.7776FALSE
427.6028FALSE
336.5827FALSE
422.7823FALSE
427.6048FALSE
336.583FALSE
422.773FALSE
336.5823FALSE
427.6008FALSE
422.1956FALSE
336.7504FALSE
427.4617FALSE
422.1951FALSE
336.7457FALSE
427.4613FALSE
422.1961FALSE
336.7551FALSE
427.4622FALSE
422.191FALSE
336.5824FALSE
427.4527FALSE
422.1911FALSE
336.5819FALSE
427.4531FALSE
422.191FALSE
336.5829FALSE
427.4522FALSE
422.1909FALSE
336.5818FALSE
422.1909FALSE
427.4561FALSE
336.5821FALSE
422.1908FALSE
427.4557FALSE
336.5815FALSE
422.1909FALSE
427.4565FALSE
336.5904FALSE
422.1906FALSE
427.4782FALSE
336.5897FALSE
422.1914FALSE
427.4789FALSE
336.5912FALSE
422.1906FALSE
427.4775FALSE
336.5819FALSE
422.1907FALSE
427.4528FALSE
336.5815FALSE
422.1906FALSE
336.5823FALSE
427.4525FALSE
422.191FALSE
427.4531FALSE
422.1906FALSE
336.5815FALSE
427.4694FALSE
427.47FALSE
422.1914FALSE
336.5818FALSE
427.4688FALSE
427.4528FALSE
422.1906FALSE
336.5818FALSE
427.4533FALSE
427.4524FALSE
422.1906FALSE
336.5815FALSE
427.4523FALSE
422.1906FALSE
427.4524FALSE
336.5818FALSE
427.4525FALSE
422.191FALSE
427.4522FALSE
336.5818FALSE
427.4526FALSE
422.1906FALSE
427.4524FALSE
336.5815FALSE
427.4522FALSE
422.1915FALSE
336.5818FALSE
427.4525FALSE
422.1906FALSE
427.4525FALSE
336.5818FALSE
427.4522FALSE
422.1906FALSE
427.4525FALSE
336.5815FALSE
427.4525FALSE
422.1906FALSE
427.4522FALSE
336.5818FALSE
427.4525FALSE
422.191FALSE
427.4525FALSE
336.5818FALSE
427.4522FALSE
422.1906FALSE
427.4525FALSE
336.5815FALSE
427.4525FALSE
422.1915FALSE
427.4522FALSE
336.5818FALSE
427.4525FALSE
422.1906FALSE
427.4525FALSE
336.5818FALSE
422.1906FALSE
427.4522FALSE
336.5815FALSE
427.4525FALSE
422.1906FALSE
422.191FALSE
336.5818FALSE
427.4525FALSE
422.1906FALSE
336.5818FALSE
422.1915FALSE
336.5815FALSE
427.4522FALSE
422.1906FALSE
336.5818FALSE
422.1906FALSE
336.5818FALSE
427.4525FALSE
422.1906FALSE
336.5815FALSE
422.1906FALSE
336.5818FALSE
427.4525FALSE
422.1906FALSE
336.5818FALSE
422.1911FALSE
336.5815FALSE
427.4522FALSE
422.1906FALSE
336.5818FALSE
422.1906FALSE
427.4525FALSE
422.1906FALSE
336.5818FALSE
422.1906FALSE
336.5815FALSE
427.4525FALSE
422.1906FALSE
336.5818FALSE
422.1909FALSE
336.5818FALSE
427.4522FALSE
422.1906FALSE
336.5815FALSE
422.1906FALSE
336.5818FALSE
427.4525FALSE
422.1906FALSE
$par
smooth_log_cases_lag0.bw 
               -1.554434 

$value
[1] 422.1906

$counts
function gradient 
      19       19 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

336.5818FALSE
336.5815FALSE
427.4525FALSE
336.5818FALSE
427.4522FALSE
336.5818FALSE
336.5815FALSE
427.4525FALSE
336.5818FALSE
336.5818FALSE
427.4525FALSE
336.5815FALSE
336.5818FALSE
427.4522FALSE
336.5818FALSE
$par
time_ind_lag0.bw 
       -1.305818 

$value
[1] 336.5815

$counts
function gradient 
      21       21 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
427.4522FALSE
427.4525FALSE
427.4525FALSE
$par
smooth_log_cases_lag1.bw 
               -1.427959 

$value
[1] 427.4522

$counts
function gradient 
      52       52 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

349.8314FALSE
352.4229FALSE
349.818FALSE
352.4056FALSE
349.8447FALSE
352.4402FALSE
349.8452FALSE
352.4356FALSE
349.8174FALSE
352.4101FALSE
338.3679FALSE
340.2608FALSE
338.363FALSE
340.256FALSE
338.3729FALSE
340.2658FALSE
338.3685FALSE
340.2615FALSE
338.3674FALSE
340.2602FALSE
337.6706FALSE
339.6365FALSE
337.6715FALSE
337.6698FALSE
339.6362FALSE
337.67FALSE
339.6368FALSE
337.6713FALSE
339.6364FALSE
337.6128FALSE
339.6365FALSE
337.6129FALSE
339.6365FALSE
337.6127FALSE
339.6364FALSE
339.6366FALSE
337.6137FALSE
339.637FALSE
337.6118FALSE
339.6361FALSE
337.5973FALSE
339.6363FALSE
337.598FALSE
339.6363FALSE
337.5967FALSE
339.6363FALSE
337.5971FALSE
339.6366FALSE
337.5975FALSE
339.636FALSE
337.6042FALSE
339.6355FALSE
337.6038FALSE
339.6356FALSE
337.6045FALSE
339.6355FALSE
337.604FALSE
339.6356FALSE
337.6043FALSE
339.6354FALSE
337.5861FALSE
339.6354FALSE
337.5865FALSE
337.5857FALSE
339.6354FALSE
337.5862FALSE
337.586FALSE
339.6353FALSE
338.0059FALSE
339.6355FALSE
338.001FALSE
338.0109FALSE
339.6352FALSE
338.0051FALSE
338.0068FALSE
339.6346FALSE
337.5828FALSE
337.5829FALSE
339.6346FALSE
337.5827FALSE
339.635FALSE
337.5822FALSE
339.6346FALSE
337.5834FALSE
339.6349FALSE
337.5806FALSE
339.6349FALSE
337.5806FALSE
339.635FALSE
337.5805FALSE
339.6349FALSE
337.5803FALSE
339.635FALSE
337.5809FALSE
339.6348FALSE
337.5796FALSE
339.6346FALSE
337.5801FALSE
337.5794FALSE
339.6346FALSE
337.5798FALSE
339.6348FALSE
337.5797FALSE
339.6347FALSE
337.58FALSE
339.6348FALSE
337.58FALSE
339.6346FALSE
337.5799FALSE
339.6346FALSE
337.5797FALSE
339.6345FALSE
337.5802FALSE
339.6346FALSE
337.5795FALSE
339.6345FALSE
337.5799FALSE
339.6342FALSE
337.5794FALSE
339.6342FALSE
337.5796FALSE
339.6342FALSE
337.5798FALSE
339.6343FALSE
337.58FALSE
339.6342FALSE
337.5798FALSE
339.634FALSE
337.5801FALSE
339.6336FALSE
337.5804FALSE
337.5795FALSE
339.6346FALSE
337.5794FALSE
339.6331FALSE
337.5795FALSE
339.6351FALSE
337.5794FALSE
339.6341FALSE
337.5796FALSE
339.6341FALSE
337.5794FALSE
339.6342FALSE
337.5795FALSE
339.6342FALSE
337.5795FALSE
339.6342FALSE
337.5794FALSE
339.6332FALSE
337.5793FALSE
339.6331FALSE
337.5798FALSE
339.6335FALSE
337.5793FALSE
339.6332FALSE
337.5794FALSE
339.6335FALSE
337.5793FALSE
339.633FALSE
337.5795FALSE
339.6329FALSE
337.5796FALSE
339.6332FALSE
337.5793FALSE
339.6329FALSE
337.5793FALSE
339.6332FALSE
337.5792FALSE
339.6329FALSE
337.5794FALSE
339.6328FALSE
337.5795FALSE
339.6332FALSE
337.5793FALSE
339.6329FALSE
337.5792FALSE
339.6332FALSE
337.5794FALSE
339.6329FALSE
337.5798FALSE
339.633FALSE
337.5792FALSE
339.6329FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.6328FALSE
337.5794FALSE
339.6329FALSE
337.5794FALSE
339.633FALSE
337.5791FALSE
339.6329FALSE
337.5792FALSE
339.633FALSE
337.5792FALSE
339.6758FALSE
337.5794FALSE
339.6762FALSE
337.5793FALSE
339.6753FALSE
339.6748FALSE
337.5791FALSE
339.6767FALSE
337.5792FALSE
339.6328FALSE
337.5792FALSE
339.6329FALSE
337.5794FALSE
339.6327FALSE
337.5794FALSE
339.6329FALSE
337.5791FALSE
339.6329FALSE
337.5792FALSE
339.6328FALSE
337.5791FALSE
339.6329FALSE
337.5794FALSE
339.6328FALSE
337.5794FALSE
339.6329FALSE
339.6327FALSE
337.5791FALSE
339.6331FALSE
337.5791FALSE
339.6331FALSE
337.5791FALSE
339.6333FALSE
337.5794FALSE
339.6328FALSE
337.5794FALSE
339.6338FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.6329FALSE
337.5791FALSE
339.6327FALSE
337.5794FALSE
339.6329FALSE
337.5794FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.6327FALSE
337.5794FALSE
339.6329FALSE
337.5794FALSE
339.6329FALSE
337.5791FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.633FALSE
337.5794FALSE
337.5794FALSE
339.6329FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.6328FALSE
337.5794FALSE
339.6328FALSE
337.5794FALSE
339.6329FALSE
337.5791FALSE
339.6329FALSE
337.5791FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5794FALSE
339.633FALSE
337.5794FALSE
339.6329FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5794FALSE
339.633FALSE
337.5794FALSE
339.6329FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5794FALSE
339.633FALSE
337.5794FALSE
339.6329FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5794FALSE
339.633FALSE
337.5794FALSE
339.6329FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5794FALSE
339.633FALSE
337.5794FALSE
339.6329FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5794FALSE
339.633FALSE
337.5794FALSE
339.6329FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5794FALSE
339.633FALSE
339.6329FALSE
337.5794FALSE
339.633FALSE
337.5791FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.633FALSE
337.5794FALSE
339.6329FALSE
337.5794FALSE
339.633FALSE
337.5791FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.633FALSE
337.5794FALSE
339.6329FALSE
337.5794FALSE
339.633FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6329FALSE
337.5794FALSE
339.633FALSE
337.5794FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6329FALSE
337.5794FALSE
339.633FALSE
337.5794FALSE
339.6327FALSE
337.5791FALSE
339.6328FALSE
337.5791FALSE
339.633FALSE
337.5791FALSE
339.6329FALSE
339.633FALSE
337.5794FALSE
337.5794FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
               -1.357722                -2.087157 

$value
[1] 337.5791

$counts
function gradient 
      40       40 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

339.6327FALSE
339.6328FALSE
339.633FALSE
339.6329FALSE
339.633FALSE
339.6327FALSE
339.6328FALSE
339.633FALSE
339.6329FALSE
339.633FALSE
339.6327FALSE
339.6328FALSE
339.633FALSE
339.6329FALSE
339.633FALSE
339.6327FALSE
339.6328FALSE
339.633FALSE
339.6329FALSE
339.633FALSE
339.6327FALSE
339.6328FALSE
339.633FALSE
339.6329FALSE
339.633FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
               -1.117128                -1.982677 

$value
[1] 339.6327

$counts
function gradient 
      44       44 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
955.442   0.503 771.443 
