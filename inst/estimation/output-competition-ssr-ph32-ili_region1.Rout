
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
352.1089FALSE
286.4615FALSE
345.0776FALSE
286.455FALSE
352.1191FALSE
345.0895FALSE
352.0986FALSE
286.468FALSE
345.0657FALSE
346.8452FALSE
282.19FALSE
341.2577FALSE
346.8471FALSE
282.1981FALSE
341.2573FALSE
282.1821FALSE
346.8432FALSE
341.258FALSE
283.6577FALSE
346.4163FALSE
341.2415FALSE
283.6516FALSE
346.4173FALSE
283.664FALSE
341.2408FALSE
346.4152FALSE
281.7907FALSE
341.2423FALSE
347.2491FALSE
281.7889FALSE
341.209FALSE
347.241FALSE
281.7927FALSE
341.2093FALSE
347.2571FALSE
346.3962FALSE
341.2088FALSE
287.0276FALSE
346.3962FALSE
341.2094FALSE
287.0683FALSE
346.3962FALSE
341.2087FALSE
286.9869FALSE
346.3961FALSE
341.2101FALSE
346.3962FALSE
281.7705FALSE
341.1955FALSE
346.3961FALSE
341.1961FALSE
281.7708FALSE
346.396FALSE
341.1949FALSE
281.7703FALSE
346.3961FALSE
341.1927FALSE
281.7698FALSE
346.396FALSE
341.1933FALSE
281.77FALSE
346.398FALSE
341.1921FALSE
281.7696FALSE
346.3973FALSE
341.193FALSE
281.7744FALSE
346.3986FALSE
341.192FALSE
281.7735FALSE
346.3959FALSE
341.1939FALSE
346.3959FALSE
281.7753FALSE
341.1927FALSE
346.3959FALSE
281.7693FALSE
341.1933FALSE
346.4564FALSE
281.7694FALSE
341.1921FALSE
346.4551FALSE
341.2643FALSE
346.4576FALSE
281.7691FALSE
341.2643FALSE
281.7773FALSE
346.3959FALSE
341.2642FALSE
281.7763FALSE
341.2079FALSE
346.3959FALSE
341.2072FALSE
281.7786FALSE
346.3959FALSE
341.2086FALSE
281.769FALSE
346.3984FALSE
341.1927FALSE
281.7692FALSE
346.3977FALSE
341.1918FALSE
281.7689FALSE
346.399FALSE
341.1937FALSE
346.3959FALSE
281.7774FALSE
341.1918FALSE
346.3959FALSE
281.7764FALSE
341.1925FALSE
346.3958FALSE
281.7788FALSE
341.1925FALSE
346.3965FALSE
281.7689FALSE
341.1918FALSE
346.3964FALSE
281.769FALSE
341.1925FALSE
346.3967FALSE
281.7688FALSE
341.1925FALSE
346.3959FALSE
341.1918FALSE
281.7711FALSE
346.3959FALSE
341.1925FALSE
346.3959FALSE
281.7705FALSE
341.1925FALSE
346.3959FALSE
281.7717FALSE
346.3959FALSE
341.1918FALSE
281.7688FALSE
346.3959FALSE
$par
smooth_log_cases_lag1.bw 
               -3.589556 

$value
[1] 346.3959

$counts
function gradient 
      16       16 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

341.1925FALSE
281.769FALSE
341.1925FALSE
281.769FALSE
341.1918FALSE
281.7688FALSE
281.769FALSE
341.1925FALSE
281.769FALSE
341.1925FALSE
281.7688FALSE
341.1918FALSE
281.769FALSE
341.1925FALSE
281.769FALSE
$par
time_ind_lag0.bw 
       -1.429706 

$value
[1] 281.7688

$counts
function gradient 
      17       17 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1949FALSE
341.1955FALSE
341.1943FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
341.1918FALSE
341.1925FALSE
341.1925FALSE
$par
smooth_log_cases_lag0.bw 
               -3.192651 

$value
[1] 341.1918

$counts
function gradient 
      48       48 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

292.4796FALSE
291.5422FALSE
292.4733FALSE
291.5347FALSE
292.4859FALSE
291.5498FALSE
291.5412FALSE
292.4743FALSE
291.5433FALSE
292.4849FALSE
287.132FALSE
302.8013FALSE
287.1269FALSE
302.8036FALSE
287.1371FALSE
302.799FALSE
287.1361FALSE
302.856FALSE
287.128FALSE
302.7465FALSE
284.4096FALSE
291.0882FALSE
284.4095FALSE
291.0851FALSE
284.4096FALSE
291.0913FALSE
284.4035FALSE
291.0927FALSE
284.4156FALSE
291.0837FALSE
282.4337FALSE
290.6255FALSE
282.4337FALSE
290.6227FALSE
282.4338FALSE
290.6282FALSE
282.4292FALSE
290.6268FALSE
282.4382FALSE
290.6241FALSE
318.0872FALSE
288.8364FALSE
318.0873FALSE
288.8309FALSE
318.0871FALSE
288.8419FALSE
318.175FALSE
317.9993FALSE
288.8338FALSE
282.1828FALSE
288.8392FALSE
282.1828FALSE
282.941FALSE
282.1828FALSE
282.94FALSE
282.1789FALSE
282.9419FALSE
282.1867FALSE
282.9362FALSE
285.5665FALSE
282.9458FALSE
285.5665FALSE
282.6231FALSE
285.5665FALSE
282.6226FALSE
285.5998FALSE
282.6236FALSE
285.5332FALSE
282.6186FALSE
281.8136FALSE
282.6275FALSE
281.8136FALSE
281.9075FALSE
281.8137FALSE
281.9073FALSE
281.8116FALSE
281.9077FALSE
281.8157FALSE
281.9051FALSE
282.0305FALSE
281.9099FALSE
282.3354FALSE
282.0304FALSE
282.3353FALSE
282.0305FALSE
282.3355FALSE
282.0361FALSE
282.3444FALSE
282.025FALSE
281.7885FALSE
282.3264FALSE
281.8468FALSE
281.7885FALSE
281.8466FALSE
281.7885FALSE
281.8469FALSE
281.7887FALSE
281.7883FALSE
281.8473FALSE
281.7873FALSE
281.8462FALSE
281.7873FALSE
281.8306FALSE
281.7873FALSE
281.8305FALSE
281.7875FALSE
281.8307FALSE
281.7871FALSE
281.8308FALSE
281.7878FALSE
281.8305FALSE
281.7877FALSE
281.795FALSE
281.7878FALSE
281.7949FALSE
281.7871FALSE
281.795FALSE
281.7884FALSE
281.7951FALSE
281.7854FALSE
281.7948FALSE
281.7854FALSE
281.7852FALSE
281.7854FALSE
281.7852FALSE
281.7855FALSE
281.7852FALSE
281.7853FALSE
281.7846FALSE
281.8064FALSE
281.7859FALSE
281.8064FALSE
281.7779FALSE
281.8065FALSE
281.7779FALSE
281.8044FALSE
281.778FALSE
281.8084FALSE
281.7773FALSE
281.7857FALSE
281.7786FALSE
281.7856FALSE
281.7857FALSE
281.7788FALSE
281.785FALSE
281.7788FALSE
281.7863FALSE
281.7788FALSE
281.7852FALSE
281.7797FALSE
281.7851FALSE
281.778FALSE
281.7852FALSE
281.7753FALSE
281.7753FALSE
281.7853FALSE
281.7753FALSE
281.7856FALSE
281.7755FALSE
281.7847FALSE
281.7751FALSE
281.7847FALSE
281.7735FALSE
281.7848FALSE
281.7735FALSE
281.7848FALSE
281.7735FALSE
281.7852FALSE
281.7737FALSE
281.7831FALSE
281.7733FALSE
281.783FALSE
281.7706FALSE
281.7831FALSE
281.7706FALSE
281.7832FALSE
281.7706FALSE
281.7707FALSE
281.7837FALSE
281.7704FALSE
281.774FALSE
281.7713FALSE
281.774FALSE
281.7713FALSE
281.774FALSE
281.7713FALSE
281.7741FALSE
281.7707FALSE
281.7744FALSE
281.7718FALSE
281.7719FALSE
281.7718FALSE
281.77FALSE
281.7718FALSE
281.77FALSE
281.7719FALSE
281.77FALSE
281.7701FALSE
281.772FALSE
281.7702FALSE
281.7701FALSE
281.7697FALSE
281.7702FALSE
281.7702FALSE
281.7697FALSE
281.7704FALSE
281.7697FALSE
281.7704FALSE
281.7696FALSE
281.7696FALSE
281.7702FALSE
281.7696FALSE
281.7692FALSE
281.7696FALSE
281.7692FALSE
281.7697FALSE
281.7697FALSE
281.7692FALSE
287.3635FALSE
281.7693FALSE
287.3635FALSE
281.7693FALSE
287.3635FALSE
287.4049FALSE
281.769FALSE
287.3222FALSE
281.769FALSE
281.7696FALSE
281.769FALSE
281.7696FALSE
281.7692FALSE
281.7696FALSE
281.7691FALSE
281.7697FALSE
281.7689FALSE
281.7695FALSE
281.7689FALSE
281.7696FALSE
281.7689FALSE
281.7696FALSE
281.7691FALSE
281.7696FALSE
281.7691FALSE
281.7697FALSE
281.7689FALSE
281.7697FALSE
281.7689FALSE
281.7696FALSE
281.7689FALSE
281.7696FALSE
281.769FALSE
281.7696FALSE
281.769FALSE
281.7697FALSE
281.7689FALSE
281.7697FALSE
281.7689FALSE
281.7696FALSE
281.7689FALSE
281.7696FALSE
281.769FALSE
281.7696FALSE
281.769FALSE
281.7697FALSE
281.7696FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.769FALSE
281.7696FALSE
281.7702FALSE
281.7696FALSE
281.7689FALSE
281.7697FALSE
281.7689FALSE
281.7697FALSE
281.7689FALSE
281.7696FALSE
281.769FALSE
281.7696FALSE
281.7696FALSE
281.769FALSE
281.7697FALSE
281.7689FALSE
281.7697FALSE
281.7689FALSE
281.7696FALSE
281.7689FALSE
281.7696FALSE
281.769FALSE
281.7696FALSE
281.769FALSE
281.7688FALSE
281.7697FALSE
281.7688FALSE
281.7697FALSE
281.7688FALSE
281.7696FALSE
281.769FALSE
281.7696FALSE
281.7696FALSE
281.769FALSE
281.7697FALSE
281.7688FALSE
281.7697FALSE
281.7688FALSE
281.7696FALSE
281.7688FALSE
281.7696FALSE
281.769FALSE
281.7696FALSE
281.769FALSE
281.7697FALSE
281.7688FALSE
281.7697FALSE
281.7688FALSE
281.7696FALSE
281.7688FALSE
281.7696FALSE
281.769FALSE
281.7696FALSE
281.769FALSE
281.7697FALSE
281.7697FALSE
281.7688FALSE
281.7696FALSE
281.7688FALSE
281.7696FALSE
281.7688FALSE
281.7696FALSE
281.769FALSE
281.7697FALSE
281.769FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.865056                -1.429705 

$value
[1] 281.7688

$counts
function gradient 
      33       33 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7723FALSE
281.7723FALSE
281.7723FALSE
281.7727FALSE
281.7719FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7695FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
281.7696FALSE
281.7696FALSE
281.7696FALSE
281.7697FALSE
281.7697FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                3.453160                -1.429725 

$value
[1] 281.7696

$counts
function gradient 
      58       58 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
 991.335    0.851 1093.932 
