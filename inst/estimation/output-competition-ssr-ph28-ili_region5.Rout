
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
392.7192FALSE
401.8833FALSE
354.592FALSE
401.8852FALSE
392.7203FALSE
354.5825FALSE
401.8814FALSE
392.7181FALSE
354.6015FALSE
421.2105FALSE
416.5332FALSE
353.1165FALSE
421.1917FALSE
416.5043FALSE
353.1434FALSE
421.2293FALSE
416.5621FALSE
353.0897FALSE
401.9025FALSE
392.7083FALSE
352.3365FALSE
401.8999FALSE
392.7086FALSE
352.3279FALSE
401.9052FALSE
352.3451FALSE
392.7081FALSE
401.8729FALSE
349.8473FALSE
392.7075FALSE
401.8738FALSE
349.8458FALSE
392.7077FALSE
401.872FALSE
349.8487FALSE
392.7074FALSE
401.8763FALSE
350.0719FALSE
392.7079FALSE
401.8738FALSE
350.0785FALSE
392.7069FALSE
401.8787FALSE
350.0654FALSE
401.8712FALSE
392.7113FALSE
349.802FALSE
401.8721FALSE
392.7071FALSE
349.8009FALSE
401.8703FALSE
392.7072FALSE
349.8032FALSE
401.873FALSE
392.707FALSE
350.2173FALSE
401.8706FALSE
392.7077FALSE
350.2259FALSE
401.8754FALSE
392.7069FALSE
350.2086FALSE
401.8706FALSE
392.7112FALSE
349.792FALSE
401.8714FALSE
392.707FALSE
349.7914FALSE
401.8709FALSE
349.7926FALSE
392.7071FALSE
401.8708FALSE
349.7986FALSE
392.707FALSE
401.8706FALSE
349.7997FALSE
392.7077FALSE
401.8732FALSE
349.7974FALSE
392.7069FALSE
401.8703FALSE
349.7912FALSE
392.7111FALSE
401.8712FALSE
349.7912FALSE
392.707FALSE
401.8717FALSE
349.7911FALSE
392.707FALSE
401.8704FALSE
349.7912FALSE
392.7069FALSE
401.8713FALSE
392.7077FALSE
349.7912FALSE
401.8713FALSE
392.7069FALSE
349.7911FALSE
401.8704FALSE
392.7111FALSE
349.7911FALSE
401.8713FALSE
392.707FALSE
349.7912FALSE
401.8713FALSE
$par
smooth_log_cases_lag1.bw 
               -2.311961 

$value
[1] 401.8704

$counts
function gradient 
      12       12 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

392.707FALSE
349.7911FALSE
349.7942FALSE
392.707FALSE
349.7935FALSE
392.707FALSE
349.7948FALSE
392.707FALSE
349.7911FALSE
392.7069FALSE
349.7912FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7928FALSE
392.707FALSE
349.7922FALSE
349.7935FALSE
7FALSE
349.7911FALSE
392.707FALSE
349.7912FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.792FALSE
392.707FALSE
349.7914FALSE
392.707FALSE
349.7926FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7912FALSE
392.707FALSE
349.7911FALSE
349.7915FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7921FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7916FALSE
392.707FALSE
349.7911FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.707FALSE
349.7911FALSE
392.708FALSE
349.7911FALSE
392.7082FALSE
349.7911FALSE
349.7911FALSE
$par
time_ind_lag0.bw 
       -1.566373 

$value
[1] 349.7911

$counts
function gradient 
      36       36 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

392.7078FALSE
392.707FALSE
392.707FALSE
392.7069FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
392.707FALSE
$par
smooth_log_cases_lag0.bw 
               -2.324601 

$value
[1] 392.707

$counts
function gradient 
      49       49 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

359.6215FALSE
356.0813FALSE
356.0727FALSE
359.6113FALSE
356.0899FALSE
359.6317FALSE
356.0863FALSE
359.6256FALSE
356.0764FALSE
359.6174FALSE
354.1658FALSE
355.2029FALSE
354.1674FALSE
355.1991FALSE
354.1641FALSE
355.2066FALSE
354.1563FALSE
355.1945FALSE
354.1753FALSE
351.8221FALSE
355.2112FALSE
351.8231FALSE
352.0706FALSE
351.8211FALSE
352.0689FALSE
351.8179FALSE
352.0722FALSE
351.8263FALSE
352.067FALSE
352.3062FALSE
352.0742FALSE
352.3013FALSE
351.7376FALSE
352.311FALSE
351.7366FALSE
352.3092FALSE
351.7386FALSE
352.3031FALSE
351.7488FALSE
351.6395FALSE
351.7264FALSE
351.6362FALSE
351.4913FALSE
351.6428FALSE
351.4899FALSE
351.6391FALSE
351.4928FALSE
351.6399FALSE
351.4909FALSE
351.4426FALSE
351.492FALSE
351.4417FALSE
351.1036FALSE
351.4436FALSE
351.1026FALSE
351.4426FALSE
351.1046FALSE
351.4426FALSE
351.1123FALSE
351.4058FALSE
351.0949FALSE
351.4046FALSE
350.2474FALSE
351.407FALSE
350.2469FALSE
351.4061FALSE
351.4055FALSE
350.2479FALSE
351.3717FALSE
350.2537FALSE
351.3702FALSE
350.2411FALSE
351.3732FALSE
351.3754FALSE
349.9449FALSE
351.3681FALSE
349.9447FALSE
351.334FALSE
349.945FALSE
351.3324FALSE
349.9431FALSE
351.3357FALSE
349.9466FALSE
351.3362FALSE
349.8961FALSE
351.3324FALSE
349.8959FALSE
352.1778FALSE
349.8962FALSE
352.1792FALSE
349.8943FALSE
352.1763FALSE
349.8978FALSE
352.1883FALSE
349.8676FALSE
352.1673FALSE
349.8676FALSE
351.3196FALSE
349.8677FALSE
351.318FALSE
349.8711FALSE
349.8641FALSE
351.3212FALSE
351.3231FALSE
349.8345FALSE
349.8345FALSE
351.3161FALSE
349.8346FALSE
351.2382FALSE
349.8338FALSE
351.2374FALSE
349.8352FALSE
351.2389FALSE
349.8492FALSE
351.2413FALSE
349.8491FALSE
351.2351FALSE
349.8492FALSE
351.0817FALSE
349.8525FALSE
351.0824FALSE
349.8462FALSE
351.0811FALSE
349.8234FALSE
351.0828FALSE
349.8233FALSE
351.0806FALSE
349.8234FALSE
351.0668FALSE
349.8241FALSE
351.0659FALSE
349.8229FALSE
351.0676FALSE
349.8153FALSE
351.0672FALSE
349.8153FALSE
351.0663FALSE
349.8154FALSE
351.0478FALSE
351.0469FALSE
351.0487FALSE
349.815FALSE
349.8023FALSE
351.0486FALSE
349.8022FALSE
349.8023FALSE
351.3855FALSE
349.8016FALSE
351.387FALSE
349.8029FALSE
351.384FALSE
349.7958FALSE
351.3817FALSE
349.7958FALSE
351.3893FALSE
349.7958FALSE
351.0604FALSE
349.7958FALSE
351.0612FALSE
351.0597FALSE
349.7957FALSE
351.0595FALSE
349.794FALSE
351.0613FALSE
349.794FALSE
351.0391FALSE
349.794FALSE
351.0397FALSE
349.7941FALSE
351.0385FALSE
351.0384FALSE
349.794FALSE
351.0399FALSE
349.7926FALSE
351.0393FALSE
349.7926FALSE
351.0383FALSE
349.7926FALSE
351.0403FALSE
349.7927FALSE
351.0389FALSE
349.7925FALSE
351.0397FALSE
351.0379FALSE
349.7962FALSE
351.0369FALSE
349.7962FALSE
351.039FALSE
349.7962FALSE
351.0375FALSE
349.7956FALSE
351.0383FALSE
349.7968FALSE
351.0329FALSE
349.7924FALSE
351.0329FALSE
349.7924FALSE
351.034FALSE
349.7924FALSE
351.0328FALSE
349.7924FALSE
351.033FALSE
349.7924FALSE
349.7917FALSE
351.034FALSE
349.7917FALSE
351.0346FALSE
351.0343FALSE
349.7917FALSE
351.0347FALSE
349.7917FALSE
349.7923FALSE
351.0334FALSE
351.0325FALSE
349.7914FALSE
351.033FALSE
349.7914FALSE
351.0334FALSE
349.7914FALSE
351.0329FALSE
349.7914FALSE
351.0325FALSE
349.7914FALSE
351.0326FALSE
349.7913FALSE
351.0332FALSE
349.7913FALSE
351.0331FALSE
349.7913FALSE
351.0325FALSE
349.7914FALSE
351.0331FALSE
349.7913FALSE
351.0323FALSE
349.7912FALSE
351.033FALSE
349.7912FALSE
351.0333FALSE
349.7912FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7912FALSE
351.0324FALSE
349.7911FALSE
351.0331FALSE
349.7911FALSE
351.0331FALSE
349.7911FALSE
351.0326FALSE
349.7912FALSE
351.0327FALSE
349.7914FALSE
351.0323FALSE
349.7912FALSE
351.033FALSE
349.7912FALSE
351.0333FALSE
349.7912FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7918FALSE
351.033FALSE
349.7918FALSE
351.0333FALSE
349.7918FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7925FALSE
351.0323FALSE
349.7912FALSE
351.033FALSE
349.7912FALSE
351.0333FALSE
349.7912FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
349.7913FALSE
351.0323FALSE
349.7913FALSE
351.033FALSE
349.7913FALSE
351.0333FALSE
349.7911FALSE
351.0327FALSE
349.792FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7912FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7912FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7911FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7912FALSE
351.0327FALSE
349.7911FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7911FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7911FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7911FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7911FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7911FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7911FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7911FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
349.7911FALSE
351.0323FALSE
349.7911FALSE
351.033FALSE
349.7911FALSE
351.0333FALSE
349.7911FALSE
351.0327FALSE
349.7912FALSE
351.0326FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
               -1.206252                -1.568697 

$value
[1] 351.0323

$counts
function gradient 
      42       42 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.8595FALSE
349.8595FALSE
349.8595FALSE
349.8631FALSE
349.8559FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7911FALSE
349.7912FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                5.961551                -1.566489 

$value
[1] 349.7911

$counts
function gradient 
      72       72 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1234.581    0.898 1280.534 
