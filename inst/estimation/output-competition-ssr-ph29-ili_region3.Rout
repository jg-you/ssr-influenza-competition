
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
560.1589FALSE
452.9108FALSE
566.8921FALSE
560.1477FALSE
452.9065FALSE
566.8812FALSE
560.1701FALSE
566.903FALSE
452.9152FALSE
563.2394FALSE
563.2591FALSE
451.6416FALSE
566.9249FALSE
563.2197FALSE
566.9409FALSE
451.6562FALSE
557.8277FALSE
566.909FALSE
451.6271FALSE
557.8284FALSE
557.8271FALSE
451.9269FALSE
563.091FALSE
557.8168FALSE
451.9226FALSE
557.8172FALSE
563.09FALSE
557.8163FALSE
451.9311FALSE
557.8408FALSE
557.8394FALSE
449.9868FALSE
563.0921FALSE
557.8422FALSE
449.9859FALSE
557.814FALSE
563.0969FALSE
557.814FALSE
449.9878FALSE
557.8142FALSE
450.7144FALSE
563.0981FALSE
450.7248FALSE
557.8142FALSE
450.7041FALSE
563.0956FALSE
557.8145FALSE
449.9647FALSE
557.8139FALSE
563.079FALSE
557.8139FALSE
449.9642FALSE
557.8141FALSE
563.0786FALSE
449.9652FALSE
557.8141FALSE
449.9585FALSE
563.0793FALSE
449.9587FALSE
557.8139FALSE
563.0783FALSE
449.9583FALSE
557.8141FALSE
449.9577FALSE
563.0793FALSE
557.8141FALSE
449.9577FALSE
563.0773FALSE
449.9576FALSE
557.8139FALSE
563.0779FALSE
449.9576FALSE
557.8141FALSE
449.9576FALSE
563.0776FALSE
557.8141FALSE
449.9576FALSE
563.0783FALSE
557.8139FALSE
449.9576FALSE
563.0962FALSE
557.8141FALSE
449.9576FALSE
557.8141FALSE
563.0974FALSE
449.9576FALSE
557.8139FALSE
449.9576FALSE
557.8141FALSE
563.095FALSE
449.9576FALSE
557.8141FALSE
563.0772FALSE
449.9576FALSE
$par
time_ind_lag0.bw 
       -1.532682 

$value
[1] 449.9576

$counts
function gradient 
      11       11 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

557.8139FALSE
563.0769FALSE
557.8141FALSE
563.0775FALSE
557.8141FALSE
563.096FALSE
557.8139FALSE
557.8141FALSE
563.0972FALSE
557.8141FALSE
563.0948FALSE
557.8139FALSE
557.8141FALSE
563.0767FALSE
557.8141FALSE
563.0765FALSE
557.8139FALSE
563.077FALSE
557.8141FALSE
563.0877FALSE
557.8141FALSE
563.0889FALSE
557.8139FALSE
563.0866FALSE
557.8141FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8139FALSE
563.0767FALSE
557.8141FALSE
563.0958FALSE
557.8141FALSE
563.097FALSE
557.8139FALSE
563.0946FALSE
557.8141FALSE
557.8141FALSE
563.0762FALSE
557.8139FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8141FALSE
563.0763FALSE
557.8139FALSE
557.8141FALSE
563.0764FALSE
557.8141FALSE
563.0765FALSE
557.8139FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8141FALSE
557.8139FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8139FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8141FALSE
557.8139FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8141FALSE
557.8139FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8139FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8139FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8139FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8139FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8139FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8139FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8139FALSE
557.8141FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8139FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8139FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8139FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8139FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8141FALSE
557.8139FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
563.0762FALSE
557.8141FALSE
557.8139FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8139FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8139FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8139FALSE
563.0766FALSE
557.8141FALSE
563.0765FALSE
557.8141FALSE
563.1291FALSE
557.8139FALSE
563.1273FALSE
557.8141FALSE
563.1309FALSE
557.8141FALSE
563.0766FALSE
557.8139FALSE
563.0763FALSE
557.8141FALSE
563.0768FALSE
557.8141FALSE
563.0762FALSE
557.8139FALSE
563.0765FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8141FALSE
563.0766FALSE
557.8139FALSE
563.0765FALSE
557.8141FALSE
563.0762FALSE
557.8141FALSE
$par
smooth_log_cases_lag0.bw 
               -1.926898 

$value
[1] 557.8139

$counts
function gradient 
      46       46 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
563.0762FALSE
563.0766FALSE
563.0765FALSE
$par
smooth_log_cases_lag1.bw 
               -1.747968 

$value
[1] 563.0762

$counts
function gradient 
      55       55 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

469.9043FALSE
467.7249FALSE
469.8912FALSE
467.7097FALSE
469.9174FALSE
467.74FALSE
469.9181FALSE
467.7404FALSE
469.8906FALSE
467.7093FALSE
461.9929FALSE
459.5513FALSE
461.9723FALSE
459.5295FALSE
462.0135FALSE
459.5731FALSE
461.9847FALSE
459.545FALSE
462.0012FALSE
459.5577FALSE
455.9217FALSE
456.6908FALSE
455.9219FALSE
456.6909FALSE
455.9215FALSE
456.6907FALSE
455.9166FALSE
456.6852FALSE
455.9268FALSE
456.6964FALSE
454.7254FALSE
455.088FALSE
454.7258FALSE
455.0883FALSE
454.725FALSE
455.0878FALSE
454.723FALSE
455.0859FALSE
454.7277FALSE
455.0901FALSE
453.7313FALSE
454.4532FALSE
453.731FALSE
453.7315FALSE
454.4535FALSE
453.7282FALSE
454.453FALSE
453.7343FALSE
454.4507FALSE
468.5808FALSE
454.4557FALSE
468.5631FALSE
451.1061FALSE
468.5984FALSE
451.1052FALSE
468.6118FALSE
451.107FALSE
468.5497FALSE
451.1037FALSE
452.6426FALSE
451.1086FALSE
452.6415FALSE
568.1364FALSE
452.6438FALSE
568.1281FALSE
452.6389FALSE
568.1446FALSE
452.6464FALSE
568.1416FALSE
622.6023FALSE
568.1311FALSE
622.5801FALSE
451.0755FALSE
622.6244FALSE
451.0746FALSE
622.6023FALSE
451.0765FALSE
622.6022FALSE
451.0731FALSE
452.4432FALSE
451.0779FALSE
452.4416FALSE
452.4448FALSE
451.1222FALSE
452.4391FALSE
451.1192FALSE
452.4472FALSE
451.1252FALSE
452.4593FALSE
451.1234FALSE
451.121FALSE
452.4526FALSE
451.0039FALSE
452.466FALSE
451.0028FALSE
452.4561FALSE
452.4625FALSE
451.005FALSE
451.0026FALSE
452.2393FALSE
451.0052FALSE
452.2354FALSE
450.9029FALSE
452.2432FALSE
452.2357FALSE
450.9016FALSE
450.9041FALSE
452.2429FALSE
450.9017FALSE
451.8705FALSE
450.9041FALSE
451.8682FALSE
450.9723FALSE
451.8728FALSE
450.9717FALSE
451.8671FALSE
451.8739FALSE
450.973FALSE
495.2173FALSE
450.9767FALSE
495.2136FALSE
450.968FALSE
495.221FALSE
450.7736FALSE
495.3106FALSE
450.7723FALSE
495.1238FALSE
450.7749FALSE
451.5387FALSE
450.7737FALSE
451.5363FALSE
450.7736FALSE
451.5411FALSE
451.007FALSE
451.5361FALSE
451.0056FALSE
451.5413FALSE
451.0083FALSE
451.282FALSE
451.0142FALSE
451.2805FALSE
450.9998FALSE
451.2835FALSE
450.836FALSE
450.8355FALSE
451.2884FALSE
450.8366FALSE
451.2756FALSE
450.8392FALSE
451.1461FALSE
450.8329FALSE
451.1434FALSE
450.7554FALSE
451.1487FALSE
450.7555FALSE
451.1442FALSE
450.7554FALSE
451.1479FALSE
450.7575FALSE
453.8216FALSE
450.7539FALSE
453.8192FALSE
450.71FALSE
453.8241FALSE
450.7103FALSE
453.8415FALSE
450.7097FALSE
453.8018FALSE
450.7101FALSE
450.71FALSE
450.8589FALSE
450.7048FALSE
450.8559FALSE
450.7052FALSE
450.8618FALSE
450.7045FALSE
450.705FALSE
450.8583FALSE
450.7046FALSE
450.7488FALSE
450.8594FALSE
450.7475FALSE
450.75FALSE
451.5733FALSE
450.7485FALSE
451.5718FALSE
450.7491FALSE
451.5747FALSE
450.7052FALSE
451.5828FALSE
450.7048FALSE
451.5638FALSE
450.7057FALSE
450.7914FALSE
450.7048FALSE
450.7057FALSE
450.7906FALSE
450.7034FALSE
450.7922FALSE
450.7038FALSE
450.7945FALSE
450.7034FALSE
450.7883FALSE
450.7036FALSE
450.6659FALSE
450.7034FALSE
450.6655FALSE
450.7175FALSE
450.7171FALSE
450.6664FALSE
450.7178FALSE
450.6666FALSE
450.7172FALSE
450.6652FALSE
450.7178FALSE
450.6465FALSE
450.7042FALSE
450.7037FALSE
450.6462FALSE
450.7046FALSE
450.6469FALSE
450.7037FALSE
450.6469FALSE
450.7046FALSE
450.6467FALSE
450.7033FALSE
450.6409FALSE
450.7036FALSE
450.6405FALSE
450.7036FALSE
450.6412FALSE
450.7035FALSE
450.6404FALSE
450.7036FALSE
450.6414FALSE
450.7032FALSE
450.631FALSE
450.7034FALSE
450.6306FALSE
450.7036FALSE
450.7033FALSE
450.6313FALSE
450.7036FALSE
450.6303FALSE
450.7031FALSE
450.6317FALSE
450.7034FALSE
450.5832FALSE
450.7035FALSE
450.5827FALSE
450.7037FALSE
450.5837FALSE
450.7035FALSE
450.5817FALSE
450.7031FALSE
450.7034FALSE
450.5848FALSE
450.7036FALSE
450.6039FALSE
450.7035FALSE
450.6037FALSE
450.7036FALSE
450.604FALSE
450.7033FALSE
450.7037FALSE
450.6006FALSE
450.7033FALSE
450.6071FALSE
450.7035FALSE
450.4949FALSE
450.7032FALSE
450.4948FALSE
450.7031FALSE
450.4949FALSE
450.7034FALSE
450.4916FALSE
450.7036FALSE
450.4982FALSE
450.7035FALSE
450.7035FALSE
450.1989FALSE
450.7031FALSE
450.1986FALSE
450.7035FALSE
450.1993FALSE
450.7035FALSE
450.1987FALSE
450.7035FALSE
450.1992FALSE
450.7035FALSE
450.0899FALSE
450.7031FALSE
450.7034FALSE
450.0898FALSE
450.7036FALSE
450.0899FALSE
450.7035FALSE
450.0941FALSE
450.7035FALSE
450.0857FALSE
450.7031FALSE
450.0219FALSE
450.7034FALSE
450.0218FALSE
450.7036FALSE
450.0221FALSE
450.7035FALSE
450.0222FALSE
450.7035FALSE
450.0217FALSE
450.7031FALSE
449.9919FALSE
450.7034FALSE
449.9919FALSE
450.7035FALSE
449.992FALSE
450.7035FALSE
449.9922FALSE
450.7035FALSE
449.9917FALSE
450.7031FALSE
449.9743FALSE
450.7035FALSE
449.9743FALSE
450.7035FALSE
449.9744FALSE
450.7035FALSE
449.9745FALSE
450.7035FALSE
449.9742FALSE
450.7031FALSE
449.9661FALSE
450.7034FALSE
449.9661FALSE
450.7035FALSE
449.9661FALSE
450.7035FALSE
449.9661FALSE
450.7035FALSE
449.966FALSE
450.7031FALSE
449.9618FALSE
450.7034FALSE
449.9618FALSE
450.7035FALSE
450.7035FALSE
449.9618FALSE
450.7035FALSE
449.9618FALSE
450.7031FALSE
449.9618FALSE
450.7034FALSE
449.9627FALSE
450.7035FALSE
450.7035FALSE
449.9627FALSE
450.7035FALSE
449.9627FALSE
450.7031FALSE
449.9632FALSE
450.7034FALSE
449.9622FALSE
450.7035FALSE
449.9609FALSE
450.7035FALSE
449.9609FALSE
450.7035FALSE
449.9609FALSE
450.7031FALSE
449.961FALSE
450.7034FALSE
449.9608FALSE
450.7035FALSE
449.9589FALSE
450.7035FALSE
449.9589FALSE
450.7035FALSE
449.9589FALSE
450.7031FALSE
449.9589FALSE
450.7034FALSE
449.9589FALSE
449.9583FALSE
450.7035FALSE
449.9583FALSE
450.7035FALSE
449.9583FALSE
450.7035FALSE
449.9583FALSE
450.7031FALSE
449.9583FALSE
450.7034FALSE
449.9579FALSE
450.7035FALSE
449.9579FALSE
450.7035FALSE
449.9579FALSE
450.7035FALSE
449.958FALSE
450.7031FALSE
449.9579FALSE
450.7034FALSE
449.9578FALSE
450.7035FALSE
449.9578FALSE
449.9578FALSE
450.7035FALSE
449.9578FALSE
450.7035FALSE
449.9578FALSE
450.7031FALSE
449.9577FALSE
450.7034FALSE
449.9577FALSE
450.7035FALSE
450.7035FALSE
449.9577FALSE
449.9577FALSE
450.7035FALSE
449.9577FALSE
450.7031FALSE
450.7034FALSE
449.9578FALSE
450.7035FALSE
449.9578FALSE
450.7035FALSE
449.9578FALSE
450.7035FALSE
449.9577FALSE
450.7031FALSE
449.9578FALSE
450.7034FALSE
449.9577FALSE
450.7035FALSE
449.9577FALSE
450.7035FALSE
449.9577FALSE
450.7035FALSE
449.9577FALSE
450.7031FALSE
449.9577FALSE
450.7034FALSE
449.9576FALSE
450.7035FALSE
449.9576FALSE
450.7035FALSE
449.9576FALSE
450.7035FALSE
449.9576FALSE
450.7031FALSE
449.9577FALSE
450.7034FALSE
449.9576FALSE
450.7035FALSE
449.9576FALSE
450.7035FALSE
449.9576FALSE
450.7035FALSE
449.9576FALSE
450.7031FALSE
449.9576FALSE
450.7034FALSE
449.9576FALSE
450.7035FALSE
449.9576FALSE
450.7035FALSE
449.9576FALSE
450.7035FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
              -0.7644863               -1.7251971 

$value
[1] 450.7031

$counts
function gradient 
      48       48 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
449.9576FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.694239                -1.533120 

$value
[1] 449.9576

$counts
function gradient 
      49       49 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1388.659    1.159 1099.350 
