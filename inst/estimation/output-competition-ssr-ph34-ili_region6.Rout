
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
987.5897FALSE
689.2396FALSE
976.4414FALSE
987.583FALSE
689.2302FALSE
976.4343FALSE
987.5965FALSE
689.2491FALSE
976.4485FALSE
988.7189FALSE
690.0265FALSE
975.9279FALSE
988.7203FALSE
690.0702FALSE
975.9328FALSE
988.7176FALSE
689.9833FALSE
975.9231FALSE
987.5042FALSE
685.0388FALSE
975.4503FALSE
987.5046FALSE
685.0348FALSE
987.5036FALSE
975.4503FALSE
685.0428FALSE
987.4949FALSE
975.4503FALSE
687.3465FALSE
987.4955FALSE
975.4503FALSE
687.3763FALSE
987.4942FALSE
687.3168FALSE
975.4502FALSE
987.3885FALSE
684.6283FALSE
975.4503FALSE
987.3902FALSE
684.6266FALSE
975.4499FALSE
987.3867FALSE
684.6299FALSE
975.4498FALSE
989.3942FALSE
684.6147FALSE
975.45FALSE
989.368FALSE
684.6163FALSE
975.4541FALSE
989.4204FALSE
684.6131FALSE
975.4546FALSE
987.3163FALSE
684.5701FALSE
975.4537FALSE
987.3146FALSE
684.5705FALSE
975.4495FALSE
987.3179FALSE
684.5696FALSE
975.4493FALSE
987.3137FALSE
684.5784FALSE
975.4496FALSE
987.3164FALSE
684.577FALSE
975.4491FALSE
987.3111FALSE
684.5799FALSE
975.4489FALSE
987.301FALSE
684.5697FALSE
975.4493FALSE
987.3FALSE
684.5701FALSE
975.4507FALSE
987.3021FALSE
684.5701FALSE
975.4512FALSE
987.294FALSE
684.5696FALSE
975.4502FALSE
987.2929FALSE
684.5701FALSE
975.4489FALSE
684.5701FALSE
987.2951FALSE
975.4491FALSE
684.5697FALSE
987.294FALSE
975.449FALSE
684.5701FALSE
987.2929FALSE
975.4489FALSE
684.5701FALSE
987.2951FALSE
975.4491FALSE
684.5696FALSE
975.4491FALSE
684.5701FALSE
987.4743FALSE
975.4574FALSE
684.5701FALSE
975.458FALSE
987.4754FALSE
684.5696FALSE
975.4568FALSE
987.4732FALSE
684.5701FALSE
975.4489FALSE
987.3022FALSE
684.5701FALSE
975.4491FALSE
684.5696FALSE
987.305FALSE
975.4491FALSE
684.5701FALSE
975.4489FALSE
684.5701FALSE
987.2994FALSE
975.4491FALSE
684.5696FALSE
975.4491FALSE
987.2915FALSE
684.5701FALSE
975.4489FALSE
684.5701FALSE
987.2903FALSE
975.4491FALSE
684.5696FALSE
987.2926FALSE
975.4491FALSE
684.5701FALSE
987.2904FALSE
975.4489FALSE
684.5701FALSE
975.4491FALSE
684.5696FALSE
987.2892FALSE
975.4491FALSE
684.5701FALSE
987.2916FALSE
975.4489FALSE
684.5701FALSE
987.2897FALSE
975.4491FALSE
684.5696FALSE
987.2908FALSE
975.4491FALSE
684.5701FALSE
987.2909FALSE
975.4489FALSE
684.5701FALSE
975.4491FALSE
684.5696FALSE
987.2896FALSE
975.4491FALSE
684.5701FALSE
975.4489FALSE
684.5701FALSE
987.2911FALSE
975.4491FALSE
684.5696FALSE
987.2908FALSE
975.4491FALSE
684.5701FALSE
987.2897FALSE
975.4489FALSE
684.5701FALSE
987.2909FALSE
975.4491FALSE
684.5696FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
684.5701FALSE
975.4489FALSE
987.2897FALSE
975.4491FALSE
684.5696FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
987.2897FALSE
684.5701FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
684.5701FALSE
975.4491FALSE
987.2897FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
987.2897FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
987.2897FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
987.2897FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
987.2897FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
684.5701FALSE
975.4489FALSE
987.2897FALSE
684.5696FALSE
975.4491FALSE
684.5701FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4489FALSE
684.5714FALSE
975.4491FALSE
987.2909FALSE
684.5719FALSE
975.4491FALSE
684.571FALSE
975.4489FALSE
987.2897FALSE
684.5697FALSE
975.4491FALSE
684.5701FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4489FALSE
684.5696FALSE
987.2909FALSE
975.4491FALSE
684.5701FALSE
975.4491FALSE
684.5701FALSE
987.2897FALSE
975.4489FALSE
684.5696FALSE
975.4491FALSE
684.5701FALSE
987.2909FALSE
975.4491FALSE
684.5701FALSE
975.4489FALSE
684.5696FALSE
987.2909FALSE
975.4491FALSE
684.5701FALSE
975.4491FALSE
684.5701FALSE
987.2897FALSE
975.4489FALSE
684.5696FALSE
975.4491FALSE
684.5701FALSE
987.2909FALSE
975.4491FALSE
684.5701FALSE
975.4489FALSE
684.5696FALSE
987.2909FALSE
975.4491FALSE
684.5701FALSE
975.4491FALSE
684.5701FALSE
987.2897FALSE
975.4489FALSE
684.5696FALSE
684.5701FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
684.5696FALSE
975.4489FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
684.5701FALSE
987.2897FALSE
975.4491FALSE
684.5696FALSE
975.4489FALSE
684.5701FALSE
987.2909FALSE
975.4491FALSE
684.5701FALSE
975.4491FALSE
684.5696FALSE
987.2909FALSE
975.4489FALSE
684.5701FALSE
975.4491FALSE
684.5701FALSE
987.2897FALSE
975.4491FALSE
684.5696FALSE
987.2909FALSE
975.4489FALSE
684.5701FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
987.2897FALSE
684.5696FALSE
975.4489FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
684.5696FALSE
987.2897FALSE
975.4489FALSE
684.5701FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
987.2897FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
987.2897FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
987.2897FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
987.2909FALSE
684.5696FALSE
975.4491FALSE
987.2897FALSE
684.5701FALSE
975.4489FALSE
987.2909FALSE
684.5701FALSE
975.4491FALSE
684.5696FALSE
987.2909FALSE
975.4491FALSE
684.5701FALSE
987.2897FALSE
975.4489FALSE
684.5701FALSE
987.2909FALSE
975.4491FALSE
684.5696FALSE
987.2909FALSE
975.4491FALSE
684.5701FALSE
975.4489FALSE
987.2897FALSE
684.5701FALSE
$par
time_ind_lag0.bw 
       -1.600883 

$value
[1] 684.5696

$counts
function gradient 
      50       50 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

975.4491FALSE
987.2909FALSE
975.4491FALSE
$par
smooth_log_cases_lag0.bw 
               -1.697381 

$value
[1] 975.4489

$counts
function gradient 
      49       49 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
987.2897FALSE
987.2909FALSE
987.2909FALSE
$par
smooth_log_cases_lag1.bw 
                -2.16836 

$value
[1] 987.2897

$counts
function gradient 
      58       58 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

735.198FALSE
735.1707FALSE
727.0909FALSE
735.2252FALSE
727.062FALSE
735.1753FALSE
735.2206FALSE
727.12FALSE
745.5736FALSE
745.555FALSE
727.0678FALSE
745.5922FALSE
745.7277FALSE
727.114FALSE
745.4195FALSE
723.4839FALSE
740.1053FALSE
723.4474FALSE
723.5204FALSE
740.0945FALSE
723.5029FALSE
723.465FALSE
740.1162FALSE
738.7423FALSE
738.728FALSE
740.2635FALSE
738.7565FALSE
738.9179FALSE
739.9489FALSE
738.5667FALSE
719.5267FALSE
717.0611FALSE
719.4991FALSE
719.5543FALSE
717.0381FALSE
719.6024FALSE
719.4511FALSE
717.084FALSE
707.1742FALSE
707.1537FALSE
717.0804FALSE
707.1948FALSE
707.2327FALSE
717.0418FALSE
707.1159FALSE
708.0636FALSE
688.7957FALSE
708.0436FALSE
688.7901FALSE
708.0835FALSE
688.8014FALSE
688.8045FALSE
708.096FALSE
688.787FALSE
708.0313FALSE
686.7711FALSE
686.2939FALSE
686.7673FALSE
686.2939FALSE
686.7749FALSE
686.7769FALSE
686.294FALSE
686.7653FALSE
686.2877FALSE
685.1876FALSE
686.3002FALSE
685.1865FALSE
686.0838FALSE
685.1886FALSE
685.1859FALSE
686.0838FALSE
685.1893FALSE
686.0838FALSE
685.0746FALSE
686.0773FALSE
685.0738FALSE
686.0903FALSE
685.1885FALSE
685.0754FALSE
685.0723FALSE
685.1885FALSE
685.0769FALSE
685.1885FALSE
685.6036FALSE
685.1836FALSE
685.6034FALSE
685.1934FALSE
685.6038FALSE
696.811FALSE
685.6188FALSE
696.8096FALSE
685.5884FALSE
696.8125FALSE
684.7974FALSE
696.8819FALSE
684.7969FALSE
696.7403FALSE
684.7978FALSE
684.6893FALSE
684.7988FALSE
684.7959FALSE
684.6893FALSE
684.693FALSE
684.6893FALSE
684.6927FALSE
684.6866FALSE
684.6932FALSE
684.6915FALSE
684.692FALSE
684.6944FALSE
684.8467FALSE
684.6195FALSE
684.8466FALSE
684.6194FALSE
684.8468FALSE
684.6196FALSE
684.8532FALSE
684.6199FALSE
684.619FALSE
684.8404FALSE
684.6035FALSE
684.595FALSE
684.6035FALSE
684.595FALSE
684.6036FALSE
684.5951FALSE
684.604FALSE
684.5936FALSE
684.6031FALSE
684.5965FALSE
684.5861FALSE
684.6627FALSE
684.5861FALSE
684.6627FALSE
684.5861FALSE
684.6628FALSE
684.5866FALSE
684.6661FALSE
684.5857FALSE
684.6606FALSE
684.5751FALSE
684.5951FALSE
684.5751FALSE
684.595FALSE
684.5751FALSE
684.5951FALSE
684.5755FALSE
684.5955FALSE
684.5758FALSE
684.5946FALSE
684.5739FALSE
684.5908FALSE
684.5739FALSE
684.5907FALSE
684.5739FALSE
684.5908FALSE
684.5735FALSE
684.5909FALSE
684.5746FALSE
684.5916FALSE
684.5721FALSE
684.5907FALSE
684.5721FALSE
684.5907FALSE
684.5721FALSE
684.5907FALSE
684.5726FALSE
684.5911FALSE
684.5717FALSE
684.5906FALSE
684.5716FALSE
684.5901FALSE
684.5716FALSE
684.5901FALSE
684.5716FALSE
684.572FALSE
684.5901FALSE
684.5711FALSE
684.5905FALSE
684.5713FALSE
684.5902FALSE
684.5713FALSE
684.5882FALSE
684.5713FALSE
684.5881FALSE
684.5705FALSE
684.5882FALSE
684.5721FALSE
684.5882FALSE
684.5708FALSE
684.5889FALSE
684.5708FALSE
684.5816FALSE
684.5708FALSE
684.5816FALSE
684.5712FALSE
684.5817FALSE
684.5704FALSE
684.5809FALSE
684.5703FALSE
684.5824FALSE
684.5703FALSE
684.5769FALSE
684.5703FALSE
684.5769FALSE
684.5707FALSE
684.5705FALSE
684.5769FALSE
684.5706FALSE
684.5761FALSE
684.5706FALSE
684.5777FALSE
684.5707FALSE
684.5776FALSE
684.57FALSE
684.5776FALSE
684.5714FALSE
684.5776FALSE
684.5702FALSE
684.578FALSE
684.5702FALSE
684.5771FALSE
684.5702FALSE
684.5755FALSE
684.5706FALSE
684.5754FALSE
684.5706FALSE
684.5755FALSE
684.57FALSE
684.5759FALSE
684.57FALSE
684.575FALSE
684.57FALSE
684.5728FALSE
684.5704FALSE
684.5728FALSE
684.5705FALSE
684.5728FALSE
684.5698FALSE
684.5733FALSE
684.5698FALSE
684.5724FALSE
684.5698FALSE
684.6016FALSE
684.6016FALSE
684.5702FALSE
684.6017FALSE
684.5702FALSE
684.6003FALSE
684.5697FALSE
684.603FALSE
684.5697FALSE
684.5727FALSE
684.5697FALSE
684.5727FALSE
684.5702FALSE
684.5727FALSE
684.5702FALSE
684.572FALSE
684.5697FALSE
684.5734FALSE
684.5697FALSE
684.5697FALSE
684.5722FALSE
684.5701FALSE
684.5722FALSE
684.5701FALSE
684.5722FALSE
684.5697FALSE
684.5727FALSE
684.5697FALSE
684.5726FALSE
684.5697FALSE
684.571FALSE
684.5701FALSE
684.571FALSE
684.5701FALSE
684.571FALSE
684.5714FALSE
684.5715FALSE
684.5714FALSE
684.5716FALSE
684.5714FALSE
684.5704FALSE
684.5718FALSE
684.5704FALSE
684.5709FALSE
684.5704FALSE
684.5697FALSE
684.5708FALSE
684.5697FALSE
684.5707FALSE
684.5697FALSE
684.5699FALSE
684.5701FALSE
684.5699FALSE
684.5701FALSE
684.5699FALSE
684.5697FALSE
684.5704FALSE
684.5697FALSE
684.5705FALSE
684.5697FALSE
684.5699FALSE
684.5701FALSE
684.5699FALSE
684.5701FALSE
684.5699FALSE
684.5697FALSE
684.5703FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5698FALSE
684.5701FALSE
684.5698FALSE
684.5701FALSE
684.5698FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.57FALSE
684.5697FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5701FALSE
684.5702FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5701FALSE
684.5702FALSE
684.5701FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5701FALSE
684.5702FALSE
684.5701FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5701FALSE
684.5702FALSE
684.5701FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5702FALSE
684.5701FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5701FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5701FALSE
684.5702FALSE
684.5701FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5701FALSE
684.5702FALSE
684.5701FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.848907                -1.600888 

$value
[1] 684.5697

$counts
function gradient 
      46       46 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5702FALSE
684.5697FALSE
684.5697FALSE
684.5697FALSE
684.5702FALSE
684.5702FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                5.143003                -1.600887 

$value
[1] 684.5697

$counts
function gradient 
      48       48 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1279.524    0.429  839.047 
