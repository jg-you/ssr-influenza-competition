
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
615.5326FALSE
615.3188FALSE
461.5559FALSE
615.5049FALSE
615.5603FALSE
615.2964FALSE
461.555FALSE
605.6821FALSE
615.3411FALSE
461.5569FALSE
605.7002FALSE
606.9153FALSE
466.6752FALSE
606.932FALSE
466.7089FALSE
605.6639FALSE
606.8993FALSE
466.6416FALSE
601.8951FALSE
604.2911FALSE
461.1086FALSE
601.8883FALSE
461.1082FALSE
604.2981FALSE
601.9019FALSE
461.1089FALSE
603.931FALSE
601.6883FALSE
461.1018FALSE
603.9332FALSE
601.6913FALSE
603.9289FALSE
461.1032FALSE
601.6857FALSE
603.906FALSE
461.1007FALSE
601.6338FALSE
461.0898FALSE
603.9053FALSE
601.6342FALSE
461.0891FALSE
601.6333FALSE
603.9068FALSE
461.0904FALSE
601.6313FALSE
603.901FALSE
461.0576FALSE
601.6316FALSE
603.9017FALSE
461.0579FALSE
601.631FALSE
603.9015FALSE
461.0574FALSE
461.0701FALSE
461.0693FALSE
603.9016FALSE
601.6298FALSE
461.0709FALSE
601.6298FALSE
603.901FALSE
461.0569FALSE
603.9022FALSE
461.0564FALSE
601.6302FALSE
603.901FALSE
461.0574FALSE
603.9016FALSE
601.63FALSE
461.0571FALSE
603.9015FALSE
601.6302FALSE
461.0572FALSE
603.901FALSE
601.6299FALSE
603.9016FALSE
601.6298FALSE
461.057FALSE
603.9016FALSE
603.901FALSE
601.6298FALSE
461.0567FALSE
603.9016FALSE
461.0569FALSE
601.6298FALSE
603.9016FALSE
603.901FALSE
461.0566FALSE
603.9016FALSE
601.6298FALSE
603.9016FALSE
461.0609FALSE
601.6298FALSE
603.901FALSE
461.0605FALSE
603.9016FALSE
601.6298FALSE
$par
smooth_log_cases_lag0.bw 
               -1.638707 

$value
[1] 601.6298

$counts
function gradient 
      10       10 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

461.0614FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0567FALSE
603.9016FALSE
461.0564FALSE
603.9016FALSE
461.0564FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
603.9016FALSE
603.901FALSE
461.0592FALSE
603.9016FALSE
461.0587FALSE
603.9016FALSE
461.0596FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0565FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0565FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
603.901FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0594FALSE
603.9016FALSE
461.0597FALSE
603.901FALSE
461.0592FALSE
603.9016FALSE
461.0564FALSE
603.9016FALSE
461.0566FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
461.0565FALSE
603.9016FALSE
603.901FALSE
461.0565FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.901FALSE
461.0564FALSE
603.9016FALSE
461.0565FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
461.0565FALSE
603.901FALSE
461.0565FALSE
603.9016FALSE
461.0564FALSE
603.9016FALSE
$par
smooth_log_cases_lag1.bw 
               -1.620224 

$value
[1] 603.901

$counts
function gradient 
      49       49 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
$par
time_ind_lag0.bw 
       -1.903329 

$value
[1] 461.0564

$counts
function gradient 
      54       54 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

502.3665FALSE
508.4587FALSE
502.3423FALSE
508.4267FALSE
502.3906FALSE
508.4906FALSE
508.4759FALSE
502.384FALSE
508.4414FALSE
502.349FALSE
476.1937FALSE
475.0468FALSE
476.1711FALSE
475.0244FALSE
476.2163FALSE
475.0692FALSE
475.0486FALSE
476.1968FALSE
476.1906FALSE
475.0451FALSE
461.8541FALSE
463.4162FALSE
461.8537FALSE
463.4162FALSE
461.8545FALSE
463.4162FALSE
461.8535FALSE
463.4117FALSE
461.8547FALSE
463.4207FALSE
461.8185FALSE
461.8181FALSE
462.5324FALSE
461.8189FALSE
462.5324FALSE
461.8178FALSE
462.5324FALSE
461.8192FALSE
461.64FALSE
462.5301FALSE
461.6398FALSE
462.5346FALSE
461.6403FALSE
461.6389FALSE
462.1572FALSE
461.6411FALSE
462.1571FALSE
461.4433FALSE
462.1572FALSE
461.4432FALSE
462.1559FALSE
461.4435FALSE
462.1585FALSE
461.4462FALSE
461.7005FALSE
461.4405FALSE
461.7005FALSE
461.2687FALSE
461.7006FALSE
461.2685FALSE
461.6999FALSE
461.2689FALSE
461.7011FALSE
461.409FALSE
461.2673FALSE
461.4089FALSE
461.2701FALSE
461.409FALSE
461.1506FALSE
461.407FALSE
461.1504FALSE
461.4109FALSE
461.1508FALSE
482.5158FALSE
482.5153FALSE
461.1503FALSE
482.5163FALSE
461.1509FALSE
482.601FALSE
462.7949FALSE
462.7948FALSE
482.4308FALSE
462.795FALSE
461.1191FALSE
462.8065FALSE
461.119FALSE
462.7833FALSE
461.1192FALSE
461.141FALSE
461.1188FALSE
461.1195FALSE
461.1408FALSE
473.2444FALSE
461.1412FALSE
473.2441FALSE
461.1416FALSE
473.2448FALSE
473.3021FALSE
461.1407FALSE
473.1868FALSE
461.1372FALSE
461.1891FALSE
461.1371FALSE
461.1889FALSE
461.1374FALSE
461.1892FALSE
461.1374FALSE
461.1911FALSE
461.187FALSE
461.137FALSE
461.1312FALSE
461.1179FALSE
461.1311FALSE
461.1177FALSE
461.1314FALSE
461.118FALSE
461.1309FALSE
461.118FALSE
461.1316FALSE
461.1177FALSE
461.1172FALSE
461.1171FALSE
461.114FALSE
461.1173FALSE
461.1139FALSE
461.1141FALSE
461.1168FALSE
461.1176FALSE
461.1142FALSE
461.0804FALSE
461.1138FALSE
461.0804FALSE
461.1099FALSE
461.0805FALSE
461.1098FALSE
461.0806FALSE
461.11FALSE
461.0803FALSE
461.1096FALSE
461.0698FALSE
461.1102FALSE
461.0698FALSE
461.1034FALSE
461.0699FALSE
461.07FALSE
461.1034FALSE
461.0697FALSE
461.1035FALSE
461.0623FALSE
461.1031FALSE
461.0623FALSE
461.1037FALSE
461.0624FALSE
461.0752FALSE
461.0625FALSE
461.0752FALSE
461.0752FALSE
461.0627FALSE
461.0748FALSE
461.0596FALSE
461.0757FALSE
461.0596FALSE
461.0867FALSE
461.0596FALSE
461.0866FALSE
461.0598FALSE
461.0867FALSE
461.0596FALSE
461.0876FALSE
461.0611FALSE
461.0857FALSE
461.0611FALSE
461.0697FALSE
461.0611FALSE
461.0697FALSE
461.0607FALSE
461.0697FALSE
461.0616FALSE
461.07FALSE
461.0594FALSE
461.0694FALSE
461.0594FALSE
461.066FALSE
461.0594FALSE
461.0589FALSE
461.066FALSE
461.0599FALSE
461.066FALSE
461.0575FALSE
461.0663FALSE
461.0575FALSE
461.0657FALSE
461.0575FALSE
461.0696FALSE
461.0577FALSE
461.0696FALSE
461.058FALSE
461.0696FALSE
461.0571FALSE
461.0693FALSE
461.0571FALSE
461.0701FALSE
461.0571FALSE
461.062FALSE
461.0572FALSE
461.062FALSE
461.057FALSE
461.0567FALSE
461.0567FALSE
461.062FALSE
461.0567FALSE
461.0569FALSE
461.0615FALSE
461.0568FALSE
461.0625FALSE
461.0565FALSE
461.0604FALSE
461.0565FALSE
461.0604FALSE
461.0565FALSE
461.0605FALSE
461.0567FALSE
461.0606FALSE
461.0567FALSE
461.0603FALSE
461.0564FALSE
461.0592FALSE
461.0564FALSE
461.0591FALSE
461.0564FALSE
461.0592FALSE
461.0566FALSE
461.0593FALSE
461.0566FALSE
461.059FALSE
461.0564FALSE
461.0583FALSE
461.0583FALSE
461.0564FALSE
461.0583FALSE
461.0564FALSE
461.0578FALSE
461.0564FALSE
461.0588FALSE
461.0569FALSE
461.0571FALSE
461.0564FALSE
461.0571FALSE
461.0564FALSE
461.0571FALSE
461.0564FALSE
461.0572FALSE
461.0566FALSE
461.0567FALSE
461.0572FALSE
461.0564FALSE
461.0569FALSE
461.0564FALSE
461.0569FALSE
461.0564FALSE
461.0569FALSE
461.0565FALSE
461.057FALSE
461.0566FALSE
461.0569FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0567FALSE
461.0564FALSE
461.0569FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0566FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0571FALSE
461.0564FALSE
461.0571FALSE
461.0565FALSE
461.0571FALSE
461.0565FALSE
461.0572FALSE
461.0564FALSE
461.057FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0565FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0565FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0566FALSE
461.0565FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0564FALSE
461.0566FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0564FALSE
461.0565FALSE
461.0565FALSE
461.0565FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.713790                -1.903285 

$value
[1] 461.0564

$counts
function gradient 
      47       47 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

461.0566FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                6.171723                -1.903340 

$value
[1] 461.0564

$counts
function gradient 
      47       47 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1398.930    1.102 1171.274 
