
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
597.7105FALSE
451.9684FALSE
605.9807FALSE
597.6941FALSE
605.9652FALSE
451.9641FALSE
597.7269FALSE
451.9726FALSE
605.9962FALSE
584.5906FALSE
591.1015FALSE
450.9967FALSE
584.5887FALSE
591.0939FALSE
451.011FALSE
591.1092FALSE
584.5925FALSE
450.9824FALSE
594.0051FALSE
584.5852FALSE
451.0237FALSE
594.0111FALSE
584.5873FALSE
451.0196FALSE
593.999FALSE
584.5832FALSE
451.0277FALSE
590.0907FALSE
584.5194FALSE
590.0899FALSE
449.2828FALSE
584.5194FALSE
590.0915FALSE
449.282FALSE
584.5195FALSE
590.0775FALSE
449.2836FALSE
584.5193FALSE
590.0773FALSE
449.6313FALSE
449.6384FALSE
590.0776FALSE
584.5193FALSE
449.6242FALSE
449.2653FALSE
590.0772FALSE
584.5194FALSE
449.265FALSE
584.5193FALSE
590.0772FALSE
449.2657FALSE
584.5193FALSE
590.0772FALSE
449.2602FALSE
590.0772FALSE
584.5193FALSE
449.2604FALSE
590.0772FALSE
584.5193FALSE
449.26FALSE
449.261FALSE
590.0772FALSE
$par
smooth_log_cases_lag1.bw 
               -1.026795 

$value
[1] 590.0772

$counts
function gradient 
       7        7 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

584.5193FALSE
449.2608FALSE
584.5193FALSE
$par
smooth_log_cases_lag0.bw 
               -1.236092 

$value
[1] 584.5193

$counts
function gradient 
       7        7 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

449.2612FALSE
449.2598FALSE
449.26FALSE
449.2599FALSE
449.2599FALSE
449.2598FALSE
449.2601FALSE
449.2598FALSE
449.26FALSE
449.2599FALSE
449.2598FALSE
449.2599FALSE
449.2599FALSE
449.2598FALSE
449.2599FALSE
449.2599FALSE
$par
time_ind_lag0.bw 
       -1.539226 

$value
[1] 449.2598

$counts
function gradient 
      13       13 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

477.133FALSE
476.4178FALSE
476.404FALSE
477.1183FALSE
476.4315FALSE
477.1476FALSE
476.4172FALSE
477.1294FALSE
476.4183FALSE
477.1366FALSE
456.5985FALSE
459.8314FALSE
456.5826FALSE
459.8142FALSE
456.6143FALSE
459.8486FALSE
456.6016FALSE
459.8518FALSE
456.5954FALSE
459.811FALSE
450.449FALSE
564.9842FALSE
450.449FALSE
564.9842FALSE
450.449FALSE
564.9842FALSE
450.4615FALSE
565.0452FALSE
450.4366FALSE
564.9232FALSE
457.1646FALSE
457.0582FALSE
457.1646FALSE
457.0564FALSE
457.1646FALSE
457.0599FALSE
457.1576FALSE
457.1046FALSE
457.1715FALSE
457.0118FALSE
450.7463FALSE
450.9665FALSE
450.7463FALSE
450.9648FALSE
450.7463FALSE
450.9682FALSE
450.7421FALSE
450.9779FALSE
450.7505FALSE
450.9552FALSE
449.2764FALSE
450.1244FALSE
449.2764FALSE
450.1232FALSE
449.2764FALSE
450.1255FALSE
449.2759FALSE
450.1298FALSE
449.2769FALSE
450.119FALSE
449.2725FALSE
449.7346FALSE
449.2725FALSE
449.7338FALSE
449.2725FALSE
449.7354FALSE
449.2721FALSE
449.7361FALSE
449.2729FALSE
449.7331FALSE
449.2902FALSE
449.5819FALSE
449.2902FALSE
449.5814FALSE
449.2902FALSE
449.5825FALSE
449.2915FALSE
449.5819FALSE
449.2889FALSE
449.5819FALSE
449.2628FALSE
449.5147FALSE
449.2628FALSE
449.5143FALSE
449.2628FALSE
449.5151FALSE
449.2626FALSE
449.5144FALSE
449.2631FALSE
449.515FALSE
449.2787FALSE
449.4298FALSE
449.2786FALSE
449.4296FALSE
449.2787FALSE
449.43FALSE
449.2798FALSE
449.4289FALSE
449.2775FALSE
449.4307FALSE
449.2611FALSE
449.3689FALSE
449.2611FALSE
449.3688FALSE
449.2611FALSE
449.3691FALSE
449.2611FALSE
449.3681FALSE
449.2613FALSE
449.3698FALSE
449.2619FALSE
449.8555FALSE
449.2619FALSE
449.8554FALSE
449.2619FALSE
449.8555FALSE
449.2621FALSE
449.8649FALSE
449.2617FALSE
449.8461FALSE
449.2611FALSE
449.3204FALSE
449.2611FALSE
449.3203FALSE
449.2611FALSE
449.3205FALSE
449.2612FALSE
449.3201FALSE
449.2612FALSE
449.3206FALSE
449.261FALSE
449.2963FALSE
449.261FALSE
449.2962FALSE
449.261FALSE
449.2963FALSE
449.2612FALSE
449.2973FALSE
449.2612FALSE
449.2954FALSE
449.261FALSE
449.261FALSE
449.2761FALSE
449.261FALSE
449.2761FALSE
449.2612FALSE
449.2762FALSE
449.2612FALSE
449.2759FALSE
449.261FALSE
449.2764FALSE
449.261FALSE
449.269FALSE
449.269FALSE
449.261FALSE
449.2612FALSE
449.2691FALSE
449.2612FALSE
449.2691FALSE
449.261FALSE
449.2692FALSE
449.261FALSE
449.2646FALSE
449.261FALSE
449.2646FALSE
449.2612FALSE
449.2646FALSE
449.2612FALSE
449.2648FALSE
449.261FALSE
449.261FALSE
449.2645FALSE
449.261FALSE
449.262FALSE
449.2612FALSE
449.262FALSE
449.2612FALSE
449.262FALSE
449.261FALSE
449.2618FALSE
449.261FALSE
449.261FALSE
449.2622FALSE
449.2612FALSE
449.261FALSE
449.2612FALSE
449.261FALSE
449.261FALSE
449.261FALSE
449.261FALSE
449.2611FALSE
449.261FALSE
449.2608FALSE
449.2612FALSE
449.2612FALSE
449.2604FALSE
449.261FALSE
449.2604FALSE
449.261FALSE
449.2604FALSE
449.261FALSE
449.2605FALSE
449.2612FALSE
449.2604FALSE
449.2612FALSE
449.2601FALSE
449.261FALSE
449.2601FALSE
449.261FALSE
449.2601FALSE
449.261FALSE
449.2602FALSE
449.2612FALSE
449.2612FALSE
449.2603FALSE
449.261FALSE
449.2599FALSE
449.261FALSE
449.2599FALSE
449.261FALSE
449.2599FALSE
449.2612FALSE
449.2601FALSE
449.2612FALSE
449.2601FALSE
449.261FALSE
449.2599FALSE
449.261FALSE
449.2599FALSE
449.261FALSE
449.2599FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2599FALSE
449.261FALSE
449.2599FALSE
449.261FALSE
449.2599FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.2599FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
449.26FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.261FALSE
449.2598FALSE
449.2612FALSE
449.26FALSE
449.2612FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                2.869950                -1.539524 

$value
[1] 449.261

$counts
function gradient 
      37       37 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2604FALSE
449.2604FALSE
449.2604FALSE
449.2606FALSE
449.2602FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
449.2598FALSE
449.2598FALSE
449.2598FALSE
449.26FALSE
449.26FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                4.791315                -1.539250 

$value
[1] 449.2598

$counts
function gradient 
      64       64 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
650.917   0.804 882.158 
