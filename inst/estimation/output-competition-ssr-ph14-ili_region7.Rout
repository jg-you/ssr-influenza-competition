
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
638.7581FALSE
467.8242FALSE
638.152FALSE
638.7559FALSE
638.1499FALSE
467.8193FALSE
638.1542FALSE
467.8291FALSE
638.7603FALSE
649.1355FALSE
469.5614FALSE
651.249FALSE
649.1529FALSE
651.2716FALSE
469.5903FALSE
649.1181FALSE
651.2263FALSE
469.533FALSE
638.6731FALSE
638.1345FALSE
466.061FALSE
638.6727FALSE
638.1354FALSE
466.0587FALSE
638.6734FALSE
638.1336FALSE
466.0641FALSE
638.6791FALSE
471.9241FALSE
638.1224FALSE
638.6816FALSE
471.966FALSE
638.6766FALSE
638.123FALSE
471.8824FALSE
638.6724FALSE
638.1217FALSE
465.9437FALSE
638.6725FALSE
638.1656FALSE
465.9446FALSE
638.6723FALSE
638.1633FALSE
465.9428FALSE
638.6723FALSE
638.1678FALSE
465.9241FALSE
638.6724FALSE
638.118FALSE
465.9245FALSE
638.6724FALSE
638.1186FALSE
465.9237FALSE
638.6723FALSE
638.1175FALSE
638.6724FALSE
465.9157FALSE
638.1636FALSE
638.6724FALSE
465.9156FALSE
638.1614FALSE
638.6723FALSE
465.9159FALSE
638.1658FALSE
638.6724FALSE
465.9172FALSE
638.1161FALSE
638.6724FALSE
465.9177FALSE
638.1166FALSE
638.6723FALSE
465.9167FALSE
638.1156FALSE
638.6724FALSE
465.9155FALSE
638.1629FALSE
638.6724FALSE
465.9154FALSE
638.1607FALSE
465.9157FALSE
638.6723FALSE
638.1651FALSE
465.9154FALSE
638.6724FALSE
638.1149FALSE
465.9153FALSE
638.6724FALSE
638.1154FALSE
465.9156FALSE
638.6723FALSE
638.1152FALSE
465.9159FALSE
638.6724FALSE
465.9165FALSE
638.1148FALSE
638.6724FALSE
638.6723FALSE
465.9154FALSE
638.1152FALSE
638.6724FALSE
465.9154FALSE
638.1156FALSE
638.6724FALSE
465.9154FALSE
638.1149FALSE
638.6723FALSE
465.9155FALSE
638.1153FALSE
638.6724FALSE
465.9153FALSE
638.1153FALSE
638.6724FALSE
465.9158FALSE
638.6723FALSE
638.1149FALSE
465.9154FALSE
638.6724FALSE
638.1153FALSE
465.9153FALSE
638.6724FALSE
638.1153FALSE
465.9155FALSE
638.6723FALSE
638.1149FALSE
465.9155FALSE
638.6724FALSE
638.1153FALSE
465.9153FALSE
638.6724FALSE
638.6723FALSE
465.9155FALSE
638.1153FALSE
638.6724FALSE
465.9155FALSE
$par
time_ind_lag0.bw 
       -1.742057 

$value
[1] 465.9153

$counts
function gradient 
      15       15 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.6723FALSE
638.1153FALSE
638.1153FALSE
638.6724FALSE
638.6724FALSE
638.1149FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1153FALSE
638.6724FALSE
638.6723FALSE
638.1149FALSE
638.1153FALSE
638.6724FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6724FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.7113FALSE
638.1153FALSE
638.7144FALSE
638.1153FALSE
638.7082FALSE
638.1149FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1153FALSE
638.6724FALSE
638.6723FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.1153FALSE
638.6723FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.1153FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1149FALSE
638.6724FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
638.1153FALSE
638.6723FALSE
638.1153FALSE
638.6724FALSE
638.1149FALSE
638.6724FALSE
$par
smooth_log_cases_lag1.bw 
               -2.236788 

$value
[1] 638.6723

$counts
function gradient 
      46       46 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

638.1153FALSE
638.1153FALSE
638.1149FALSE
638.1153FALSE
638.1153FALSE
638.1149FALSE
638.1153FALSE
638.1153FALSE
638.1149FALSE
638.1153FALSE
638.1153FALSE
638.1149FALSE
638.1153FALSE
638.1153FALSE
638.1149FALSE
638.1153FALSE
638.1153FALSE
638.1149FALSE
638.1153FALSE
638.1153FALSE
638.1149FALSE
638.1153FALSE
638.1153FALSE
638.1149FALSE
638.1153FALSE
638.1153FALSE
638.1149FALSE
638.1153FALSE
638.1153FALSE
$par
smooth_log_cases_lag0.bw 
               -2.279012 

$value
[1] 638.1149

$counts
function gradient 
      52       52 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

474.4945FALSE
485.5899FALSE
474.4856FALSE
485.5867FALSE
474.5034FALSE
485.5931FALSE
474.5016FALSE
485.5994FALSE
474.4876FALSE
485.5805FALSE
476.4065FALSE
486.6005FALSE
476.406FALSE
486.6239FALSE
476.4069FALSE
486.5769FALSE
476.3949FALSE
486.5739FALSE
476.4181FALSE
486.627FALSE
472.712FALSE
484.0596FALSE
472.7114FALSE
484.0644FALSE
472.7125FALSE
484.0544FALSE
472.7133FALSE
484.052FALSE
472.7106FALSE
484.067FALSE
472.6058FALSE
484.4874FALSE
472.6042FALSE
484.4809FALSE
472.6073FALSE
484.4938FALSE
472.608FALSE
484.4932FALSE
472.6036FALSE
484.4815FALSE
472.5113FALSE
483.1133FALSE
472.5216FALSE
483.1168FALSE
472.5009FALSE
483.1097FALSE
472.5041FALSE
483.1107FALSE
472.5185FALSE
483.1159FALSE
472.7411FALSE
483.7411FALSE
472.7491FALSE
483.7259FALSE
472.733FALSE
472.7351FALSE
483.7562FALSE
472.7471FALSE
483.7522FALSE
472.8201FALSE
483.7299FALSE
472.8091FALSE
483.0457FALSE
472.831FALSE
483.0484FALSE
472.828FALSE
483.043FALSE
472.8121FALSE
483.0441FALSE
472.464FALSE
483.0473FALSE
472.4743FALSE
483.183FALSE
472.4737FALSE
472.4719FALSE
483.164FALSE
472.4712FALSE
483.2018FALSE
472.8668FALSE
483.1979FALSE
472.8787FALSE
483.1679FALSE
472.8547FALSE
483.0036FALSE
472.8575FALSE
483.0051FALSE
472.876FALSE
483.0022FALSE
472.4732FALSE
483.0029FALSE
472.4836FALSE
483.0044FALSE
472.4628FALSE
483.0017FALSE
472.4661FALSE
482.9892FALSE
472.4804FALSE
483.0215FALSE
472.4643FALSE
472.4746FALSE
483.0176FALSE
472.4731FALSE
482.9881FALSE
472.4713FALSE
483.0007FALSE
472.4715FALSE
483.0022FALSE
472.464FALSE
482.9996FALSE
472.4743FALSE
483.0001FALSE
472.4737FALSE
483.0014FALSE
472.4719FALSE
482.9928FALSE
472.4712FALSE
482.9933FALSE
472.464FALSE
482.9923FALSE
472.4743FALSE
482.9931FALSE
472.4737FALSE
482.9925FALSE
472.4719FALSE
483.0276FALSE
472.4712FALSE
483.0079FALSE
472.464FALSE
483.0472FALSE
472.4743FALSE
483.0435FALSE
472.4737FALSE
472.4719FALSE
483.0116FALSE
472.4712FALSE
482.9908FALSE
472.464FALSE
482.9914FALSE
472.4743FALSE
482.9903FALSE
472.4737FALSE
482.9913FALSE
472.4719FALSE
482.9905FALSE
472.4712FALSE
482.9893FALSE
472.464FALSE
482.9899FALSE
472.4743FALSE
482.9888FALSE
472.4737FALSE
482.9898FALSE
472.4719FALSE
482.9889FALSE
472.4712FALSE
482.989FALSE
472.464FALSE
482.9896FALSE
472.4743FALSE
472.4737FALSE
482.9884FALSE
472.4719FALSE
482.9895FALSE
472.4712FALSE
482.9885FALSE
472.464FALSE
482.9868FALSE
472.4743FALSE
482.9874FALSE
472.4737FALSE
483.0026FALSE
472.4719FALSE
482.9988FALSE
472.4712FALSE
482.9863FALSE
472.464FALSE
482.9888FALSE
472.4743FALSE
482.9893FALSE
472.4737FALSE
482.9882FALSE
472.4719FALSE
482.9892FALSE
472.4712FALSE
482.9883FALSE
472.464FALSE
482.9874FALSE
472.4743FALSE
482.988FALSE
472.4737FALSE
482.9914FALSE
472.4719FALSE
472.4712FALSE
482.9879FALSE
472.464FALSE
482.9869FALSE
472.4743FALSE
482.9868FALSE
472.4737FALSE
482.9874FALSE
472.4719FALSE
483.0026FALSE
472.4712FALSE
482.9988FALSE
472.464FALSE
482.9863FALSE
472.4743FALSE
482.9887FALSE
472.4737FALSE
482.9894FALSE
472.4719FALSE
482.988FALSE
472.4712FALSE
482.989FALSE
472.464FALSE
472.4743FALSE
482.9883FALSE
472.4737FALSE
482.9873FALSE
472.4719FALSE
482.9879FALSE
472.4712FALSE
482.9867FALSE
472.464FALSE
482.9878FALSE
472.4743FALSE
482.9868FALSE
472.4737FALSE
482.987FALSE
472.4719FALSE
482.9876FALSE
472.4712FALSE
482.9897FALSE
472.464FALSE
482.9875FALSE
472.4743FALSE
482.9864FALSE
472.4737FALSE
482.9869FALSE
472.4719FALSE
482.9875FALSE
472.4712FALSE
482.9988FALSE
472.464FALSE
482.995FALSE
472.4743FALSE
482.9863FALSE
472.4737FALSE
482.9868FALSE
472.4719FALSE
482.9874FALSE
472.4712FALSE
483.0017FALSE
472.464FALSE
472.4743FALSE
482.998FALSE
472.4737FALSE
482.9863FALSE
472.4719FALSE
482.9868FALSE
472.4712FALSE
482.9874FALSE
472.464FALSE
483.0024FALSE
472.4743FALSE
482.9986FALSE
472.4737FALSE
482.9863FALSE
472.4719FALSE
482.9868FALSE
472.4712FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
               -1.959095                -2.171653 

$value
[1] 472.464

$counts
function gradient 
      28       28 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
482.9868FALSE
482.9874FALSE
483.0026FALSE
482.9988FALSE
482.9863FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0509FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0508FALSE
479.0507FALSE
479.0507FALSE
479.0507FALSE
479.0507FALSE
479.0507FALSE
479.0507FALSE
479.0507FALSE
479.0507FALSE
479.0507FALSE
479.0507FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                7.941258                -8.411961 

$value
[1] 479.0507

$counts
function gradient 
      53       53 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1232.863    0.972 1172.658 
