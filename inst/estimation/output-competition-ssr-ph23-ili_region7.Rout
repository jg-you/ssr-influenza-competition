
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
568.0691FALSE
570.9428FALSE
460.7339FALSE
568.0554FALSE
570.9313FALSE
460.7285FALSE
570.9542FALSE
568.0828FALSE
460.7392FALSE
571.3972FALSE
461.4189FALSE
565.8474FALSE
571.4187FALSE
565.8697FALSE
461.4416FALSE
571.3758FALSE
565.8251FALSE
461.3962FALSE
567.0463FALSE
563.3583FALSE
458.5029FALSE
567.0449FALSE
563.3495FALSE
458.5009FALSE
567.0477FALSE
563.3671FALSE
458.5048FALSE
567.0005FALSE
567.3233FALSE
567.0005FALSE
567.3496FALSE
458.9453FALSE
567.0005FALSE
567.2969FALSE
458.9518FALSE
567.0005FALSE
562.1321FALSE
458.9389FALSE
567.0005FALSE
562.1317FALSE
458.3989FALSE
567.0005FALSE
562.1325FALSE
562.1297FALSE
458.3995FALSE
567.0005FALSE
562.1298FALSE
458.3984FALSE
567.0005FALSE
562.1296FALSE
458.3847FALSE
567.0005FALSE
$par
smooth_log_cases_lag0.bw 
               -1.713073 

$value
[1] 567.0005

$counts
function gradient 
       6        6 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

562.1296FALSE
458.3855FALSE
562.1297FALSE
458.3838FALSE
562.1296FALSE
458.5206FALSE
562.1296FALSE
458.5188FALSE
562.1296FALSE
458.5224FALSE
562.1296FALSE
458.3802FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
562.1296FALSE
458.3811FALSE
562.1296FALSE
458.3817FALSE
562.1296FALSE
458.3825FALSE
562.1296FALSE
458.3808FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
458.3799FALSE
562.1296FALSE
562.1296FALSE
458.3801FALSE
562.1296FALSE
458.3827FALSE
562.1296FALSE
458.3836FALSE
562.1296FALSE
458.3819FALSE
562.1296FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
458.3799FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
562.1296FALSE
458.3799FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
458.3799FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
562.1296FALSE
458.3799FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
458.3799FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
458.3799FALSE
458.3792FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
458.3799FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
458.3799FALSE
562.1296FALSE
458.3792FALSE
562.1296FALSE
458.38FALSE
562.1296FALSE
$par
smooth_log_cases_lag1.bw 
               -1.687321 

$value
[1] 562.1296

$counts
function gradient 
      23       23 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

458.3799FALSE
458.3792FALSE
458.38FALSE
458.3799FALSE
458.3792FALSE
458.38FALSE
458.3799FALSE
458.3792FALSE
458.38FALSE
458.3799FALSE
458.3792FALSE
458.38FALSE
458.3799FALSE
$par
time_ind_lag0.bw 
       -1.712515 

$value
[1] 458.3792

$counts
function gradient 
      25       25 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

510.6174FALSE
511.2939FALSE
510.5908FALSE
511.2625FALSE
510.644FALSE
511.3252FALSE
510.6405FALSE
510.5942FALSE
511.3148FALSE
483.6854FALSE
511.2729FALSE
483.6654FALSE
479.8545FALSE
483.7052FALSE
479.8294FALSE
483.6791FALSE
483.6916FALSE
479.88FALSE
465.1781FALSE
479.8561FALSE
465.1724FALSE
479.853FALSE
465.1838FALSE
465.1726FALSE
462.4699FALSE
465.1835FALSE
462.4695FALSE
462.8158FALSE
462.813FALSE
462.4703FALSE
462.8187FALSE
462.4646FALSE
462.8105FALSE
462.8214FALSE
462.4752FALSE
459.8041FALSE
461.3198FALSE
459.8031FALSE
459.8051FALSE
461.3195FALSE
459.7998FALSE
461.3202FALSE
459.8084FALSE
461.3142FALSE
463.0029FALSE
461.3254FALSE
463.0026FALSE
458.8711FALSE
463.0031FALSE
458.8708FALSE
463.0336FALSE
458.8713FALSE
462.9722FALSE
458.6609FALSE
458.876FALSE
458.6603FALSE
458.8662FALSE
458.6615FALSE
459.1407FALSE
458.6602FALSE
458.662FALSE
459.1404FALSE
458.7015FALSE
459.1411FALSE
458.7011FALSE
459.1359FALSE
458.7019FALSE
459.1456FALSE
458.7041FALSE
458.5409FALSE
458.6988FALSE
458.5406FALSE
458.6577FALSE
458.5412FALSE
458.6573FALSE
458.5415FALSE
458.6582FALSE
458.5403FALSE
458.6584FALSE
458.6108FALSE
458.6571FALSE
458.6105FALSE
458.6266FALSE
458.611FALSE
458.6261FALSE
458.6088FALSE
458.627FALSE
458.6127FALSE
458.6272FALSE
458.5263FALSE
458.626FALSE
458.526FALSE
458.4762FALSE
458.5266FALSE
458.476FALSE
458.5271FALSE
458.4763FALSE
458.5254FALSE
458.4768FALSE
458.5247FALSE
458.4755FALSE
458.4484FALSE
458.5244FALSE
458.4483FALSE
458.525FALSE
458.4485FALSE
458.5237FALSE
458.4466FALSE
458.5258FALSE
458.4502FALSE
458.5218FALSE
458.4155FALSE
458.5215FALSE
458.4154FALSE
458.522FALSE
458.4156FALSE
458.5227FALSE
458.4164FALSE
458.5218FALSE
458.4146FALSE
458.608FALSE
458.4041FALSE
458.6078FALSE
458.404FALSE
458.6082FALSE
458.4041FALSE
458.606FALSE
458.4032FALSE
458.61FALSE
458.4052FALSE
458.5256FALSE
458.3886FALSE
458.5253FALSE
458.3886FALSE
458.5259FALSE
458.3886FALSE
458.5245FALSE
458.3887FALSE
458.5266FALSE
458.3887FALSE
458.5216FALSE
458.3844FALSE
458.5213FALSE
458.3844FALSE
458.5218FALSE
458.3844FALSE
458.5215FALSE
458.3844FALSE
458.5216FALSE
458.3853FALSE
458.5098FALSE
458.3819FALSE
458.5096FALSE
458.3818FALSE
458.5101FALSE
458.3819FALSE
458.5098FALSE
458.3827FALSE
458.5106FALSE
458.3814FALSE
458.4453FALSE
458.3805FALSE
458.4452FALSE
458.3805FALSE
458.3805FALSE
458.4455FALSE
458.381FALSE
458.4442FALSE
458.3812FALSE
458.4464FALSE
458.3798FALSE
458.4146FALSE
458.3798FALSE
458.4145FALSE
458.3798FALSE
458.4147FALSE
458.3804FALSE
458.4135FALSE
458.3807FALSE
458.4157FALSE
458.3795FALSE
458.3971FALSE
458.3795FALSE
458.3795FALSE
458.3971FALSE
458.3803FALSE
458.3972FALSE
458.3802FALSE
458.3966FALSE
458.3794FALSE
458.3987FALSE
458.3794FALSE
458.388FALSE
458.3794FALSE
458.3879FALSE
458.3801FALSE
458.388FALSE
458.3888FALSE
458.3801FALSE
458.3875FALSE
458.3793FALSE
458.3836FALSE
458.3793FALSE
458.3793FALSE
458.3835FALSE
458.38FALSE
458.38FALSE
458.3836FALSE
458.3792FALSE
458.3834FALSE
458.3792FALSE
458.3845FALSE
458.3792FALSE
458.3817FALSE
458.3801FALSE
458.3817FALSE
458.3799FALSE
458.3817FALSE
458.3792FALSE
458.3821FALSE
458.3792FALSE
458.3823FALSE
458.3792FALSE
458.3801FALSE
458.3799FALSE
458.3801FALSE
458.38FALSE
458.3801FALSE
458.3792FALSE
458.3808FALSE
458.3792FALSE
458.3807FALSE
458.3792FALSE
458.3797FALSE
458.3799FALSE
458.3797FALSE
458.38FALSE
458.3797FALSE
458.3792FALSE
458.3803FALSE
458.3792FALSE
458.3805FALSE
458.3792FALSE
458.3794FALSE
458.38FALSE
458.3794FALSE
458.38FALSE
458.3794FALSE
458.3802FALSE
458.3792FALSE
458.3801FALSE
458.3792FALSE
458.3793FALSE
458.3792FALSE
458.3793FALSE
458.38FALSE
458.38FALSE
458.3793FALSE
458.3792FALSE
458.38FALSE
458.3792FALSE
458.3801FALSE
458.3792FALSE
458.3793FALSE
458.38FALSE
458.3793FALSE
458.38FALSE
458.3792FALSE
458.3793FALSE
458.3792FALSE
458.3801FALSE
458.3792FALSE
458.3799FALSE
458.38FALSE
458.3792FALSE
458.38FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                7.433182                -1.712530 

$value
[1] 458.3792

$counts
function gradient 
      29       29 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.3799FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.3799FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
458.3792FALSE
458.3792FALSE
458.3792FALSE
458.38FALSE
458.38FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.841336                -1.712526 

$value
[1] 458.3792

$counts
function gradient 
      49       49 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
642.449   0.621 716.909 
