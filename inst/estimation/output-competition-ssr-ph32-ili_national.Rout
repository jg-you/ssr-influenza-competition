
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
516.7338FALSE
355.0994FALSE
516.7195FALSE
499.7269FALSE
516.7481FALSE
355.0979FALSE
499.7114FALSE
514.9204FALSE
355.1009FALSE
499.7425FALSE
514.9449FALSE
501.7561FALSE
364.1144FALSE
514.8959FALSE
501.7883FALSE
364.1522FALSE
511.6701FALSE
501.7239FALSE
511.6615FALSE
364.0768FALSE
354.7511FALSE
494.4578FALSE
511.6787FALSE
354.7513FALSE
494.4545FALSE
513.1704FALSE
513.1901FALSE
494.4611FALSE
354.7509FALSE
513.1511FALSE
354.7443FALSE
494.6055FALSE
510.3902FALSE
354.7444FALSE
494.6114FALSE
510.389FALSE
354.7443FALSE
494.5996FALSE
510.3914FALSE
354.7691FALSE
494.3597FALSE
354.7671FALSE
510.3854FALSE
494.36FALSE
354.771FALSE
510.3859FALSE
494.3597FALSE
354.7443FALSE
510.3849FALSE
354.7444FALSE
494.36FALSE
510.3814FALSE
354.7442FALSE
494.3597FALSE
510.3814FALSE
354.7442FALSE
494.3603FALSE
510.3814FALSE
354.7443FALSE
494.3596FALSE
510.3814FALSE
354.7441FALSE
494.3599FALSE
510.3814FALSE
354.7507FALSE
494.3598FALSE
510.3814FALSE
354.7499FALSE
494.3596FALSE
510.3814FALSE
354.752FALSE
494.3598FALSE
510.3814FALSE
354.7442FALSE
494.3598FALSE
510.3814FALSE
354.7443FALSE
494.3596FALSE
510.3814FALSE
354.7441FALSE
494.3598FALSE
510.3814FALSE
354.7441FALSE
494.3598FALSE
510.3814FALSE
354.7442FALSE
494.3596FALSE
510.3814FALSE
354.744FALSE
494.3598FALSE
354.747FALSE
510.3814FALSE
354.7461FALSE
494.3598FALSE
510.3814FALSE
354.7478FALSE
510.3814FALSE
494.3596FALSE
354.7441FALSE
494.3598FALSE
510.3814FALSE
354.7442FALSE
494.3598FALSE
510.3814FALSE
354.7442FALSE
494.3596FALSE
510.3814FALSE
354.7441FALSE
494.3598FALSE
510.3814FALSE
354.7441FALSE
494.3598FALSE
510.3814FALSE
354.745FALSE
494.3596FALSE
510.3814FALSE
354.7441FALSE
494.3598FALSE
510.3814FALSE
354.7442FALSE
494.3598FALSE
510.3814FALSE
354.7442FALSE
494.3596FALSE
510.3814FALSE
354.7441FALSE
494.3598FALSE
510.3814FALSE
354.7442FALSE
354.7442FALSE
$par
time_ind_lag0.bw 
       -2.117076 

$value
[1] 354.7441

$counts
function gradient 
      15       15 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

510.3814FALSE
494.3598FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
494.3598FALSE
510.3814FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3596FALSE
510.3814FALSE
494.3598FALSE
510.3814FALSE
494.3598FALSE
$par
smooth_log_cases_lag0.bw 
               -1.770944 

$value
[1] 494.3596

$counts
function gradient 
      48       48 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

510.3814FALSE
510.3814FALSE
510.3814FALSE
$par
smooth_log_cases_lag1.bw 
               -1.679396 

$value
[1] 510.3814

$counts
function gradient 
      48       48 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

380.3769FALSE
381.4051FALSE
380.3569FALSE
381.3832FALSE
380.3971FALSE
381.4269FALSE
380.3841FALSE
381.4143FALSE
380.3696FALSE
381.3958FALSE
365.617FALSE
365.709FALSE
365.6032FALSE
365.6952FALSE
365.7228FALSE
365.6307FALSE
365.7074FALSE
365.6159FALSE
365.7107FALSE
365.6182FALSE
355.6341FALSE
354.9541FALSE
355.6331FALSE
354.9538FALSE
355.6352FALSE
354.9545FALSE
355.6326FALSE
354.9523FALSE
355.6356FALSE
354.956FALSE
355.2435FALSE
354.9212FALSE
355.2427FALSE
354.9209FALSE
355.2443FALSE
354.9214FALSE
355.2415FALSE
354.922FALSE
355.2454FALSE
354.9204FALSE
356.6959FALSE
354.8986FALSE
356.6957FALSE
354.8984FALSE
356.6962FALSE
356.7069FALSE
354.8989FALSE
356.685FALSE
354.8987FALSE
355.0495FALSE
354.8985FALSE
355.0489FALSE
354.8822FALSE
355.05FALSE
354.882FALSE
355.0497FALSE
354.8825FALSE
355.0492FALSE
354.8824FALSE
354.9816FALSE
354.8821FALSE
354.9812FALSE
354.8225FALSE
354.9821FALSE
354.8224FALSE
354.982FALSE
354.8227FALSE
354.9812FALSE
354.8231FALSE
354.8634FALSE
354.822FALSE
354.8632FALSE
356.7216FALSE
354.8636FALSE
356.7216FALSE
354.8636FALSE
356.7216FALSE
354.8632FALSE
356.7178FALSE
354.8166FALSE
356.7253FALSE
354.8166FALSE
354.8326FALSE
354.8167FALSE
354.8326FALSE
354.8169FALSE
354.8164FALSE
354.8327FALSE
354.8824FALSE
354.8308FALSE
354.8824FALSE
354.8825FALSE
354.8344FALSE
354.8803FALSE
354.7921FALSE
354.8846FALSE
354.792FALSE
354.785FALSE
354.7922FALSE
354.7849FALSE
354.7925FALSE
354.7851FALSE
354.7918FALSE
354.7852FALSE
354.9124FALSE
354.7848FALSE
354.9124FALSE
354.8625FALSE
354.9125FALSE
354.8624FALSE
354.9104FALSE
354.8625FALSE
354.9145FALSE
354.8602FALSE
354.8647FALSE
354.7866FALSE
354.7777FALSE
354.7865FALSE
354.7776FALSE
354.7867FALSE
354.7777FALSE
354.7867FALSE
354.778FALSE
354.7865FALSE
354.7774FALSE
354.7941FALSE
354.7725FALSE
354.7941FALSE
354.7724FALSE
354.7942FALSE
354.7725FALSE
354.7921FALSE
354.7728FALSE
354.7961FALSE
354.7721FALSE
354.7859FALSE
354.7997FALSE
354.7858FALSE
354.7997FALSE
354.786FALSE
354.785FALSE
354.7998FALSE
354.7867FALSE
354.7978FALSE
354.7795FALSE
354.8016FALSE
354.7703FALSE
354.7794FALSE
354.7703FALSE
354.7795FALSE
354.7704FALSE
354.7787FALSE
354.7704FALSE
354.7803FALSE
354.7702FALSE
354.7585FALSE
354.8238FALSE
354.8238FALSE
354.7585FALSE
354.8239FALSE
354.7585FALSE
354.7588FALSE
354.8219FALSE
354.7581FALSE
354.8259FALSE
354.7554FALSE
354.7683FALSE
354.7553FALSE
354.7683FALSE
354.7554FALSE
354.7684FALSE
354.7557FALSE
354.7685FALSE
354.755FALSE
354.7687FALSE
354.7484FALSE
354.7552FALSE
354.7552FALSE
354.7484FALSE
354.7553FALSE
354.7484FALSE
354.7553FALSE
354.7482FALSE
354.7551FALSE
354.7492FALSE
354.7514FALSE
354.7475FALSE
354.7514FALSE
354.7514FALSE
354.7475FALSE
354.7506FALSE
354.7475FALSE
354.7522FALSE
354.7475FALSE
354.746FALSE
354.7474FALSE
354.746FALSE
354.7463FALSE
354.746FALSE
354.7463FALSE
354.7461FALSE
354.7463FALSE
354.746FALSE
354.7464FALSE
354.7456FALSE
354.7456FALSE
354.7463FALSE
354.7456FALSE
354.7474FALSE
354.7457FALSE
354.7474FALSE
354.7455FALSE
354.7474FALSE
354.745FALSE
354.7466FALSE
354.745FALSE
354.7483FALSE
354.745FALSE
354.7456FALSE
354.7451FALSE
354.7456FALSE
354.7449FALSE
354.7456FALSE
354.7446FALSE
354.7457FALSE
354.7446FALSE
354.7455FALSE
354.7446FALSE
354.7459FALSE
354.7447FALSE
354.7459FALSE
354.7445FALSE
354.7459FALSE
354.7446FALSE
354.7451FALSE
354.7446FALSE
354.7446FALSE
354.7468FALSE
354.7441FALSE
354.7452FALSE
354.7455FALSE
354.7452FALSE
354.7445FALSE
354.7453FALSE
354.7445FALSE
354.7454FALSE
354.7445FALSE
354.7451FALSE
354.7446FALSE
354.7452FALSE
354.7444FALSE
354.7442FALSE
354.7452FALSE
354.7442FALSE
354.7452FALSE
354.7442FALSE
354.7453FALSE
354.7443FALSE
354.7454FALSE
354.7443FALSE
354.7449FALSE
354.7441FALSE
354.7441FALSE
354.7449FALSE
354.7441FALSE
354.7449FALSE
354.7442FALSE
354.745FALSE
354.7447FALSE
354.7448FALSE
354.7442FALSE
354.7462FALSE
354.7442FALSE
354.7462FALSE
354.7442FALSE
354.7462FALSE
354.7443FALSE
354.7454FALSE
354.7444FALSE
354.747FALSE
354.7442FALSE
354.7445FALSE
354.7442FALSE
354.7445FALSE
354.7445FALSE
354.7442FALSE
354.7446FALSE
354.7443FALSE
354.7448FALSE
354.7443FALSE
354.7443FALSE
354.7441FALSE
354.7443FALSE
354.7441FALSE
354.7441FALSE
354.7443FALSE
354.7442FALSE
354.7444FALSE
354.7443FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7443FALSE
354.7442FALSE
354.7445FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7443FALSE
354.7442FALSE
354.7443FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7456FALSE
354.7441FALSE
354.7441FALSE
354.7456FALSE
354.7456FALSE
354.7441FALSE
354.746FALSE
354.7442FALSE
354.7452FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
354.7442FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.374237                -2.117076 

$value
[1] 354.7441

$counts
function gradient 
      50       50 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
354.7441FALSE
354.7441FALSE
354.7441FALSE
354.7442FALSE
354.7442FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                6.439781                -2.117083 

$value
[1] 354.7441

$counts
function gradient 
      52       52 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1538.395    1.369 1118.730 
