
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
901.5386FALSE
711.6633FALSE
928.7119FALSE
901.5622FALSE
928.7304FALSE
711.6532FALSE
901.515FALSE
928.6934FALSE
711.6734FALSE
711.4543FALSE
923.4113FALSE
892.7278FALSE
711.4958FALSE
892.7173FALSE
923.4062FALSE
711.4131FALSE
892.7383FALSE
709.4399FALSE
923.4163FALSE
890.4644FALSE
709.4284FALSE
922.4413FALSE
890.4633FALSE
709.4514FALSE
922.4373FALSE
705.9213FALSE
922.4453FALSE
890.4654FALSE
705.919FALSE
928.6453FALSE
890.4574FALSE
705.9235FALSE
928.6638FALSE
890.4582FALSE
706.8037FALSE
890.4567FALSE
928.6269FALSE
706.8187FALSE
706.7888FALSE
922.3577FALSE
890.4559FALSE
705.866FALSE
922.3605FALSE
890.4558FALSE
705.8652FALSE
922.3549FALSE
890.456FALSE
705.8668FALSE
922.3066FALSE
705.8641FALSE
890.4557FALSE
922.3066FALSE
705.8653FALSE
890.4557FALSE
922.3065FALSE
705.863FALSE
890.4558FALSE
922.3064FALSE
705.8596FALSE
922.3065FALSE
890.4555FALSE
705.8588FALSE
922.3069FALSE
890.4555FALSE
705.8604FALSE
922.3065FALSE
705.8584FALSE
890.4555FALSE
922.3066FALSE
705.8588FALSE
922.3064FALSE
890.4555FALSE
705.8579FALSE
922.3064FALSE
890.4555FALSE
705.8594FALSE
922.3065FALSE
705.8586FALSE
890.4555FALSE
$par
smooth_log_cases_lag1.bw 
               -2.966313 

$value
[1] 890.4555

$counts
function gradient 
       8        8 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

922.3066FALSE
705.8602FALSE
922.3065FALSE
705.8578FALSE
922.3066FALSE
705.8582FALSE
922.3064FALSE
705.8577FALSE
922.3064FALSE
705.8585FALSE
922.3065FALSE
705.8577FALSE
705.8593FALSE
922.3066FALSE
922.3064FALSE
705.8576FALSE
705.858FALSE
922.3065FALSE
705.858FALSE
922.3066FALSE
922.3064FALSE
705.8576FALSE
705.858FALSE
922.3065FALSE
705.858FALSE
922.3066FALSE
922.3064FALSE
705.8576FALSE
922.3065FALSE
705.858FALSE
922.3066FALSE
705.858FALSE
$par
time_ind_lag0.bw 
       -1.607964 

$value
[1] 705.8576

$counts
function gradient 
      15       15 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3506FALSE
922.3534FALSE
922.3479FALSE
922.3067FALSE
922.3068FALSE
922.3066FALSE
922.3065FALSE
922.3065FALSE
922.3064FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
922.3064FALSE
922.3065FALSE
922.3066FALSE
$par
smooth_log_cases_lag0.bw 
               -3.017843 

$value
[1] 922.3064

$counts
function gradient 
      49       49 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

750.0691FALSE
746.3611FALSE
750.027FALSE
746.3222FALSE
750.1112FALSE
746.3999FALSE
750.0999FALSE
746.3944FALSE
750.0384FALSE
746.328FALSE
721.9661FALSE
723.043FALSE
721.9437FALSE
723.0153FALSE
721.9883FALSE
723.0725FALSE
721.9619FALSE
723.0368FALSE
721.9702FALSE
723.0493FALSE
711.3753FALSE
713.5879FALSE
711.3776FALSE
713.586FALSE
711.373FALSE
713.5897FALSE
711.3634FALSE
713.5765FALSE
711.3875FALSE
713.5992FALSE
709.2996FALSE
711.0437FALSE
709.3033FALSE
711.042FALSE
709.2959FALSE
711.0453FALSE
709.291FALSE
711.0308FALSE
709.3081FALSE
711.0566FALSE
718.1834FALSE
709.1773FALSE
718.1552FALSE
709.1766FALSE
718.2115FALSE
709.178FALSE
718.2334FALSE
709.2084FALSE
718.1335FALSE
709.1463FALSE
708.1623FALSE
708.6891FALSE
708.1646FALSE
708.688FALSE
708.16FALSE
708.6901FALSE
708.158FALSE
708.1666FALSE
708.6832FALSE
709.1119FALSE
708.6949FALSE
707.4373FALSE
709.0954FALSE
707.4362FALSE
709.1284FALSE
707.4384FALSE
709.1225FALSE
707.4495FALSE
709.1013FALSE
707.4256FALSE
708.0256FALSE
707.725FALSE
708.0218FALSE
707.7233FALSE
708.0292FALSE
707.7268FALSE
708.0264FALSE
707.7201FALSE
708.0247FALSE
707.7299FALSE
707.9953FALSE
972.0696FALSE
707.9969FALSE
972.0728FALSE
707.9938FALSE
972.0663FALSE
707.9944FALSE
972.1676FALSE
707.9963FALSE
971.9714FALSE
707.9793FALSE
707.6203FALSE
707.9811FALSE
707.6186FALSE
707.9774FALSE
707.6221FALSE
707.9783FALSE
707.6152FALSE
707.9802FALSE
707.6254FALSE
708.0627FALSE
707.5117FALSE
708.0586FALSE
707.5099FALSE
708.0667FALSE
707.5134FALSE
708.0648FALSE
707.5064FALSE
707.5169FALSE
708.0606FALSE
783.3149FALSE
707.9681FALSE
783.3182FALSE
707.9701FALSE
783.3115FALSE
707.966FALSE
783.57FALSE
707.9671FALSE
783.0596FALSE
707.969FALSE
707.0366FALSE
707.9605FALSE
707.0351FALSE
707.9627FALSE
707.0382FALSE
707.9584FALSE
707.0344FALSE
707.9596FALSE
707.0388FALSE
707.9615FALSE
706.9002FALSE
708.0054FALSE
706.8989FALSE
708.0011FALSE
706.9015FALSE
708.0097FALSE
706.9064FALSE
708.0075FALSE
706.894FALSE
708.0034FALSE
706.8896FALSE
707.9572FALSE
706.8879FALSE
707.9594FALSE
706.8913FALSE
707.9573FALSE
706.8896FALSE
707.9563FALSE
706.8896FALSE
707.9582FALSE
706.717FALSE
708.2686FALSE
706.7155FALSE
708.2651FALSE
706.7184FALSE
708.2721FALSE
706.7195FALSE
708.2722FALSE
706.7144FALSE
708.2657FALSE
706.5346FALSE
707.9738FALSE
706.5338FALSE
706.5355FALSE
707.9693FALSE
706.5399FALSE
707.9782FALSE
706.5294FALSE
707.9758FALSE
706.1179FALSE
707.9717FALSE
706.1174FALSE
707.9564FALSE
706.1184FALSE
707.9586FALSE
706.1178FALSE
706.1179FALSE
707.959FALSE
706.0001FALSE
707.9565FALSE
707.9573FALSE
705.9999FALSE
707.9589FALSE
706.0004FALSE
707.9576FALSE
706.0001FALSE
707.9636FALSE
706.0002FALSE
707.9611FALSE
705.949FALSE
707.9568FALSE
705.9489FALSE
707.9561FALSE
705.9492FALSE
707.9581FALSE
705.947FALSE
707.9607FALSE
705.951FALSE
707.9582FALSE
705.9202FALSE
707.9569FALSE
705.9202FALSE
707.9567FALSE
705.9203FALSE
707.9588FALSE
705.9195FALSE
707.9591FALSE
705.9217FALSE
707.9565FALSE
705.892FALSE
707.9576FALSE
705.8919FALSE
707.9561FALSE
705.892FALSE
707.9582FALSE
705.8912FALSE
707.9605FALSE
705.8928FALSE
705.8678FALSE
707.958FALSE
705.8677FALSE
707.957FALSE
705.8678FALSE
707.9582FALSE
705.8678FALSE
707.9602FALSE
705.8686FALSE
707.9561FALSE
705.8744FALSE
705.8743FALSE
707.9573FALSE
705.8744FALSE
707.959FALSE
705.8755FALSE
707.9563FALSE
705.8732FALSE
707.9584FALSE
705.8672FALSE
707.9601FALSE
705.8672FALSE
707.9575FALSE
705.8672FALSE
707.9572FALSE
707.9561FALSE
705.8683FALSE
707.9582FALSE
705.8668FALSE
707.9605FALSE
705.8644FALSE
707.9579FALSE
705.8644FALSE
707.957FALSE
705.8644FALSE
707.9561FALSE
705.8648FALSE
707.9582FALSE
705.8639FALSE
707.9605FALSE
705.8613FALSE
705.8613FALSE
707.958FALSE
705.8613FALSE
707.957FALSE
705.8605FALSE
707.9561FALSE
705.8621FALSE
707.9582FALSE
705.8595FALSE
707.9605FALSE
705.8595FALSE
707.958FALSE
705.8595FALSE
707.957FALSE
705.8597FALSE
705.8603FALSE
707.9561FALSE
705.8584FALSE
707.9582FALSE
707.9605FALSE
705.8584FALSE
707.958FALSE
705.8584FALSE
707.957FALSE
705.8588FALSE
707.9561FALSE
705.8589FALSE
705.8581FALSE
707.9582FALSE
705.8581FALSE
707.9605FALSE
705.8581FALSE
707.958FALSE
705.8585FALSE
707.957FALSE
705.8586FALSE
707.9561FALSE
705.8578FALSE
707.9582FALSE
705.8578FALSE
707.9605FALSE
705.8578FALSE
707.958FALSE
705.8582FALSE
707.957FALSE
705.8583FALSE
707.9561FALSE
705.8614FALSE
707.9582FALSE
705.8614FALSE
707.9605FALSE
705.8614FALSE
707.958FALSE
705.8626FALSE
707.957FALSE
705.8603FALSE
707.9561FALSE
705.8579FALSE
707.9582FALSE
705.8579FALSE
707.9605FALSE
705.8579FALSE
707.958FALSE
705.8583FALSE
707.957FALSE
705.8581FALSE
707.9561FALSE
705.8578FALSE
707.9582FALSE
705.8578FALSE
707.9605FALSE
705.8578FALSE
707.958FALSE
705.8582FALSE
707.957FALSE
705.8583FALSE
707.9561FALSE
705.8578FALSE
707.9582FALSE
705.8578FALSE
707.9605FALSE
705.8578FALSE
707.958FALSE
705.8582FALSE
707.957FALSE
705.8583FALSE
707.9561FALSE
705.8578FALSE
707.9582FALSE
705.8578FALSE
707.9605FALSE
705.8578FALSE
707.958FALSE
705.8582FALSE
707.957FALSE
705.8583FALSE
707.9561FALSE
705.8578FALSE
707.9582FALSE
705.8578FALSE
707.9605FALSE
705.8578FALSE
707.958FALSE
705.8582FALSE
707.957FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
              -0.6905542               -1.6886990 

$value
[1] 707.9561

$counts
function gradient 
      36       36 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
705.8578FALSE
705.8578FALSE
705.8578FALSE
705.8582FALSE
705.8583FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                4.344810                -1.607973 

$value
[1] 705.8578

$counts
function gradient 
      48       48 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
954.456   0.718 941.066 
