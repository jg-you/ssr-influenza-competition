
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
415.4427FALSE
401.5611FALSE
354.0476FALSE
401.5633FALSE
354.038FALSE
415.4451FALSE
401.5589FALSE
354.0573FALSE
415.4404FALSE
420.6718FALSE
352.7031FALSE
420.6531FALSE
427.6646FALSE
352.7295FALSE
420.6905FALSE
352.6767FALSE
401.5858FALSE
427.6546FALSE
351.7825FALSE
427.6746FALSE
401.5831FALSE
351.7747FALSE
415.3715FALSE
401.5885FALSE
351.7903FALSE
415.3726FALSE
401.5479FALSE
381.1935FALSE
401.5491FALSE
415.3705FALSE
381.3241FALSE
401.5468FALSE
415.4377FALSE
381.0629FALSE
415.4349FALSE
401.5585FALSE
349.7605FALSE
415.4406FALSE
401.556FALSE
349.7563FALSE
415.3682FALSE
401.561FALSE
349.7647FALSE
415.3692FALSE
351.3405FALSE
401.5462FALSE
415.3672FALSE
351.3602FALSE
401.5474FALSE
415.4108FALSE
351.3208FALSE
401.5451FALSE
415.4081FALSE
349.4128FALSE
401.5528FALSE
415.4135FALSE
349.4108FALSE
401.5504FALSE
349.4147FALSE
415.3681FALSE
401.5552FALSE
349.5212FALSE
415.3676FALSE
401.5455FALSE
349.5268FALSE
415.3704FALSE
401.5466FALSE
349.5156FALSE
415.3675FALSE
401.5462FALSE
349.3626FALSE
415.3685FALSE
401.545FALSE
349.362FALSE
415.3682FALSE
401.5461FALSE
349.3632FALSE
415.3673FALSE
401.5471FALSE
349.3574FALSE
415.3679FALSE
401.5453FALSE
349.3583FALSE
415.3696FALSE
401.5465FALSE
349.3565FALSE
415.3674FALSE
349.3584FALSE
401.5465FALSE
349.3578FALSE
415.3684FALSE
401.5453FALSE
349.359FALSE
401.5465FALSE
415.3684FALSE
349.3558FALSE
401.5465FALSE
$par
smooth_log_cases_lag0.bw 
               -2.312139 

$value
[1] 401.5453

$counts
function gradient 
      11       11 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

415.3674FALSE
349.3557FALSE
415.3684FALSE
349.3559FALSE
415.3684FALSE
$par
smooth_log_cases_lag1.bw 
               -2.344803 

$value
[1] 415.3674

$counts
function gradient 
      11       11 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

349.3561FALSE
349.3568FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3559FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3558FALSE
$par
time_ind_lag0.bw 
       -1.562428 

$value
[1] 349.3557

$counts
function gradient 
      17       17 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

359.247FALSE
363.3709FALSE
359.2367FALSE
363.3578FALSE
359.2573FALSE
363.384FALSE
359.2513FALSE
363.3741FALSE
359.2428FALSE
363.3677FALSE
354.8626FALSE
355.3133FALSE
354.861FALSE
355.3087FALSE
355.318FALSE
354.8641FALSE
355.3052FALSE
354.8539FALSE
355.3215FALSE
354.8712FALSE
352.1514FALSE
352.0611FALSE
352.1501FALSE
352.06FALSE
352.0622FALSE
352.1527FALSE
352.0575FALSE
352.1646FALSE
352.0647FALSE
352.1382FALSE
352.3007FALSE
351.1855FALSE
352.3003FALSE
351.1831FALSE
351.1879FALSE
352.301FALSE
351.1835FALSE
352.311FALSE
351.1875FALSE
352.2904FALSE
350.2983FALSE
351.7384FALSE
350.2968FALSE
351.7378FALSE
350.2998FALSE
351.7391FALSE
350.2968FALSE
351.7379FALSE
350.2998FALSE
351.739FALSE
349.6618FALSE
351.674FALSE
349.6614FALSE
351.6731FALSE
349.6622FALSE
351.6749FALSE
349.66FALSE
351.677FALSE
349.6636FALSE
351.6711FALSE
349.5314FALSE
351.3938FALSE
349.5311FALSE
351.3927FALSE
349.5317FALSE
351.3948FALSE
349.5298FALSE
351.4005FALSE
349.5331FALSE
351.3871FALSE
349.4949FALSE
350.9389FALSE
349.4948FALSE
350.9387FALSE
349.495FALSE
350.9392FALSE
349.4995FALSE
350.9567FALSE
349.4903FALSE
350.9212FALSE
349.4349FALSE
349.8854FALSE
349.4347FALSE
349.8852FALSE
349.4351FALSE
349.8856FALSE
349.4345FALSE
349.8934FALSE
349.4353FALSE
349.878FALSE
349.4204FALSE
349.4365FALSE
349.4203FALSE
349.4365FALSE
349.4205FALSE
349.4366FALSE
349.4224FALSE
349.4404FALSE
349.4183FALSE
349.4327FALSE
349.3907FALSE
349.3907FALSE
349.4083FALSE
349.3908FALSE
349.4082FALSE
349.3916FALSE
349.4083FALSE
349.4066FALSE
349.3907FALSE
349.4099FALSE
349.3767FALSE
349.3868FALSE
349.3766FALSE
349.3868FALSE
349.3767FALSE
349.3868FALSE
349.3765FALSE
349.3856FALSE
349.3768FALSE
349.3666FALSE
349.388FALSE
349.3666FALSE
349.4018FALSE
349.3667FALSE
349.4018FALSE
349.3664FALSE
349.4018FALSE
349.3672FALSE
349.4054FALSE
349.3982FALSE
349.361FALSE
349.361FALSE
349.3692FALSE
349.361FALSE
349.3692FALSE
349.3609FALSE
349.3693FALSE
349.3611FALSE
349.3691FALSE
349.3585FALSE
349.3693FALSE
349.3585FALSE
349.3676FALSE
349.3585FALSE
349.3676FALSE
349.3592FALSE
349.3676FALSE
349.3675FALSE
349.3583FALSE
349.3677FALSE
349.3571FALSE
349.3571FALSE
349.4105FALSE
349.3571FALSE
349.4104FALSE
349.3571FALSE
349.4105FALSE
349.3572FALSE
349.4144FALSE
349.3564FALSE
349.4065FALSE
349.3564FALSE
349.3677FALSE
349.3564FALSE
349.3676FALSE
349.3564FALSE
349.3677FALSE
349.3565FALSE
349.3686FALSE
349.356FALSE
349.3668FALSE
349.356FALSE
349.3671FALSE
349.356FALSE
349.3671FALSE
349.3565FALSE
349.3671FALSE
349.3561FALSE
349.3559FALSE
349.3679FALSE
349.3671FALSE
349.3559FALSE
349.3645FALSE
349.3559FALSE
349.3645FALSE
349.3562FALSE
349.3645FALSE
349.356FALSE
349.365FALSE
349.3558FALSE
349.3646FALSE
349.3558FALSE
349.3587FALSE
349.3558FALSE
349.3587FALSE
349.3559FALSE
349.3587FALSE
349.3559FALSE
349.3588FALSE
349.3558FALSE
349.3588FALSE
349.3558FALSE
349.3575FALSE
349.3558FALSE
349.3575FALSE
349.3558FALSE
349.3575FALSE
349.3559FALSE
349.3575FALSE
349.3557FALSE
349.3576FALSE
349.3557FALSE
349.3566FALSE
349.3557FALSE
349.3566FALSE
349.3559FALSE
349.3566FALSE
349.3558FALSE
349.3565FALSE
349.3557FALSE
349.3567FALSE
349.3562FALSE
349.3557FALSE
349.3562FALSE
349.3557FALSE
349.3562FALSE
349.3559FALSE
349.3562FALSE
349.3558FALSE
349.3562FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.356FALSE
349.3558FALSE
349.3559FALSE
349.3557FALSE
349.3557FALSE
349.3561FALSE
349.3557FALSE
349.3575FALSE
349.3558FALSE
349.3575FALSE
349.3558FALSE
349.3575FALSE
349.3557FALSE
349.3584FALSE
349.3557FALSE
349.3566FALSE
349.3557FALSE
349.3559FALSE
349.3557FALSE
349.3559FALSE
349.3558FALSE
349.3559FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3565FALSE
349.3558FALSE
349.3565FALSE
349.3558FALSE
349.3565FALSE
349.3557FALSE
349.3574FALSE
349.3557FALSE
349.3559FALSE
349.3557FALSE
349.3559FALSE
349.3558FALSE
349.3559FALSE
349.3558FALSE
349.3559FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3559FALSE
349.3557FALSE
349.3558FALSE
349.3558FALSE
349.3558FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3559FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3587FALSE
349.356FALSE
349.3587FALSE
349.3558FALSE
349.3587FALSE
349.3557FALSE
349.3581FALSE
349.3557FALSE
349.3593FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3558FALSE
349.3558FALSE
349.3557FALSE
349.4911FALSE
349.3557FALSE
349.4911FALSE
349.3557FALSE
349.4911FALSE
349.3558FALSE
349.4885FALSE
349.3558FALSE
349.4939FALSE
349.3557FALSE
349.3559FALSE
349.3557FALSE
349.3559FALSE
349.3557FALSE
349.3559FALSE
349.3558FALSE
349.3558FALSE
349.3558FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3558FALSE
349.3558FALSE
349.3558FALSE
349.3559FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.356FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3558FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.329014                -1.562404 

$value
[1] 349.3557

$counts
function gradient 
      62       62 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

349.356FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
349.3557FALSE
349.3557FALSE
349.3557FALSE
349.356FALSE
349.3558FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.291131                -1.562153 

$value
[1] 349.3557

$counts
function gradient 
      70       70 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1028.683    1.332  965.217 
