
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
962.7759FALSE
952.8363FALSE
690.5248FALSE
952.8179FALSE
962.7816FALSE
690.5153FALSE
952.8547FALSE
962.7702FALSE
690.5342FALSE
947.0245FALSE
981.6108FALSE
691.0317FALSE
981.5954FALSE
947.0375FALSE
691.0739FALSE
981.6261FALSE
947.0115FALSE
690.9896FALSE
945.2962FALSE
686.2296FALSE
962.3937FALSE
945.2939FALSE
686.2254FALSE
945.2985FALSE
962.4021FALSE
686.2338FALSE
945.1887FALSE
962.3851FALSE
690.3573FALSE
945.1878FALSE
690.3976FALSE
961.6602FALSE
945.1896FALSE
690.3171FALSE
961.6732FALSE
685.816FALSE
945.1573FALSE
685.8139FALSE
961.6471FALSE
945.1566FALSE
685.8181FALSE
945.158FALSE
970.8576FALSE
685.8019FALSE
970.8201FALSE
945.3382FALSE
970.895FALSE
685.8061FALSE
945.3429FALSE
960.8608FALSE
685.7977FALSE
945.3335FALSE
960.8682FALSE
685.747FALSE
945.154FALSE
960.8533FALSE
945.1542FALSE
685.7451FALSE
960.7504FALSE
945.1538FALSE
685.7489FALSE
945.1531FALSE
960.7575FALSE
685.7406FALSE
945.1532FALSE
685.7407FALSE
960.7433FALSE
685.7405FALSE
962.9458FALSE
945.1529FALSE
685.7401FALSE
962.9103FALSE
685.7403FALSE
945.1687FALSE
962.9812FALSE
685.74FALSE
960.4595FALSE
945.1679FALSE
685.7383FALSE
960.4683FALSE
945.1695FALSE
960.4511FALSE
685.7384FALSE
945.1525FALSE
945.1527FALSE
960.3652FALSE
685.7382FALSE
945.1524FALSE
960.3678FALSE
945.1608FALSE
960.3628FALSE
685.8451FALSE
945.1601FALSE
685.8424FALSE
945.1615FALSE
966.3943FALSE
685.8478FALSE
685.7382FALSE
945.1522FALSE
966.346FALSE
945.1524FALSE
685.7383FALSE
966.4425FALSE
945.1521FALSE
960.3868FALSE
685.7381FALSE
945.1686FALSE
960.3818FALSE
686.3208FALSE
960.3918FALSE
945.1679FALSE
686.3168FALSE
960.3633FALSE
686.3247FALSE
960.366FALSE
945.1694FALSE
685.738FALSE
960.3663FALSE
945.152FALSE
685.7381FALSE
960.3634FALSE
685.7379FALSE
945.1521FALSE
960.3661FALSE
685.7405FALSE
960.3661FALSE
945.1519FALSE
685.7392FALSE
960.3633FALSE
945.1617FALSE
960.366FALSE
685.7418FALSE
945.161FALSE
960.3663FALSE
685.738FALSE
945.1624FALSE
960.3633FALSE
685.7381FALSE
945.1519FALSE
960.366FALSE
685.738FALSE
960.3663FALSE
945.152FALSE
960.3633FALSE
685.7379FALSE
685.738FALSE
960.366FALSE
945.1517FALSE
960.3663FALSE
685.738FALSE
945.1576FALSE
960.3633FALSE
685.7379FALSE
960.366FALSE
945.1569FALSE
685.738FALSE
960.3663FALSE
945.1583FALSE
685.738FALSE
960.3633FALSE
945.1518FALSE
960.366FALSE
685.7379FALSE
945.1519FALSE
960.3663FALSE
945.1517FALSE
960.3633FALSE
685.738FALSE
945.1686FALSE
685.738FALSE
960.366FALSE
945.1678FALSE
685.7379FALSE
960.3663FALSE
945.1693FALSE
960.3633FALSE
685.738FALSE
960.366FALSE
945.1517FALSE
960.3663FALSE
685.738FALSE
960.3633FALSE
945.1518FALSE
960.366FALSE
685.7379FALSE
960.3663FALSE
945.152FALSE
685.738FALSE
960.3633FALSE
960.366FALSE
945.1517FALSE
685.738FALSE
960.3663FALSE
960.3633FALSE
945.1518FALSE
685.7379FALSE
960.366FALSE
960.3663FALSE
945.1517FALSE
685.738FALSE
960.3633FALSE
945.1522FALSE
960.366FALSE
685.738FALSE
945.1516FALSE
960.3663FALSE
685.7379FALSE
945.1528FALSE
960.3633FALSE
685.738FALSE
945.1517FALSE
960.366FALSE
685.738FALSE
945.1518FALSE
960.3663FALSE
685.7379FALSE
945.1518FALSE
685.738FALSE
960.3633FALSE
945.1517FALSE
960.366FALSE
945.1518FALSE
685.738FALSE
960.3663FALSE
945.1518FALSE
$par
smooth_log_cases_lag0.bw 
               -1.606366 

$value
[1] 945.1517

$counts
function gradient 
      24       24 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

685.7379FALSE
960.3633FALSE
685.738FALSE
960.366FALSE
685.738FALSE
960.3663FALSE
685.7379FALSE
685.738FALSE
960.3633FALSE
685.738FALSE
960.366FALSE
685.7379FALSE
685.738FALSE
960.3663FALSE
685.738FALSE
960.3633FALSE
685.7379FALSE
960.366FALSE
685.738FALSE
960.3663FALSE
685.738FALSE
960.3633FALSE
685.7379FALSE
685.738FALSE
960.366FALSE
685.738FALSE
960.3663FALSE
685.7379FALSE
960.3633FALSE
685.738FALSE
960.366FALSE
685.738FALSE
960.3663FALSE
685.7379FALSE
960.3633FALSE
685.738FALSE
685.738FALSE
960.366FALSE
685.7379FALSE
960.3663FALSE
962.0231FALSE
685.738FALSE
685.738FALSE
962.0342FALSE
685.7379FALSE
962.0119FALSE
685.738FALSE
960.3651FALSE
685.738FALSE
$par
time_ind_lag0.bw 
       -1.599947 

$value
[1] 685.7379

$counts
function gradient 
      33       33 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

960.3677FALSE
960.3629FALSE
960.3634FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
960.3633FALSE
960.366FALSE
960.3663FALSE
$par
smooth_log_cases_lag1.bw 
               -2.558217 

$value
[1] 960.3633

$counts
function gradient 
      52       52 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

738.2035FALSE
738.9746FALSE
738.1706FALSE
738.94FALSE
738.237FALSE
739.0091FALSE
738.2021FALSE
738.9843FALSE
738.9648FALSE
738.2054FALSE
699.2202FALSE
699.7184FALSE
699.1987FALSE
699.699FALSE
699.2417FALSE
699.7378FALSE
699.2133FALSE
699.2271FALSE
699.7311FALSE
688.3274FALSE
699.7057FALSE
688.3259FALSE
693.3457FALSE
693.3452FALSE
688.3288FALSE
693.3463FALSE
688.3513FALSE
693.3374FALSE
688.3035FALSE
693.3541FALSE
687.0637FALSE
690.8122FALSE
687.0631FALSE
690.8116FALSE
687.0643FALSE
687.0561FALSE
690.8128FALSE
687.0713FALSE
690.8026FALSE
686.5237FALSE
690.8218FALSE
686.523FALSE
696.8125FALSE
686.5243FALSE
696.8106FALSE
686.5194FALSE
686.5279FALSE
696.8144FALSE
686.0432FALSE
696.8776FALSE
686.0426FALSE
686.0437FALSE
696.7476FALSE
686.0417FALSE
686.9139FALSE
686.0449FALSE
686.9132FALSE
686.1787FALSE
686.9147FALSE
686.1782FALSE
686.1792FALSE
686.9082FALSE
686.1861FALSE
686.9197FALSE
686.1713FALSE
904.1265FALSE
686.0128FALSE
904.1303FALSE
686.0123FALSE
904.1226FALSE
686.0133FALSE
904.306FALSE
686.0133FALSE
903.9466FALSE
686.0123FALSE
686.8211FALSE
685.9743FALSE
686.8204FALSE
685.9738FALSE
686.8219FALSE
685.9748FALSE
686.8159FALSE
685.9748FALSE
686.8264FALSE
686.1963FALSE
685.9738FALSE
685.8385FALSE
686.1954FALSE
685.8383FALSE
686.1972FALSE
685.8387FALSE
686.1955FALSE
685.839FALSE
686.1971FALSE
686.1476FALSE
685.838FALSE
686.1468FALSE
685.7945FALSE
686.1484FALSE
685.7944FALSE
686.1487FALSE
685.7946FALSE
685.795FALSE
686.1465FALSE
685.7941FALSE
685.9692FALSE
685.762FALSE
685.9687FALSE
685.762FALSE
685.9696FALSE
685.7621FALSE
685.9697FALSE
685.7621FALSE
685.9687FALSE
685.7619FALSE
685.8525FALSE
685.7507FALSE
685.8523FALSE
685.7507FALSE
685.7507FALSE
685.8527FALSE
685.7507FALSE
685.853FALSE
685.7519FALSE
685.8521FALSE
685.7458FALSE
685.7961FALSE
685.7458FALSE
685.796FALSE
685.7458FALSE
685.7962FALSE
685.7459FALSE
685.7966FALSE
685.7457FALSE
685.7957FALSE
685.7421FALSE
685.7641FALSE
685.7421FALSE
685.764FALSE
685.7421FALSE
685.7641FALSE
685.7422FALSE
685.7642FALSE
685.742FALSE
685.7639FALSE
685.7399FALSE
685.7518FALSE
685.7399FALSE
685.7399FALSE
685.7518FALSE
685.74FALSE
685.7518FALSE
685.7398FALSE
685.7519FALSE
685.7392FALSE
685.7517FALSE
685.7392FALSE
694.7099FALSE
685.7392FALSE
694.7099FALSE
685.7387FALSE
694.7099FALSE
685.7405FALSE
694.7037FALSE
685.7393FALSE
694.7161FALSE
685.7393FALSE
685.7521FALSE
685.7393FALSE
685.7521FALSE
685.7394FALSE
685.7522FALSE
685.7392FALSE
685.7514FALSE
685.7475FALSE
685.7534FALSE
685.7475FALSE
685.7516FALSE
685.7475FALSE
685.7515FALSE
685.7456FALSE
685.7516FALSE
685.7495FALSE
685.7517FALSE
685.7391FALSE
685.7515FALSE
685.7391FALSE
685.7514FALSE
685.7391FALSE
685.7514FALSE
685.7392FALSE
685.7514FALSE
685.7391FALSE
685.7515FALSE
685.7389FALSE
685.7523FALSE
685.7389FALSE
685.7515FALSE
685.7389FALSE
685.7515FALSE
685.7386FALSE
685.7516FALSE
685.7401FALSE
685.7516FALSE
685.7389FALSE
685.7514FALSE
685.7389FALSE
685.7514FALSE
685.7389FALSE
685.7514FALSE
685.7389FALSE
685.7514FALSE
685.739FALSE
685.7515FALSE
685.7385FALSE
685.752FALSE
685.7385FALSE
685.7385FALSE
685.7514FALSE
685.7385FALSE
685.7391FALSE
685.7514FALSE
685.7381FALSE
685.7514FALSE
685.7381FALSE
685.7515FALSE
685.7381FALSE
685.7523FALSE
685.7382FALSE
685.7447FALSE
685.7381FALSE
685.7447FALSE
685.7381FALSE
685.7447FALSE
685.7381FALSE
685.7448FALSE
685.7381FALSE
685.7446FALSE
685.7382FALSE
685.7413FALSE
685.7381FALSE
685.7413FALSE
685.738FALSE
685.7413FALSE
685.738FALSE
685.7414FALSE
685.738FALSE
685.7412FALSE
685.7381FALSE
685.7395FALSE
685.738FALSE
685.7395FALSE
685.738FALSE
685.7395FALSE
685.738FALSE
685.7396FALSE
685.738FALSE
685.7399FALSE
685.738FALSE
685.738FALSE
685.7388FALSE
685.738FALSE
685.7388FALSE
685.738FALSE
685.7388FALSE
685.738FALSE
685.7389FALSE
685.738FALSE
685.7389FALSE
685.738FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                6.098413                -1.599979 

$value
[1] 685.738

$counts
function gradient 
      28       28 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

685.7383FALSE
685.7383FALSE
685.7383FALSE
685.7384FALSE
685.7384FALSE
685.7382FALSE
685.7382FALSE
685.7382FALSE
685.7383FALSE
685.7381FALSE
685.7381FALSE
685.7381FALSE
685.7381FALSE
685.7382FALSE
685.7381FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.7381FALSE
685.7381FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
685.7379FALSE
685.7379FALSE
685.7379FALSE
685.738FALSE
685.738FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.324623                -1.599942 

$value
[1] 685.7379

$counts
function gradient 
      50       50 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1105.666    0.933 1146.660 
