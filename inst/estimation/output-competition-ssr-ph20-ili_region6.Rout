
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
884.5999FALSE
708.1688FALSE
904.3087FALSE
884.6179FALSE
904.3235FALSE
708.1578FALSE
884.5818FALSE
904.2939FALSE
708.1799FALSE
883.8873FALSE
905.4457FALSE
708.2929FALSE
905.432FALSE
883.8732FALSE
708.3373FALSE
905.4594FALSE
883.9013FALSE
708.2491FALSE
900.7885FALSE
879.0714FALSE
702.9647FALSE
900.7896FALSE
879.0675FALSE
702.9599FALSE
900.7874FALSE
879.0754FALSE
702.9695FALSE
900.7633FALSE
879.745FALSE
707.7119FALSE
900.7637FALSE
879.7532FALSE
707.7527FALSE
900.7629FALSE
879.7368FALSE
900.759FALSE
707.6712FALSE
879.028FALSE
702.6075FALSE
900.759FALSE
879.0279FALSE
900.759FALSE
879.0281FALSE
702.6061FALSE
879.0279FALSE
900.759FALSE
702.6089FALSE
879.0278FALSE
702.5668FALSE
900.759FALSE
879.028FALSE
900.759FALSE
702.5668FALSE
879.0278FALSE
702.5668FALSE
900.759FALSE
879.0278FALSE
900.759FALSE
879.0278FALSE
702.5668FALSE
900.759FALSE
$par
smooth_log_cases_lag0.bw 
               -2.789792 

$value
[1] 900.759

$counts
function gradient 
       7        7 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

879.0278FALSE
702.5668FALSE
879.0278FALSE
879.0278FALSE
$par
smooth_log_cases_lag1.bw 
               -2.829864 

$value
[1] 879.0278

$counts
function gradient 
       8        8 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

702.5668FALSE
702.5668FALSE
702.5668FALSE
702.5667FALSE
702.5722FALSE
702.571FALSE
702.5734FALSE
702.5668FALSE
702.5668FALSE
702.5667FALSE
702.5668FALSE
702.5668FALSE
702.5667FALSE
702.5668FALSE
702.5667FALSE
702.568FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5668FALSE
702.5668FALSE
702.5668FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5669FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
703.6187FALSE
703.6359FALSE
703.6017FALSE
702.5667FALSE
702.5668FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5667FALSE
702.5668FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
702.5667FALSE
702.5667FALSE
702.567FALSE
$par
time_ind_lag0.bw 
       -1.616754 

$value
[1] 702.5667

$counts
function gradient 
      57       57 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

746.312FALSE
749.8815FALSE
746.2664FALSE
749.8376FALSE
746.3577FALSE
749.9255FALSE
746.3466FALSE
749.9147FALSE
746.2775FALSE
749.8484FALSE
717.847FALSE
719.8268FALSE
717.8224FALSE
719.8016FALSE
717.8714FALSE
719.8518FALSE
717.8418FALSE
719.8197FALSE
717.852FALSE
719.8338FALSE
707.6375FALSE
708.306FALSE
707.6408FALSE
708.3072FALSE
707.6342FALSE
708.3047FALSE
707.6255FALSE
708.2941FALSE
707.6495FALSE
708.3179FALSE
705.536FALSE
706.5488FALSE
705.537FALSE
706.5502FALSE
705.535FALSE
706.5472FALSE
705.5273FALSE
706.542FALSE
705.5447FALSE
706.5555FALSE
705.4937FALSE
705.1272FALSE
705.4886FALSE
705.126FALSE
705.4987FALSE
705.1282FALSE
705.5108FALSE
705.1272FALSE
705.4766FALSE
704.3776FALSE
705.1271FALSE
704.3798FALSE
705.0724FALSE
704.3753FALSE
705.0705FALSE
704.3732FALSE
705.0743FALSE
704.382FALSE
705.0726FALSE
704.5605FALSE
705.0722FALSE
705.3027FALSE
704.5489FALSE
705.3036FALSE
704.5721FALSE
704.5703FALSE
705.3018FALSE
704.5508FALSE
705.3013FALSE
704.0499FALSE
705.3041FALSE
704.0466FALSE
705.0731FALSE
704.0532FALSE
705.0764FALSE
704.0512FALSE
705.0699FALSE
704.0486FALSE
705.0704FALSE
705.0759FALSE
704.059FALSE
705.0556FALSE
704.0613FALSE
705.054FALSE
704.0568FALSE
704.0577FALSE
705.0572FALSE
704.0604FALSE
705.055FALSE
703.9865FALSE
705.0562FALSE
703.9897FALSE
703.99FALSE
705.0634FALSE
703.9875FALSE
705.0667FALSE
703.9881FALSE
705.06FALSE
703.9915FALSE
705.0607FALSE
703.9945FALSE
705.0661FALSE
703.9885FALSE
705.0532FALSE
703.9908FALSE
705.0523FALSE
703.9922FALSE
705.0548FALSE
703.987FALSE
705.0526FALSE
703.9901FALSE
705.0538FALSE
703.9884FALSE
705.0532FALSE
703.9859FALSE
705.0523FALSE
703.9886FALSE
705.0548FALSE
703.9865FALSE
705.0526FALSE
703.9897FALSE
705.0538FALSE
703.9898FALSE
705.1183FALSE
703.9874FALSE
705.1207FALSE
703.9882FALSE
705.1158FALSE
703.9865FALSE
705.1169FALSE
703.9897FALSE
705.1197FALSE
703.99FALSE
705.0587FALSE
703.9875FALSE
705.0618FALSE
703.9881FALSE
705.0556FALSE
703.9865FALSE
705.0562FALSE
703.9897FALSE
705.0612FALSE
703.99FALSE
705.051FALSE
703.9875FALSE
703.9881FALSE
705.0542FALSE
703.9865FALSE
705.0518FALSE
703.9897FALSE
705.0498FALSE
703.99FALSE
705.0537FALSE
703.9875FALSE
705.4315FALSE
703.9881FALSE
705.4323FALSE
703.9865FALSE
705.4307FALSE
703.9897FALSE
705.4363FALSE
703.99FALSE
703.9875FALSE
705.4267FALSE
703.9881FALSE
705.0491FALSE
703.9865FALSE
705.0518FALSE
703.9897FALSE
705.0463FALSE
703.99FALSE
705.0487FALSE
703.9875FALSE
705.0495FALSE
703.9881FALSE
705.0423FALSE
703.9865FALSE
705.0449FALSE
703.9897FALSE
705.0429FALSE
703.99FALSE
705.0413FALSE
703.9875FALSE
705.044FALSE
703.9881FALSE
705.0402FALSE
703.9865FALSE
705.043FALSE
703.9897FALSE
705.0416FALSE
703.99FALSE
705.0406FALSE
703.9875FALSE
705.0418FALSE
703.9881FALSE
705.0414FALSE
703.9865FALSE
705.0434FALSE
703.9897FALSE
705.0432FALSE
703.99FALSE
705.0432FALSE
703.9875FALSE
705.041FALSE
703.9881FALSE
705.04FALSE
703.9865FALSE
705.0429FALSE
703.9897FALSE
705.0415FALSE
703.99FALSE
705.041FALSE
703.9875FALSE
705.0415FALSE
703.9881FALSE
705.0404FALSE
703.9865FALSE
705.0415FALSE
703.9897FALSE
705.0425FALSE
703.99FALSE
705.0418FALSE
703.9875FALSE
705.0403FALSE
703.9881FALSE
705.0398FALSE
703.9865FALSE
705.0428FALSE
703.9897FALSE
705.0416FALSE
703.99FALSE
705.0411FALSE
703.9875FALSE
705.0414FALSE
703.9881FALSE
705.0404FALSE
703.9865FALSE
705.0417FALSE
703.9897FALSE
703.99FALSE
705.0425FALSE
703.9875FALSE
705.0414FALSE
703.9881FALSE
705.0407FALSE
703.9865FALSE
705.0398FALSE
703.9897FALSE
705.0427FALSE
703.99FALSE
705.0417FALSE
703.9875FALSE
705.0411FALSE
703.9881FALSE
705.0414FALSE
703.9865FALSE
705.0398FALSE
703.9897FALSE
705.0427FALSE
703.99FALSE
705.0417FALSE
703.9875FALSE
705.0411FALSE
703.9881FALSE
705.0414FALSE
703.9865FALSE
705.04FALSE
703.9897FALSE
705.0422FALSE
703.99FALSE
705.0421FALSE
703.9875FALSE
705.0413FALSE
703.9881FALSE
705.041FALSE
703.9865FALSE
705.0398FALSE
703.9897FALSE
705.0427FALSE
703.99FALSE
705.0417FALSE
703.9875FALSE
703.9881FALSE
705.0411FALSE
705.0414FALSE
703.9865FALSE
705.0402FALSE
703.9897FALSE
705.0419FALSE
703.99FALSE
705.0423FALSE
703.9875FALSE
705.0412FALSE
703.9881FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
              -0.7095576               -1.7329860 

$value
[1] 703.9865

$counts
function gradient 
      30       30 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

705.0409FALSE
705.0397FALSE
705.0426FALSE
705.0417FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0426FALSE
705.0417FALSE
705.0411FALSE
705.0413FALSE
705.0399FALSE
705.0423FALSE
705.042FALSE
705.0412FALSE
705.0411FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0398FALSE
705.0424FALSE
705.0419FALSE
705.0412FALSE
705.0412FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0401FALSE
705.042FALSE
705.0422FALSE
705.0412FALSE
705.041FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0399FALSE
705.0423FALSE
705.042FALSE
705.0411FALSE
705.0412FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0398FALSE
705.0424FALSE
705.0419FALSE
705.0411FALSE
705.0412FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0426FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0401FALSE
705.0421FALSE
705.0422FALSE
705.0411FALSE
705.0411FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
708.8601FALSE
708.8378FALSE
708.8823FALSE
708.8763FALSE
708.8438FALSE
705.0556FALSE
705.0535FALSE
705.0576FALSE
705.0569FALSE
705.0543FALSE
705.0402FALSE
705.0418FALSE
705.0423FALSE
705.0416FALSE
705.0406FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
705.0397FALSE
705.0425FALSE
705.0418FALSE
705.0411FALSE
705.0413FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
               -0.575400                -1.703172 

$value
[1] 705.0397

$counts
function gradient 
      84       84 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
 863.888    0.620 1441.705 
