
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
954.6173FALSE
927.3662FALSE
714.9727FALSE
954.6322FALSE
927.3863FALSE
714.9623FALSE
954.6024FALSE
927.3461FALSE
714.983FALSE
949.1588FALSE
921.4193FALSE
714.0288FALSE
949.1583FALSE
921.4122FALSE
714.0687FALSE
921.4264FALSE
949.1592FALSE
713.9893FALSE
919.9542FALSE
949.168FALSE
919.9517FALSE
949.1685FALSE
712.5876FALSE
919.9568FALSE
949.1675FALSE
712.576FALSE
920.1463FALSE
949.157FALSE
712.5992FALSE
920.1504FALSE
949.1575FALSE
708.7289FALSE
920.1422FALSE
949.1566FALSE
919.8967FALSE
708.728FALSE
949.1572FALSE
919.8962FALSE
949.1567FALSE
708.73FALSE
919.8971FALSE
949.1576FALSE
919.8931FALSE
708.8157FALSE
949.1565FALSE
919.8928FALSE
708.8195FALSE
919.8935FALSE
949.1569FALSE
708.8119FALSE
919.94FALSE
949.1569FALSE
919.9424FALSE
708.7148FALSE
949.1564FALSE
919.9375FALSE
708.714FALSE
949.1569FALSE
919.8925FALSE
708.7156FALSE
919.8922FALSE
949.1569FALSE
708.8428FALSE
919.8928FALSE
949.1565FALSE
708.8466FALSE
949.1569FALSE
919.9173FALSE
708.839FALSE
919.9196FALSE
949.1569FALSE
919.915FALSE
708.7096FALSE
949.1564FALSE
919.8921FALSE
708.7088FALSE
949.1569FALSE
949.1569FALSE
919.8918FALSE
708.7104FALSE
949.1564FALSE
919.8924FALSE
949.1569FALSE
708.7058FALSE
919.9381FALSE
708.705FALSE
919.9405FALSE
949.1569FALSE
708.7066FALSE
919.9357FALSE
949.1564FALSE
708.747FALSE
919.8917FALSE
949.1569FALSE
708.7508FALSE
919.8914FALSE
949.1569FALSE
708.7433FALSE
919.892FALSE
708.7026FALSE
949.1564FALSE
919.9181FALSE
708.7018FALSE
949.1569FALSE
919.9204FALSE
708.7034FALSE
949.1569FALSE
919.9159FALSE
708.7009FALSE
949.1564FALSE
708.7007FALSE
949.1569FALSE
919.8915FALSE
708.7016FALSE
949.1569FALSE
919.8912FALSE
708.7458FALSE
949.1564FALSE
708.7495FALSE
919.8918FALSE
949.1569FALSE
708.7421FALSE
949.1569FALSE
919.9062FALSE
708.7007FALSE
949.1564FALSE
708.7006FALSE
919.9084FALSE
949.1569FALSE
708.7009FALSE
919.904FALSE
949.1569FALSE
708.7007FALSE
949.1564FALSE
919.8913FALSE
708.7005FALSE
949.1569FALSE
919.891FALSE
708.7008FALSE
949.1569FALSE
919.8916FALSE
708.7004FALSE
949.1564FALSE
708.7015FALSE
919.9373FALSE
949.1569FALSE
708.7006FALSE
919.9397FALSE
949.1569FALSE
708.7006FALSE
949.1564FALSE
919.9349FALSE
949.1569FALSE
708.7005FALSE
919.8911FALSE
949.1569FALSE
708.7008FALSE
919.8908FALSE
949.1564FALSE
708.7005FALSE
919.8913FALSE
708.701FALSE
949.1569FALSE
919.9194FALSE
949.1569FALSE
708.7006FALSE
949.1564FALSE
919.9217FALSE
708.7004FALSE
949.1569FALSE
919.9171FALSE
708.7014FALSE
949.1569FALSE
919.8909FALSE
708.7006FALSE
949.1564FALSE
919.8907FALSE
708.7004FALSE
919.8912FALSE
949.1569FALSE
708.7015FALSE
919.9084FALSE
708.7006FALSE
949.1569FALSE
919.9107FALSE
708.7007FALSE
949.1564FALSE
919.9062FALSE
708.7005FALSE
949.1569FALSE
919.8908FALSE
708.7008FALSE
949.1569FALSE
919.891FALSE
919.8911FALSE
708.7005FALSE
949.1564FALSE
919.8908FALSE
708.7009FALSE
949.1569FALSE
919.8915FALSE
708.7006FALSE
949.1569FALSE
919.8911FALSE
708.7004FALSE
949.1564FALSE
919.8908FALSE
708.7014FALSE
949.1569FALSE
919.8911FALSE
708.7006FALSE
919.8911FALSE
949.1569FALSE
708.7004FALSE
919.8908FALSE
949.1564FALSE
708.7015FALSE
919.8911FALSE
949.1569FALSE
708.7006FALSE
919.8911FALSE
$par
smooth_log_cases_lag1.bw 
               -2.985035 

$value
[1] 919.8908

$counts
function gradient 
      25       25 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

708.7004FALSE
949.1569FALSE
708.7015FALSE
949.1564FALSE
708.7006FALSE
949.1569FALSE
708.7004FALSE
949.1569FALSE
708.7015FALSE
949.1564FALSE
949.1569FALSE
708.7006FALSE
949.1569FALSE
708.7004FALSE
949.1609FALSE
708.7015FALSE
949.1614FALSE
708.7006FALSE
949.1605FALSE
708.7004FALSE
949.1565FALSE
708.7015FALSE
949.1569FALSE
708.7006FALSE
949.1569FALSE
708.7004FALSE
949.1564FALSE
708.7015FALSE
949.1569FALSE
708.7006FALSE
949.1569FALSE
708.7004FALSE
949.1564FALSE
708.7015FALSE
949.1569FALSE
708.7006FALSE
949.1569FALSE
708.7004FALSE
949.1564FALSE
708.7015FALSE
949.1569FALSE
708.7006FALSE
949.1569FALSE
708.7004FALSE
949.1564FALSE
708.7015FALSE
949.1569FALSE
708.7006FALSE
708.7004FALSE
949.1569FALSE
708.7015FALSE
949.1564FALSE
708.7006FALSE
949.1569FALSE
708.7004FALSE
949.1569FALSE
949.1564FALSE
708.7015FALSE
949.1569FALSE
708.7006FALSE
949.1569FALSE
708.7004FALSE
708.7015FALSE
949.1564FALSE
949.1569FALSE
708.7006FALSE
949.1569FALSE
708.7004FALSE
949.1564FALSE
708.7015FALSE
949.1569FALSE
708.7006FALSE
949.1569FALSE
708.7004FALSE
949.1564FALSE
708.7015FALSE
949.1569FALSE
708.7006FALSE
$par
time_ind_lag0.bw 
        -1.60054 

$value
[1] 708.7004

$counts
function gradient 
      37       37 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

949.1569FALSE
949.1564FALSE
949.1569FALSE
949.1569FALSE
949.1564FALSE
949.1569FALSE
949.1569FALSE
949.1564FALSE
949.1569FALSE
949.1569FALSE
949.1564FALSE
949.1569FALSE
949.1569FALSE
949.1564FALSE
949.1569FALSE
949.1569FALSE
949.1564FALSE
949.1569FALSE
949.1569FALSE
949.1564FALSE
949.1569FALSE
949.1569FALSE
949.1564FALSE
949.1569FALSE
949.1569FALSE
949.1564FALSE
949.1569FALSE
949.1569FALSE
$par
smooth_log_cases_lag0.bw 
               -3.297658 

$value
[1] 949.1564

$counts
function gradient 
      47       47 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

747.1012FALSE
748.7479FALSE
747.0693FALSE
748.7123FALSE
747.133FALSE
748.7835FALSE
747.129FALSE
748.7808FALSE
747.0734FALSE
748.7151FALSE
726.0011FALSE
728.2597FALSE
725.9662FALSE
728.2288FALSE
728.2905FALSE
726.0358FALSE
728.2511FALSE
725.9927FALSE
728.2682FALSE
726.0093FALSE
718.4926FALSE
721.1323FALSE
718.4902FALSE
721.1318FALSE
721.1327FALSE
718.4951FALSE
721.124FALSE
718.4827FALSE
721.1405FALSE
718.5025FALSE
719.5574FALSE
716.7316FALSE
719.5567FALSE
716.7295FALSE
719.558FALSE
719.5503FALSE
716.7337FALSE
719.5644FALSE
716.7203FALSE
710.3961FALSE
716.7428FALSE
710.3945FALSE
710.5799FALSE
710.3978FALSE
710.5779FALSE
710.3895FALSE
710.4027FALSE
710.5819FALSE
949.6729FALSE
710.5741FALSE
949.6756FALSE
710.5858FALSE
949.6702FALSE
858.9818FALSE
949.6729FALSE
858.9889FALSE
949.6729FALSE
858.9747FALSE
709.8425FALSE
859.2329FALSE
709.8411FALSE
858.7304FALSE
709.8439FALSE
710.3936FALSE
709.8385FALSE
710.3916FALSE
709.8466FALSE
710.3957FALSE
710.2178FALSE
710.3887FALSE
710.2174FALSE
710.3986FALSE
710.2183FALSE
709.9086FALSE
710.2282FALSE
709.9074FALSE
710.2075FALSE
709.9097FALSE
709.7307FALSE
709.9174FALSE
709.7295FALSE
709.8998FALSE
709.7318FALSE
709.8888FALSE
709.7305FALSE
709.7309FALSE
709.8869FALSE
709.6455FALSE
709.8908FALSE
709.6442FALSE
709.8865FALSE
709.6468FALSE
709.8912FALSE
709.6451FALSE
710.1642FALSE
709.6462FALSE
710.1635FALSE
709.2897FALSE
710.165FALSE
709.2884FALSE
710.1776FALSE
709.2911FALSE
710.1509FALSE
709.2875FALSE
709.6436FALSE
709.292FALSE
709.6418FALSE
708.8771FALSE
708.8769FALSE
709.6455FALSE
708.8773FALSE
709.6448FALSE
708.8726FALSE
709.6424FALSE
708.8816FALSE
709.5334FALSE
708.7621FALSE
709.5326FALSE
708.762FALSE
709.5342FALSE
708.7622FALSE
709.5403FALSE
708.7619FALSE
709.5265FALSE
708.7624FALSE
709.167FALSE
708.7441FALSE
709.1663FALSE
708.744FALSE
709.1677FALSE
708.7441FALSE
709.1693FALSE
708.7439FALSE
709.1647FALSE
708.7442FALSE
708.9207FALSE
708.7184FALSE
708.9203FALSE
708.7183FALSE
708.9211FALSE
708.7184FALSE
708.9206FALSE
708.7182FALSE
708.9208FALSE
708.7185FALSE
708.8334FALSE
708.715FALSE
708.8332FALSE
708.7149FALSE
708.8336FALSE
708.715FALSE
708.8326FALSE
708.7168FALSE
708.8342FALSE
708.7135FALSE
708.8058FALSE
708.704FALSE
708.8057FALSE
708.704FALSE
708.806FALSE
708.704FALSE
708.8044FALSE
708.7039FALSE
708.8081FALSE
708.7047FALSE
708.7773FALSE
708.7032FALSE
708.7772FALSE
708.7032FALSE
708.7774FALSE
708.7032FALSE
708.7762FALSE
708.7031FALSE
708.7784FALSE
708.7035FALSE
708.754FALSE
708.7017FALSE
708.754FALSE
708.7017FALSE
708.7541FALSE
708.7017FALSE
708.7529FALSE
708.7016FALSE
708.7551FALSE
708.7018FALSE
919.9472FALSE
708.7012FALSE
919.9473FALSE
708.7012FALSE
919.9472FALSE
708.7012FALSE
920.1325FALSE
708.701FALSE
919.7617FALSE
708.7013FALSE
708.7509FALSE
708.7015FALSE
708.7509FALSE
708.7015FALSE
708.751FALSE
708.7015FALSE
708.7502FALSE
708.7029FALSE
708.7519FALSE
708.7007FALSE
708.7306FALSE
708.7009FALSE
708.7306FALSE
708.7009FALSE
708.7306FALSE
708.7009FALSE
708.7298FALSE
708.701FALSE
708.7314FALSE
708.701FALSE
708.7082FALSE
708.7006FALSE
708.7082FALSE
708.7006FALSE
708.7083FALSE
708.7006FALSE
708.7097FALSE
708.7017FALSE
708.7068FALSE
708.7008FALSE
708.7144FALSE
708.7007FALSE
708.7144FALSE
708.7007FALSE
708.7145FALSE
708.7007FALSE
708.7136FALSE
708.7013FALSE
708.7153FALSE
708.7009FALSE
709.3935FALSE
708.7007FALSE
709.3935FALSE
708.7007FALSE
709.3935FALSE
708.7007FALSE
709.4058FALSE
708.701FALSE
708.7008FALSE
709.3813FALSE
708.7006FALSE
708.7055FALSE
708.7006FALSE
708.7055FALSE
708.7006FALSE
708.7055FALSE
708.7007FALSE
708.7054FALSE
708.7007FALSE
708.7057FALSE
708.7006FALSE
708.7048FALSE
708.7006FALSE
708.7048FALSE
708.7006FALSE
708.7048FALSE
708.7007FALSE
708.7063FALSE
708.7007FALSE
708.7042FALSE
708.7005FALSE
708.7005FALSE
708.705FALSE
708.7005FALSE
708.705FALSE
708.7007FALSE
708.7007FALSE
708.705FALSE
708.7005FALSE
708.7049FALSE
708.7005FALSE
708.7051FALSE
708.7005FALSE
708.7044FALSE
708.7007FALSE
708.7044FALSE
708.7007FALSE
708.7006FALSE
708.7044FALSE
708.7006FALSE
708.7052FALSE
708.7006FALSE
708.7045FALSE
708.7005FALSE
708.704FALSE
708.7007FALSE
708.704FALSE
708.7005FALSE
708.704FALSE
708.7005FALSE
708.7005FALSE
708.7038FALSE
708.7006FALSE
708.7041FALSE
708.7007FALSE
708.7019FALSE
708.7005FALSE
708.7019FALSE
708.7005FALSE
708.7019FALSE
708.7005FALSE
708.7022FALSE
708.7007FALSE
708.702FALSE
708.7007FALSE
708.7005FALSE
708.7013FALSE
708.7005FALSE
708.7013FALSE
708.7005FALSE
708.7013FALSE
708.7007FALSE
708.7013FALSE
708.7007FALSE
708.7014FALSE
708.7005FALSE
708.7009FALSE
708.7005FALSE
708.7009FALSE
708.7005FALSE
708.7007FALSE
708.7009FALSE
708.7007FALSE
708.701FALSE
708.7005FALSE
708.701FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7007FALSE
708.7007FALSE
708.7007FALSE
708.7007FALSE
708.7008FALSE
708.7005FALSE
708.7008FALSE
708.7005FALSE
708.7005FALSE
708.7006FALSE
708.7007FALSE
708.7006FALSE
708.7007FALSE
708.7006FALSE
708.7005FALSE
708.7009FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7007FALSE
708.7006FALSE
708.7007FALSE
708.7006FALSE
708.7005FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7007FALSE
708.7007FALSE
708.7007FALSE
708.7006FALSE
708.7005FALSE
708.7006FALSE
708.7005FALSE
708.7006FALSE
708.7005FALSE
708.7006FALSE
708.7007FALSE
708.7007FALSE
708.7007FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7007FALSE
708.7006FALSE
708.7007FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7009FALSE
708.7005FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7007FALSE
708.7007FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7008FALSE
708.7005FALSE
708.7006FALSE
708.7007FALSE
708.7007FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7009FALSE
708.7007FALSE
708.7006FALSE
708.7007FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7009FALSE
708.7007FALSE
708.7007FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7007FALSE
708.7009FALSE
708.7007FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7007FALSE
708.7009FALSE
708.7007FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7007FALSE
708.7009FALSE
708.7004FALSE
708.7006FALSE
708.7004FALSE
708.7005FALSE
708.7004FALSE
708.7005FALSE
708.7015FALSE
708.7005FALSE
708.7006FALSE
708.7009FALSE
708.7005FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7007FALSE
708.7005FALSE
708.7007FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.825671                -1.601127 

$value
[1] 708.7005

$counts
function gradient 
      51       51 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

708.7005FALSE
708.7009FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7009FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7009FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7009FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7009FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7009FALSE
708.7006FALSE
708.7005FALSE
708.7005FALSE
708.7005FALSE
708.7009FALSE
708.7006FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                5.844812                -1.600987 

$value
[1] 708.7005

$counts
function gradient 
      53       53 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1441.477    1.184 1109.000 
