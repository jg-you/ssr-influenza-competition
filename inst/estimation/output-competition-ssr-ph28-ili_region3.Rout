
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
452.9699FALSE
556.8365FALSE
560.795FALSE
452.9655FALSE
560.7839FALSE
452.9742FALSE
556.8272FALSE
560.806FALSE
451.8188FALSE
563.9122FALSE
556.8458FALSE
451.8338FALSE
563.9317FALSE
451.8039FALSE
563.8926FALSE
561.2539FALSE
452.0069FALSE
561.2721FALSE
558.5242FALSE
452.0027FALSE
561.2358FALSE
452.0111FALSE
558.5253FALSE
554.7898FALSE
450.0894FALSE
558.5232FALSE
450.0886FALSE
554.7888FALSE
558.5094FALSE
450.0902FALSE
554.7909FALSE
450.3368FALSE
558.5087FALSE
554.7856FALSE
450.3439FALSE
558.5101FALSE
554.7864FALSE
450.3297FALSE
558.5063FALSE
450.0672FALSE
554.7848FALSE
558.5067FALSE
450.067FALSE
554.7747FALSE
558.506FALSE
450.0674FALSE
554.7746FALSE
558.5046FALSE
450.0683FALSE
554.7749FALSE
450.0686FALSE
558.5049FALSE
554.7745FALSE
450.068FALSE
558.5046FALSE
554.7746FALSE
450.0661FALSE
558.5055FALSE
450.066FALSE
558.5049FALSE
554.7746FALSE
450.0663FALSE
558.5062FALSE
554.7745FALSE
558.5045FALSE
450.0684FALSE
554.7747FALSE
450.0687FALSE
558.5047FALSE
554.7746FALSE
450.0681FALSE
554.7745FALSE
558.5047FALSE
450.0661FALSE
558.5045FALSE
554.7746FALSE
450.0663FALSE
558.5047FALSE
450.066FALSE
554.7746FALSE
558.5047FALSE
450.066FALSE
554.7745FALSE
558.5045FALSE
450.0661FALSE
554.7746FALSE
558.5047FALSE
450.0661FALSE
554.7746FALSE
558.5047FALSE
$par
smooth_log_cases_lag1.bw 
               -1.926874 

$value
[1] 558.5045

$counts
function gradient 
      10       10 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

450.066FALSE
554.7745FALSE
450.0661FALSE
554.7746FALSE
450.0661FALSE
$par
time_ind_lag0.bw 
       -1.539114 

$value
[1] 450.066

$counts
function gradient 
      12       12 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
554.7745FALSE
554.7746FALSE
554.7746FALSE
$par
smooth_log_cases_lag0.bw 
               -1.936801 

$value
[1] 554.7745

$counts
function gradient 
      49       49 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

463.2116FALSE
467.6208FALSE
463.2033FALSE
467.6058FALSE
463.2198FALSE
467.6358FALSE
463.2275FALSE
467.6353FALSE
463.1957FALSE
467.6064FALSE
462.759FALSE
458.9597FALSE
462.7378FALSE
458.938FALSE
462.78FALSE
458.9814FALSE
462.7457FALSE
458.9536FALSE
462.7723FALSE
458.9657FALSE
454.4947FALSE
454.4863FALSE
458.2897FALSE
454.5031FALSE
458.2898FALSE
454.4902FALSE
458.2897FALSE
454.4992FALSE
458.2833FALSE
454.2186FALSE
458.2961FALSE
454.2188FALSE
455.6935FALSE
454.2184FALSE
455.6936FALSE
454.216FALSE
455.6934FALSE
454.2211FALSE
455.6887FALSE
453.9161FALSE
455.6983FALSE
453.9162FALSE
450.8564FALSE
453.916FALSE
453.9133FALSE
450.8569FALSE
453.9189FALSE
450.8559FALSE
452.5543FALSE
450.8556FALSE
450.8572FALSE
452.5491FALSE
457.1423FALSE
452.5595FALSE
452.5482FALSE
457.1334FALSE
452.5604FALSE
457.1513FALSE
569.0553FALSE
457.1717FALSE
569.0449FALSE
457.1129FALSE
569.0657FALSE
450.8068FALSE
569.0567FALSE
450.8072FALSE
450.8064FALSE
569.0539FALSE
450.8066FALSE
452.4307FALSE
450.807FALSE
452.4244FALSE
450.807FALSE
452.437FALSE
450.8072FALSE
452.4249FALSE
450.8067FALSE
452.4365FALSE
450.8082FALSE
451.6841FALSE
450.8057FALSE
451.6793FALSE
450.7953FALSE
451.689FALSE
450.7955FALSE
451.6795FALSE
450.795FALSE
451.6888FALSE
450.7955FALSE
458.053FALSE
450.7951FALSE
458.0428FALSE
450.7877FALSE
458.0632FALSE
450.7872FALSE
458.0819FALSE
450.7881FALSE
458.0242FALSE
450.7874FALSE
451.3115FALSE
450.788FALSE
451.3058FALSE
450.7922FALSE
451.3172FALSE
450.7925FALSE
451.3101FALSE
450.7919FALSE
451.3129FALSE
450.7925FALSE
450.779FALSE
450.7919FALSE
450.7753FALSE
450.7869FALSE
450.7828FALSE
450.7872FALSE
450.7776FALSE
450.7865FALSE
450.7804FALSE
450.7872FALSE
451.0426FALSE
450.7865FALSE
451.0423FALSE
450.7868FALSE
451.0429FALSE
450.7866FALSE
451.0477FALSE
450.7872FALSE
451.0375FALSE
450.7865FALSE
450.6386FALSE
450.7871FALSE
450.6385FALSE
450.7868FALSE
450.6387FALSE
450.7866FALSE
450.6392FALSE
450.7872FALSE
450.638FALSE
450.7865FALSE
450.6285FALSE
450.7871FALSE
450.6284FALSE
450.7918FALSE
450.6287FALSE
450.7921FALSE
450.6287FALSE
450.7915FALSE
450.6284FALSE
450.7921FALSE
450.6271FALSE
450.7915FALSE
450.627FALSE
450.787FALSE
450.6273FALSE
450.7874FALSE
450.6272FALSE
450.7867FALSE
450.6272FALSE
450.7874FALSE
450.6287FALSE
450.7867FALSE
450.6285FALSE
450.7865FALSE
450.6288FALSE
450.7868FALSE
450.6277FALSE
450.7869FALSE
450.6297FALSE
450.7868FALSE
450.6265FALSE
450.7868FALSE
450.6263FALSE
450.7865FALSE
450.6268FALSE
450.7869FALSE
450.6265FALSE
450.7866FALSE
450.6268FALSE
450.7869FALSE
450.6263FALSE
450.7865FALSE
450.6261FALSE
450.7864FALSE
450.6267FALSE
450.7868FALSE
450.6263FALSE
450.7869FALSE
450.6267FALSE
450.7868FALSE
450.6262FALSE
450.7867FALSE
450.6259FALSE
450.7866FALSE
450.6266FALSE
450.787FALSE
450.6261FALSE
450.7866FALSE
450.6268FALSE
451.0866FALSE
450.7869FALSE
451.0873FALSE
450.7865FALSE
451.086FALSE
450.7864FALSE
450.7868FALSE
451.0845FALSE
451.0888FALSE
450.7868FALSE
450.7868FALSE
450.6275FALSE
450.6273FALSE
450.7867FALSE
450.6276FALSE
450.7864FALSE
450.6265FALSE
450.7868FALSE
450.6285FALSE
450.7868FALSE
450.6261FALSE
450.7868FALSE
450.6259FALSE
450.7867FALSE
450.6265FALSE
450.7864FALSE
450.626FALSE
450.7868FALSE
450.627FALSE
450.7868FALSE
450.6257FALSE
450.7868FALSE
450.6256FALSE
450.7867FALSE
450.6259FALSE
450.7864FALSE
450.6257FALSE
450.7868FALSE
450.6264FALSE
450.7868FALSE
450.6255FALSE
450.7868FALSE
450.6253FALSE
450.7867FALSE
450.6257FALSE
450.7864FALSE
450.6255FALSE
450.7868FALSE
450.6258FALSE
450.7868FALSE
450.6317FALSE
450.7868FALSE
450.632FALSE
450.7867FALSE
450.6314FALSE
450.7864FALSE
450.6321FALSE
450.7868FALSE
450.6313FALSE
450.7868FALSE
450.624FALSE
450.7868FALSE
450.6238FALSE
450.7867FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
              -0.7593927               -1.7313052 

$value
[1] 450.7864

$counts
function gradient 
      26       26 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

450.6242FALSE
450.624FALSE
450.624FALSE
450.6429FALSE
450.6438FALSE
450.642FALSE
450.6435FALSE
450.6423FALSE
450.623FALSE
450.6234FALSE
450.6226FALSE
450.6234FALSE
450.6228FALSE
450.6234FALSE
450.6233FALSE
450.6237FALSE
450.6234FALSE
450.6236FALSE
450.6226FALSE
450.6226FALSE
450.6228FALSE
450.6225FALSE
450.6227FALSE
450.6272FALSE
450.6275FALSE
450.6268FALSE
450.6276FALSE
450.6268FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
450.6225FALSE
450.6228FALSE
450.6227FALSE
450.6227FALSE
450.6226FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
               -1.128567                -1.795343 

$value
[1] 450.6225

$counts
function gradient 
      52       52 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
796.856   0.820 961.117 
