
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
576.2432FALSE
454.3313FALSE
573.7029FALSE
454.3306FALSE
576.2431FALSE
573.6998FALSE
454.3319FALSE
576.2433FALSE
573.7059FALSE
458.9716FALSE
580.4094FALSE
577.704FALSE
458.9983FALSE
580.4145FALSE
458.9454FALSE
577.7086FALSE
580.4042FALSE
454.2011FALSE
577.6994FALSE
576.2425FALSE
454.201FALSE
573.4703FALSE
576.2424FALSE
454.2012FALSE
573.4699FALSE
576.2426FALSE
454.1979FALSE
573.4709FALSE
576.2413FALSE
573.4819FALSE
454.1978FALSE
576.2412FALSE
573.4824FALSE
454.198FALSE
573.4813FALSE
576.2415FALSE
454.1993FALSE
573.4691FALSE
577.5816FALSE
454.1998FALSE
573.4698FALSE
577.5878FALSE
454.1988FALSE
573.4693FALSE
577.5754FALSE
573.4694FALSE
454.1859FALSE
576.24FALSE
573.4692FALSE
576.24FALSE
573.4697FALSE
454.1857FALSE
576.24FALSE
573.4692FALSE
454.1861FALSE
573.4696FALSE
576.24FALSE
454.1835FALSE
573.4694FALSE
576.24FALSE
454.1838FALSE
573.4691FALSE
454.1835FALSE
576.24FALSE
573.4697FALSE
454.1845FALSE
573.4693FALSE
576.2405FALSE
454.1842FALSE
573.4691FALSE
576.2403FALSE
573.4698FALSE
454.1847FALSE
576.2407FALSE
573.4693FALSE
454.1835FALSE
576.24FALSE
573.4691FALSE
454.1838FALSE
576.24FALSE
573.4698FALSE
454.1835FALSE
576.24FALSE
573.4693FALSE
454.1979FALSE
576.24FALSE
573.4691FALSE
454.1977FALSE
573.4698FALSE
576.24FALSE
454.198FALSE
573.4693FALSE
454.1856FALSE
576.2399FALSE
573.4691FALSE
454.1854FALSE
573.4698FALSE
576.2399FALSE
573.4693FALSE
454.1858FALSE
576.2399FALSE
573.4691FALSE
454.1836FALSE
576.2401FALSE
573.4698FALSE
576.2399FALSE
454.1834FALSE
573.4693FALSE
576.24FALSE
454.1838FALSE
573.4691FALSE
454.1834FALSE
576.2399FALSE
573.4698FALSE
454.1837FALSE
576.2399FALSE
454.1836FALSE
573.4693FALSE
576.2399FALSE
454.1834FALSE
573.4691FALSE
576.2399FALSE
454.1836FALSE
573.4698FALSE
576.2399FALSE
573.4693FALSE
454.1836FALSE
576.2399FALSE
454.1834FALSE
573.4691FALSE
454.1837FALSE
576.2399FALSE
573.4698FALSE
454.1836FALSE
573.4693FALSE
454.1834FALSE
576.2399FALSE
573.4691FALSE
454.1837FALSE
576.2399FALSE
573.4698FALSE
454.1836FALSE
576.2399FALSE
573.4693FALSE
454.1834FALSE
576.2399FALSE
573.4691FALSE
454.1837FALSE
576.2399FALSE
573.4698FALSE
454.1836FALSE
576.2399FALSE
$par
smooth_log_cases_lag1.bw 
               -2.279436 

$value
[1] 576.2399

$counts
function gradient 
      16       16 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

573.4693FALSE
454.1834FALSE
573.4691FALSE
454.1837FALSE
573.4698FALSE
454.1836FALSE
573.4693FALSE
454.1834FALSE
573.4691FALSE
454.1837FALSE
573.4698FALSE
454.1836FALSE
573.4693FALSE
454.1834FALSE
573.4691FALSE
454.1837FALSE
573.4698FALSE
454.1836FALSE
573.4693FALSE
454.1834FALSE
573.4691FALSE
454.1837FALSE
573.4698FALSE
454.1836FALSE
573.4693FALSE
454.1834FALSE
573.4691FALSE
454.1837FALSE
573.4698FALSE
454.1836FALSE
573.4693FALSE
454.1834FALSE
573.4691FALSE
454.1837FALSE
573.4698FALSE
454.1836FALSE
573.4693FALSE
454.1834FALSE
573.4691FALSE
454.1837FALSE
573.4698FALSE
454.1836FALSE
573.4693FALSE
$par
smooth_log_cases_lag0.bw 
               -2.174252 

$value
[1] 573.4691

$counts
function gradient 
      25       25 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

454.1834FALSE
454.1837FALSE
454.1836FALSE
454.1834FALSE
454.1837FALSE
454.1836FALSE
454.1834FALSE
454.1837FALSE
454.1836FALSE
454.1834FALSE
454.1837FALSE
454.1836FALSE
$par
time_ind_lag0.bw 
       -1.916915 

$value
[1] 454.1834

$counts
function gradient 
      28       28 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

500.7061FALSE
500.8028FALSE
500.71FALSE
500.8059FALSE
500.702FALSE
500.7997FALSE
500.6625FALSE
500.7597FALSE
500.7496FALSE
500.8458FALSE
498.1349FALSE
501.5167FALSE
498.1288FALSE
501.5091FALSE
498.1411FALSE
501.5242FALSE
498.1898FALSE
501.5705FALSE
501.4629FALSE
498.0801FALSE
485.8192FALSE
487.6804FALSE
485.8166FALSE
487.6736FALSE
485.8218FALSE
487.6871FALSE
485.8136FALSE
487.6824FALSE
485.8249FALSE
487.6783FALSE
485.3501FALSE
487.0827FALSE
485.3435FALSE
487.0725FALSE
485.3567FALSE
487.0929FALSE
485.3487FALSE
487.0856FALSE
485.3515FALSE
487.0798FALSE
488.3789FALSE
486.5978FALSE
488.3703FALSE
486.5983FALSE
488.3874FALSE
488.4191FALSE
486.5972FALSE
488.3388FALSE
485.1743FALSE
486.5761FALSE
485.1689FALSE
486.6196FALSE
485.1796FALSE
483.9876FALSE
485.1782FALSE
483.9786FALSE
485.1704FALSE
483.9965FALSE
483.9745FALSE
484.9496FALSE
484.0008FALSE
484.9425FALSE
488.1568FALSE
484.9566FALSE
488.1449FALSE
484.9538FALSE
488.1687FALSE
484.9454FALSE
488.2143FALSE
483.9616FALSE
488.0994FALSE
483.9568FALSE
482.0501FALSE
483.9664FALSE
482.039FALSE
483.9618FALSE
482.0612FALSE
483.9616FALSE
482.0665FALSE
493.1873FALSE
482.0338FALSE
493.1873FALSE
481.5281FALSE
493.1873FALSE
481.5212FALSE
493.2895FALSE
481.535FALSE
493.0851FALSE
481.5921FALSE
468.2481FALSE
481.4641FALSE
468.2455FALSE
479.8016FALSE
468.2508FALSE
479.787FALSE
479.8163FALSE
468.2984FALSE
479.8343FALSE
468.198FALSE
479.7691FALSE
462.4967FALSE
582.2747FALSE
462.495FALSE
582.2747FALSE
462.4984FALSE
582.2747FALSE
462.5325FALSE
582.2838FALSE
462.4609FALSE
582.2655FALSE
455.9347FALSE
455.9338FALSE
480.3813FALSE
455.9356FALSE
480.3753FALSE
455.9434FALSE
480.3873FALSE
455.926FALSE
480.4459FALSE
455.0032FALSE
480.3167FALSE
455.0028FALSE
478.4271FALSE
455.0035FALSE
478.4156FALSE
455.0085FALSE
454.9979FALSE
478.4386FALSE
454.4015FALSE
478.4768FALSE
478.3774FALSE
454.4013FALSE
475.7497FALSE
475.7397FALSE
454.4017FALSE
475.7596FALSE
454.4033FALSE
475.7992FALSE
454.3998FALSE
475.7003FALSE
454.2745FALSE
467.0628FALSE
454.2744FALSE
467.058FALSE
454.2746FALSE
467.0676FALSE
454.2753FALSE
467.1065FALSE
454.2737FALSE
454.2188FALSE
467.0195FALSE
454.2188FALSE
455.7226FALSE
455.7215FALSE
454.2189FALSE
455.7237FALSE
454.2191FALSE
455.7294FALSE
454.2186FALSE
455.7158FALSE
454.2011FALSE
455.0678FALSE
454.2011FALSE
455.0671FALSE
454.2012FALSE
455.0685FALSE
454.2009FALSE
455.0728FALSE
454.2014FALSE
455.0628FALSE
454.1984FALSE
454.3538FALSE
454.1984FALSE
454.3535FALSE
454.1984FALSE
454.3541FALSE
454.1982FALSE
454.3546FALSE
454.1986FALSE
454.353FALSE
454.2002FALSE
454.2935FALSE
454.2001FALSE
454.2933FALSE
454.2002FALSE
454.2005FALSE
454.2937FALSE
454.1999FALSE
454.2938FALSE
454.1934FALSE
454.2932FALSE
454.1933FALSE
454.2464FALSE
454.1934FALSE
454.2462FALSE
454.1937FALSE
454.2465FALSE
454.1931FALSE
454.2066FALSE
454.2462FALSE
454.2066FALSE
454.2465FALSE
454.2066FALSE
454.2257FALSE
454.2063FALSE
454.2256FALSE
454.2068FALSE
454.2257FALSE
454.197FALSE
454.2255FALSE
454.197FALSE
454.2259FALSE
454.197FALSE
454.252FALSE
454.1969FALSE
454.2519FALSE
454.1972FALSE
454.252FALSE
454.1909FALSE
454.2528FALSE
454.1908FALSE
454.2512FALSE
454.1909FALSE
454.2149FALSE
454.1906FALSE
454.2149FALSE
454.1911FALSE
454.215FALSE
454.1885FALSE
454.2152FALSE
454.1885FALSE
454.2146FALSE
454.1885FALSE
454.2006FALSE
454.1883FALSE
454.2005FALSE
454.1887FALSE
454.2006FALSE
454.1912FALSE
454.2004FALSE
454.1912FALSE
454.2008FALSE
454.1912FALSE
454.1899FALSE
454.1915FALSE
454.1899FALSE
454.1909FALSE
454.1899FALSE
454.1875FALSE
454.1902FALSE
454.1875FALSE
454.19FALSE
454.1876FALSE
454.1877FALSE
454.1879FALSE
454.1877FALSE
454.1872FALSE
454.1877FALSE
454.1865FALSE
454.1875FALSE
454.1865FALSE
454.1879FALSE
454.1865FALSE
454.1852FALSE
454.1863FALSE
454.1852FALSE
454.1867FALSE
454.1852FALSE
454.1851FALSE
454.1855FALSE
454.1851FALSE
454.1849FALSE
454.1851FALSE
454.1843FALSE
454.1849FALSE
454.1843FALSE
454.1853FALSE
454.1843FALSE
454.186FALSE
454.1843FALSE
454.186FALSE
454.1845FALSE
454.186FALSE
454.1839FALSE
454.1863FALSE
454.1839FALSE
454.1857FALSE
454.1839FALSE
454.1848FALSE
454.1841FALSE
454.1848FALSE
454.1841FALSE
454.1848FALSE
454.1837FALSE
454.1851FALSE
454.1837FALSE
454.1844FALSE
454.1837FALSE
454.1841FALSE
454.1838FALSE
454.1841FALSE
454.1839FALSE
454.1841FALSE
454.1835FALSE
454.1845FALSE
454.1835FALSE
454.1843FALSE
454.1835FALSE
454.1838FALSE
454.1837FALSE
454.1838FALSE
454.1837FALSE
454.1838FALSE
454.1835FALSE
454.1839FALSE
454.1835FALSE
454.184FALSE
454.1835FALSE
454.1836FALSE
454.1837FALSE
454.1836FALSE
454.1837FALSE
454.1836FALSE
454.1834FALSE
454.1838FALSE
454.1834FALSE
454.1838FALSE
454.1834FALSE
454.1835FALSE
454.1837FALSE
454.1835FALSE
454.1837FALSE
454.1835FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1835FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1835FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.185FALSE
454.1837FALSE
454.185FALSE
454.1836FALSE
454.185FALSE
454.1834FALSE
454.1847FALSE
454.1834FALSE
454.1852FALSE
454.1834FALSE
454.1835FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1835FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1835FALSE
454.1835FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1835FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1834FALSE
454.1837FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1834FALSE
454.1837FALSE
454.1837FALSE
454.1837FALSE
454.1836FALSE
454.1835FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1837FALSE
454.1834FALSE
454.1837FALSE
454.1837FALSE
454.1835FALSE
454.1836FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1834FALSE
454.1837FALSE
454.1837FALSE
454.1837FALSE
454.1836FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1835FALSE
454.1834FALSE
454.1837FALSE
454.1837FALSE
454.1836FALSE
454.1837FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                5.223454                -1.917022 

$value
[1] 454.1835

$counts
function gradient 
      50       50 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

454.1834FALSE
454.1834FALSE
454.1834FALSE
454.1837FALSE
454.1836FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.726471                -1.916918 

$value
[1] 454.1834

$counts
function gradient 
      51       51 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1091.816    0.959  911.846 
