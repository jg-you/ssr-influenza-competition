
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
567.2125FALSE
564.4659FALSE
460.5238FALSE
564.4574FALSE
460.518FALSE
567.2057FALSE
460.5295FALSE
567.2191FALSE
564.4744FALSE
460.1166FALSE
562.9143FALSE
559.9488FALSE
460.1388FALSE
562.9361FALSE
559.9713FALSE
460.0943FALSE
562.8924FALSE
559.9263FALSE
459.5246FALSE
560.9612FALSE
564.6687FALSE
459.5198FALSE
560.9455FALSE
564.6548FALSE
459.5294FALSE
560.9768FALSE
564.6826FALSE
475.3676FALSE
556.6033FALSE
559.6806FALSE
475.4638FALSE
556.6046FALSE
559.6839FALSE
475.2716FALSE
556.6021FALSE
559.6779FALSE
457.9724FALSE
556.7994FALSE
560.9065FALSE
457.9695FALSE
556.7943FALSE
560.8938FALSE
457.9752FALSE
556.8046FALSE
560.9191FALSE
461.1442FALSE
556.5868FALSE
559.6365FALSE
461.1714FALSE
556.5876FALSE
559.6368FALSE
461.1171FALSE
556.586FALSE
559.6362FALSE
457.7002FALSE
556.5841FALSE
559.642FALSE
457.6996FALSE
556.5809FALSE
559.6399FALSE
556.5873FALSE
457.7007FALSE
559.6441FALSE
556.5834FALSE
457.7111FALSE
559.6364FALSE
556.584FALSE
457.7118FALSE
559.6367FALSE
556.5827FALSE
559.6361FALSE
457.7103FALSE
559.6392FALSE
457.6962FALSE
556.5841FALSE
559.6371FALSE
457.6956FALSE
556.5809FALSE
457.6969FALSE
559.6413FALSE
457.695FALSE
556.5873FALSE
559.6363FALSE
556.5784FALSE
559.6366FALSE
457.6957FALSE
556.5787FALSE
559.6364FALSE
457.6946FALSE
556.5781FALSE
559.6362FALSE
457.695FALSE
556.5842FALSE
559.6365FALSE
457.6946FALSE
559.637FALSE
556.581FALSE
457.6957FALSE
559.6363FALSE
556.5874FALSE
457.6945FALSE
559.6366FALSE
556.5778FALSE
457.6951FALSE
559.6366FALSE
556.578FALSE
457.6951FALSE
559.6363FALSE
556.5776FALSE
559.6366FALSE
457.6945FALSE
556.5842FALSE
559.6366FALSE
$par
smooth_log_cases_lag1.bw 
               -1.618924 

$value
[1] 559.6363

$counts
function gradient 
      13       13 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

457.6951FALSE
556.581FALSE
556.5874FALSE
457.6951FALSE
556.5776FALSE
457.6945FALSE
556.5778FALSE
457.6951FALSE
556.5774FALSE
457.6951FALSE
556.5842FALSE
457.6945FALSE
556.581FALSE
457.6951FALSE
556.5874FALSE
457.6951FALSE
556.5775FALSE
457.6945FALSE
556.5777FALSE
457.6951FALSE
556.5774FALSE
457.6951FALSE
556.5776FALSE
457.6945FALSE
556.5775FALSE
457.6951FALSE
556.5784FALSE
457.6951FALSE
556.5774FALSE
457.6945FALSE
556.5776FALSE
457.6951FALSE
556.5779FALSE
457.6951FALSE
556.5775FALSE
457.6945FALSE
556.5776FALSE
457.6951FALSE
556.5776FALSE
457.6951FALSE
556.5775FALSE
457.6945FALSE
556.5776FALSE
457.6951FALSE
556.5776FALSE
$par
smooth_log_cases_lag0.bw 
               -1.634093 

$value
[1] 556.5775

$counts
function gradient 
      20       20 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6952FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
457.6945FALSE
457.6951FALSE
457.6951FALSE
$par
time_ind_lag0.bw 
       -1.618934 

$value
[1] 457.6945

$counts
function gradient 
      44       44 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

502.967FALSE
501.0688FALSE
501.0325FALSE
502.9302FALSE
503.0037FALSE
501.1051FALSE
502.9948FALSE
501.0941FALSE
502.9392FALSE
501.0438FALSE
475.6973FALSE
474.8827FALSE
475.6764FALSE
474.8623FALSE
475.7183FALSE
474.9032FALSE
475.6976FALSE
474.8784FALSE
475.6972FALSE
474.887FALSE
463.7091FALSE
462.8121FALSE
463.7034FALSE
462.8066FALSE
463.7147FALSE
462.8175FALSE
463.7055FALSE
462.8075FALSE
463.7126FALSE
462.8166FALSE
461.3403FALSE
460.4392FALSE
461.3372FALSE
460.4365FALSE
461.3434FALSE
460.4419FALSE
461.3351FALSE
460.433FALSE
461.3455FALSE
460.4453FALSE
461.3799FALSE
465.2426FALSE
461.3796FALSE
465.2423FALSE
465.2429FALSE
461.3802FALSE
465.2911FALSE
461.409FALSE
465.1951FALSE
461.3511FALSE
458.2825FALSE
458.1121FALSE
458.2815FALSE
458.1114FALSE
458.2836FALSE
458.1128FALSE
458.282FALSE
458.1114FALSE
458.2831FALSE
458.1128FALSE
458.184FALSE
458.0639FALSE
458.1832FALSE
458.0633FALSE
458.1847FALSE
458.0644FALSE
458.1858FALSE
458.0655FALSE
458.1821FALSE
458.0623FALSE
458.1143FALSE
458.0149FALSE
458.1136FALSE
458.0144FALSE
458.115FALSE
458.0154FALSE
458.1162FALSE
458.0164FALSE
458.1124FALSE
458.0133FALSE
458.0127FALSE
457.9612FALSE
457.9608FALSE
458.0122FALSE
457.9617FALSE
458.0132FALSE
457.9603FALSE
458.0111FALSE
457.9621FALSE
458.0143FALSE
457.828FALSE
457.9038FALSE
457.8278FALSE
457.9034FALSE
457.8283FALSE
457.9042FALSE
457.8274FALSE
457.9032FALSE
457.8286FALSE
457.9043FALSE
457.7616FALSE
457.8739FALSE
457.7615FALSE
457.8737FALSE
457.7617FALSE
457.8742FALSE
457.7625FALSE
457.8752FALSE
457.7607FALSE
457.8726FALSE
457.7239FALSE
457.8093FALSE
457.7239FALSE
457.8091FALSE
457.724FALSE
457.8094FALSE
457.7233FALSE
457.8103FALSE
457.7245FALSE
457.8082FALSE
457.7107FALSE
457.7658FALSE
457.7106FALSE
457.7107FALSE
457.7657FALSE
457.7113FALSE
457.7659FALSE
457.71FALSE
457.7648FALSE
457.7023FALSE
457.7668FALSE
457.7023FALSE
457.7325FALSE
457.7023FALSE
457.7325FALSE
457.7017FALSE
457.7326FALSE
457.7029FALSE
457.7313FALSE
457.6995FALSE
457.7339FALSE
457.6995FALSE
457.7959FALSE
457.6996FALSE
457.7958FALSE
457.6989FALSE
457.7959FALSE
457.7002FALSE
457.7979FALSE
457.7039FALSE
457.7939FALSE
457.7039FALSE
457.7276FALSE
457.7039FALSE
457.7275FALSE
457.7048FALSE
457.7276FALSE
457.7031FALSE
457.7284FALSE
457.6975FALSE
457.7267FALSE
457.6975FALSE
457.717FALSE
457.6975FALSE
457.7169FALSE
457.6982FALSE
457.717FALSE
457.6969FALSE
457.7164FALSE
457.6962FALSE
457.6962FALSE
457.7175FALSE
457.6962FALSE
457.7079FALSE
457.6969FALSE
457.7079FALSE
457.6969FALSE
457.7079FALSE
457.6957FALSE
457.7072FALSE
457.6957FALSE
457.7085FALSE
457.6957FALSE
457.7435FALSE
457.696FALSE
457.6964FALSE
457.695FALSE
457.7435FALSE
457.695FALSE
457.7447FALSE
457.695FALSE
457.7424FALSE
457.6957FALSE
457.7094FALSE
457.6956FALSE
457.7094FALSE
457.6948FALSE
457.7094FALSE
457.6948FALSE
457.7103FALSE
457.6948FALSE
457.7085FALSE
457.6954FALSE
457.7065FALSE
457.6954FALSE
457.7065FALSE
457.6946FALSE
457.6946FALSE
457.7065FALSE
457.6946FALSE
457.7072FALSE
457.6953FALSE
457.7059FALSE
457.6953FALSE
457.7025FALSE
457.6946FALSE
457.7025FALSE
457.6946FALSE
457.7025FALSE
457.7031FALSE
457.6946FALSE
457.702FALSE
457.6951FALSE
457.6994FALSE
457.6953FALSE
457.6994FALSE
457.6946FALSE
457.6994FALSE
457.6946FALSE
457.6946FALSE
457.6988FALSE
457.7FALSE
457.6952FALSE
457.698FALSE
457.6953FALSE
457.698FALSE
457.6946FALSE
457.698FALSE
457.6946FALSE
457.6973FALSE
457.6946FALSE
457.6986FALSE
457.6952FALSE
457.6995FALSE
457.6951FALSE
457.6995FALSE
457.6948FALSE
457.6995FALSE
457.6948FALSE
457.7005FALSE
457.6948FALSE
457.6986FALSE
457.6949FALSE
457.6963FALSE
457.6954FALSE
457.6963FALSE
457.6963FALSE
457.6946FALSE
457.697FALSE
457.6946FALSE
457.6957FALSE
457.6946FALSE
457.6956FALSE
457.6952FALSE
457.6956FALSE
457.6951FALSE
457.6945FALSE
457.6956FALSE
457.6945FALSE
457.6961FALSE
457.6945FALSE
457.6962FALSE
457.6951FALSE
457.6953FALSE
457.6953FALSE
457.6952FALSE
457.6953FALSE
457.6945FALSE
457.6957FALSE
457.6945FALSE
457.6959FALSE
457.6945FALSE
457.6948FALSE
457.6951FALSE
457.6948FALSE
457.6952FALSE
457.6948FALSE
457.6945FALSE
457.6954FALSE
457.6945FALSE
457.6955FALSE
457.6945FALSE
457.6946FALSE
457.6951FALSE
457.6946FALSE
457.6952FALSE
457.6946FALSE
457.6945FALSE
457.6953FALSE
457.6945FALSE
457.6953FALSE
457.6945FALSE
457.6946FALSE
457.6946FALSE
457.6951FALSE
457.6946FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6952FALSE
457.6945FALSE
457.6952FALSE
457.6945FALSE
457.6952FALSE
457.6951FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6958FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6945FALSE
457.6952FALSE
457.6951FALSE
457.6945FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                6.662222                -1.618938 

$value
[1] 457.6945

$counts
function gradient 
      38       38 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.7036FALSE
457.7036FALSE
457.7036FALSE
457.7044FALSE
457.7027FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6952FALSE
457.6951FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6951FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
457.6945FALSE
457.6945FALSE
457.6945FALSE
457.6952FALSE
457.6952FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                5.894256                -1.618935 

$value
[1] 457.6945

$counts
function gradient 
      61       61 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
 984.106    0.714 1088.011 
