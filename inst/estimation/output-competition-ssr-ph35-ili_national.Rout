
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
551.6984FALSE
542.4854FALSE
354.047FALSE
551.6886FALSE
542.4724FALSE
354.0456FALSE
551.7081FALSE
354.0485FALSE
542.4984FALSE
549.0986FALSE
363.4815FALSE
538.2202FALSE
549.1111FALSE
363.5197FALSE
549.0861FALSE
538.233FALSE
547.6299FALSE
538.2075FALSE
363.4434FALSE
547.6239FALSE
536.752FALSE
353.7057FALSE
547.6359FALSE
536.7452FALSE
353.7061FALSE
551.273FALSE
536.7588FALSE
353.7053FALSE
551.2902FALSE
539.2213FALSE
353.7352FALSE
551.2559FALSE
539.2385FALSE
353.7333FALSE
547.1105FALSE
539.2041FALSE
353.737FALSE
547.1108FALSE
536.1425FALSE
353.7023FALSE
547.1102FALSE
536.1424FALSE
547.108FALSE
353.7028FALSE
536.1425FALSE
547.1082FALSE
353.7019FALSE
536.1423FALSE
353.7011FALSE
547.1078FALSE
536.1423FALSE
353.7013FALSE
536.1424FALSE
547.1157FALSE
353.701FALSE
536.1427FALSE
547.1149FALSE
353.7012FALSE
536.1434FALSE
547.1166FALSE
353.7004FALSE
547.1061FALSE
536.1422FALSE
353.7019FALSE
547.1063FALSE
536.1423FALSE
353.7004FALSE
547.106FALSE
536.1422FALSE
353.7006FALSE
547.116FALSE
536.1423FALSE
353.7002FALSE
547.1151FALSE
536.1427FALSE
353.7002FALSE
547.1169FALSE
536.1434FALSE
353.7004FALSE
547.106FALSE
536.1422FALSE
353.7001FALSE
547.1059FALSE
536.1422FALSE
547.106FALSE
353.7005FALSE
536.1422FALSE
547.1059FALSE
353.7001FALSE
536.1423FALSE
547.1059FALSE
353.7013FALSE
536.1427FALSE
547.106FALSE
353.7002FALSE
536.1434FALSE
547.1059FALSE
353.7003FALSE
547.106FALSE
353.7004FALSE
536.1422FALSE
547.106FALSE
353.7003FALSE
536.1422FALSE
353.7005FALSE
536.1422FALSE
547.1059FALSE
353.7001FALSE
536.1423FALSE
547.106FALSE
353.7002FALSE
547.106FALSE
536.1427FALSE
547.1059FALSE
353.7003FALSE
536.1433FALSE
547.106FALSE
536.1422FALSE
353.7004FALSE
547.106FALSE
536.1422FALSE
353.7002FALSE
547.1059FALSE
536.1422FALSE
353.7003FALSE
547.106FALSE
536.1423FALSE
353.7004FALSE
547.106FALSE
536.1423FALSE
353.7002FALSE
547.1059FALSE
536.1429FALSE
353.7003FALSE
547.106FALSE
536.1422FALSE
353.7004FALSE
547.106FALSE
536.1422FALSE
547.1059FALSE
353.7002FALSE
536.1424FALSE
547.106FALSE
353.7003FALSE
536.1422FALSE
547.106FALSE
353.7004FALSE
536.1422FALSE
547.1059FALSE
536.1422FALSE
353.7002FALSE
547.106FALSE
536.1423FALSE
353.7003FALSE
547.106FALSE
536.1427FALSE
547.1059FALSE
353.7004FALSE
536.1433FALSE
547.106FALSE
353.7002FALSE
536.1422FALSE
547.106FALSE
353.7003FALSE
536.1422FALSE
547.1059FALSE
353.7004FALSE
536.1422FALSE
547.106FALSE
353.7002FALSE
536.1423FALSE
547.106FALSE
353.7003FALSE
536.1423FALSE
547.1059FALSE
353.7004FALSE
536.1429FALSE
547.106FALSE
536.1422FALSE
353.7002FALSE
547.106FALSE
536.1422FALSE
353.7003FALSE
547.1059FALSE
536.1424FALSE
353.7004FALSE
547.106FALSE
536.1422FALSE
353.7002FALSE
547.106FALSE
536.1422FALSE
547.1059FALSE
353.7003FALSE
536.1422FALSE
547.106FALSE
353.7004FALSE
536.1423FALSE
547.106FALSE
353.7002FALSE
547.1059FALSE
536.1422FALSE
353.7003FALSE
547.106FALSE
536.1426FALSE
353.7004FALSE
547.106FALSE
536.1422FALSE
353.7002FALSE
547.1059FALSE
536.1422FALSE
353.7003FALSE
547.106FALSE
536.1423FALSE
547.106FALSE
353.7004FALSE
536.1423FALSE
$par
smooth_log_cases_lag0.bw 
               -1.615654 

$value
[1] 536.1422

$counts
function gradient 
      24       24 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

353.7002FALSE
547.1059FALSE
547.106FALSE
353.7003FALSE
547.106FALSE
353.7004FALSE
547.1059FALSE
353.7002FALSE
547.106FALSE
353.7003FALSE
547.106FALSE
353.7004FALSE
547.1059FALSE
353.7002FALSE
547.106FALSE
353.7003FALSE
547.106FALSE
353.7004FALSE
$par
time_ind_lag0.bw 
       -2.117276 

$value
[1] 353.7002

$counts
function gradient 
      26       26 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1066FALSE
547.1065FALSE
547.1067FALSE
547.1059FALSE
547.1059FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
547.1059FALSE
547.106FALSE
547.106FALSE
$par
smooth_log_cases_lag1.bw 
               -1.691007 

$value
[1] 547.1059

$counts
function gradient 
      48       48 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

378.4149FALSE
375.6748FALSE
375.6522FALSE
378.3889FALSE
375.6974FALSE
378.4409FALSE
375.6839FALSE
378.4248FALSE
375.6657FALSE
378.405FALSE
362.235FALSE
363.0865FALSE
362.2251FALSE
363.074FALSE
362.2449FALSE
363.099FALSE
362.2325FALSE
363.0845FALSE
362.2374FALSE
363.0884FALSE
356.0738FALSE
355.8421FALSE
356.0702FALSE
355.8388FALSE
356.0774FALSE
355.8453FALSE
356.0729FALSE
355.8411FALSE
356.0747FALSE
355.843FALSE
354.779FALSE
354.8304FALSE
354.7772FALSE
354.8284FALSE
354.7808FALSE
354.8323FALSE
354.778FALSE
354.829FALSE
354.7801FALSE
354.8317FALSE
354.3055FALSE
356.2862FALSE
354.3048FALSE
356.2857FALSE
354.3062FALSE
356.2866FALSE
354.3103FALSE
356.298FALSE
354.3006FALSE
356.2743FALSE
354.076FALSE
354.4072FALSE
354.4059FALSE
354.0754FALSE
354.0767FALSE
354.4085FALSE
354.0768FALSE
354.4079FALSE
354.4065FALSE
354.0753FALSE
354.1697FALSE
353.967FALSE
354.1689FALSE
353.9665FALSE
354.1705FALSE
353.9675FALSE
354.1706FALSE
353.9673FALSE
354.1688FALSE
353.9666FALSE
353.9029FALSE
353.8138FALSE
353.9025FALSE
353.8136FALSE
353.9032FALSE
353.814FALSE
353.9033FALSE
353.8143FALSE
353.9024FALSE
353.8133FALSE
353.7965FALSE
353.8795FALSE
353.7963FALSE
353.8794FALSE
353.7967FALSE
353.8796FALSE
353.7969FALSE
353.8775FALSE
353.7962FALSE
353.8815FALSE
353.9685FALSE
353.8022FALSE
353.9684FALSE
353.802FALSE
353.9685FALSE
353.8024FALSE
353.9664FALSE
353.8004FALSE
353.9705FALSE
353.8039FALSE
353.7804FALSE
353.757FALSE
353.7802FALSE
353.7569FALSE
353.7806FALSE
353.7571FALSE
353.7566FALSE
353.7809FALSE
353.7577FALSE
353.7801FALSE
353.7287FALSE
353.7893FALSE
353.7287FALSE
353.7892FALSE
353.7288FALSE
353.7895FALSE
353.7291FALSE
353.7874FALSE
353.7286FALSE
353.7912FALSE
353.7151FALSE
353.7779FALSE
353.7151FALSE
353.7777FALSE
353.7151FALSE
353.7153FALSE
353.778FALSE
353.715FALSE
353.7771FALSE
353.7074FALSE
353.7786FALSE
353.7074FALSE
353.7613FALSE
353.7074FALSE
353.7612FALSE
353.7076FALSE
353.7614FALSE
353.7072FALSE
353.7618FALSE
353.7164FALSE
353.7608FALSE
353.7164FALSE
353.7236FALSE
353.7165FALSE
353.7146FALSE
353.7236FALSE
353.7182FALSE
353.7237FALSE
353.707FALSE
353.7238FALSE
353.707FALSE
353.7235FALSE
353.707FALSE
353.713FALSE
353.7063FALSE
353.7078FALSE
353.7129FALSE
353.7042FALSE
353.713FALSE
353.7042FALSE
353.7132FALSE
353.7042FALSE
353.7128FALSE
353.7044FALSE
353.7096FALSE
353.7046FALSE
353.7096FALSE
353.7022FALSE
353.7096FALSE
353.7022FALSE
353.7089FALSE
353.7023FALSE
353.7104FALSE
353.7024FALSE
353.7055FALSE
353.7022FALSE
353.7055FALSE
353.7011FALSE
353.7055FALSE
353.7011FALSE
353.7047FALSE
353.7011FALSE
353.7063FALSE
353.7013FALSE
353.7144FALSE
353.7015FALSE
353.7144FALSE
353.7007FALSE
353.7144FALSE
353.7007FALSE
353.7149FALSE
353.7007FALSE
353.714FALSE
353.7009FALSE
353.7008FALSE
353.7054FALSE
353.7004FALSE
353.7054FALSE
353.7004FALSE
353.7054FALSE
353.7004FALSE
353.7058FALSE
353.7006FALSE
353.7049FALSE
353.7006FALSE
353.7036FALSE
353.7007FALSE
353.7036FALSE
353.7007FALSE
353.7036FALSE
353.7007FALSE
353.704FALSE
353.7009FALSE
353.7031FALSE
353.7005FALSE
353.7004FALSE
353.7077FALSE
353.7004FALSE
353.7077FALSE
353.7004FALSE
353.7077FALSE
353.7006FALSE
353.707FALSE
353.7004FALSE
353.7004FALSE
353.7084FALSE
353.7004FALSE
353.7026FALSE
353.7004FALSE
353.7026FALSE
353.7006FALSE
353.7006FALSE
353.7026FALSE
353.7004FALSE
353.7028FALSE
353.7004FALSE
353.7025FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7004FALSE
353.7018FALSE
353.7004FALSE
353.7021FALSE
353.7004FALSE
353.7017FALSE
353.7006FALSE
353.7017FALSE
353.7006FALSE
353.7017FALSE
353.7004FALSE
353.7019FALSE
353.7004FALSE
353.7015FALSE
353.7004FALSE
353.7006FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7004FALSE
353.7016FALSE
353.7004FALSE
353.7018FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7006FALSE
353.7016FALSE
353.7004FALSE
353.7016FALSE
353.7004FALSE
353.7016FALSE
353.7004FALSE
353.7018FALSE
353.7006FALSE
353.702FALSE
353.7006FALSE
353.7004FALSE
353.7016FALSE
353.7004FALSE
353.7016FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7018FALSE
353.7006FALSE
353.7021FALSE
353.7004FALSE
353.7016FALSE
353.7004FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7006FALSE
353.7018FALSE
353.7004FALSE
353.7021FALSE
353.7004FALSE
353.7016FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7006FALSE
353.7018FALSE
353.7004FALSE
353.7021FALSE
353.7004FALSE
353.7016FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7006FALSE
353.7018FALSE
353.7004FALSE
353.7021FALSE
353.7004FALSE
353.7016FALSE
353.7004FALSE
353.7006FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7004FALSE
353.7018FALSE
353.7004FALSE
353.7021FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7004FALSE
353.7018FALSE
353.7004FALSE
353.7021FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7006FALSE
353.7016FALSE
353.7004FALSE
353.7016FALSE
353.7018FALSE
353.7004FALSE
353.7021FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7004FALSE
353.7018FALSE
353.7004FALSE
353.7021FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7004FALSE
353.7018FALSE
353.7004FALSE
353.7021FALSE
353.7004FALSE
353.7016FALSE
353.7006FALSE
353.7016FALSE
353.7006FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                4.086906                -2.117247 

$value
[1] 353.7004

$counts
function gradient 
      39       39 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

353.7016FALSE
353.7018FALSE
353.7021FALSE
353.7016FALSE
353.7016FALSE
353.7016FALSE
353.7018FALSE
353.7021FALSE
353.7016FALSE
353.7016FALSE
353.7016FALSE
353.7018FALSE
353.7021FALSE
353.7016FALSE
353.7016FALSE
353.7016FALSE
353.7018FALSE
353.7021FALSE
353.7016FALSE
353.7016FALSE
353.7016FALSE
353.7018FALSE
353.7021FALSE
353.7016FALSE
353.7016FALSE
353.7016FALSE
353.7018FALSE
353.7021FALSE
353.7016FALSE
353.7016FALSE
353.7016FALSE
353.7018FALSE
353.7021FALSE
353.7016FALSE
353.7016FALSE
353.7016FALSE
353.7018FALSE
353.7021FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                3.266871                -2.117557 

$value
[1] 353.7016

$counts
function gradient 
      44       44 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1181.764    0.907  900.490 
