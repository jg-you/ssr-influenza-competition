
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
530.5116FALSE
543.3713FALSE
354.4671FALSE
530.4978FALSE
543.3583FALSE
354.4656FALSE
530.5254FALSE
543.3843FALSE
354.4685FALSE
526.766FALSE
363.7414FALSE
539.1396FALSE
526.7839FALSE
539.1522FALSE
363.7796FALSE
526.7481FALSE
363.7034FALSE
539.127FALSE
524.9458FALSE
537.6547FALSE
354.1259FALSE
524.9362FALSE
537.6479FALSE
354.1262FALSE
524.9554FALSE
537.6615FALSE
540.2895FALSE
354.1256FALSE
540.1062FALSE
354.1358FALSE
540.3286FALSE
540.1238FALSE
354.134FALSE
540.2504FALSE
540.0889FALSE
523.8854FALSE
354.1377FALSE
537.0571FALSE
354.1202FALSE
523.8841FALSE
537.0571FALSE
354.1207FALSE
523.8867FALSE
354.1201FALSE
537.0571FALSE
523.8536FALSE
537.0571FALSE
354.1193FALSE
523.8532FALSE
537.057FALSE
354.1195FALSE
537.0571FALSE
354.1192FALSE
523.8539FALSE
537.057FALSE
354.1424FALSE
523.8559FALSE
537.0573FALSE
354.1405FALSE
523.8571FALSE
537.057FALSE
354.1443FALSE
523.8551FALSE
537.0571FALSE
523.8535FALSE
354.1192FALSE
537.057FALSE
523.8536FALSE
354.1194FALSE
523.8534FALSE
537.0571FALSE
354.119FALSE
537.057FALSE
523.8534FALSE
354.1191FALSE
537.0573FALSE
523.8535FALSE
354.1192FALSE
537.057FALSE
354.1192FALSE
523.8533FALSE
537.0571FALSE
354.1191FALSE
523.8558FALSE
537.057FALSE
354.1192FALSE
523.8549FALSE
537.0571FALSE
354.1192FALSE
523.8567FALSE
537.057FALSE
354.1191FALSE
523.8533FALSE
537.0573FALSE
354.1192FALSE
523.8534FALSE
537.057FALSE
354.1192FALSE
523.8533FALSE
537.057FALSE
354.1191FALSE
523.8542FALSE
537.057FALSE
354.1192FALSE
523.8537FALSE
537.0571FALSE
354.1192FALSE
523.8551FALSE
537.057FALSE
354.1191FALSE
537.0573FALSE
523.8533FALSE
354.1192FALSE
523.8534FALSE
537.057FALSE
354.1192FALSE
523.8533FALSE
537.057FALSE
354.1191FALSE
523.8532FALSE
537.057FALSE
354.1192FALSE
523.8533FALSE
537.0571FALSE
354.1192FALSE
523.8536FALSE
537.057FALSE
354.1191FALSE
523.8533FALSE
537.0573FALSE
354.1192FALSE
523.8534FALSE
537.057FALSE
354.1192FALSE
523.8534FALSE
537.057FALSE
354.1191FALSE
523.8533FALSE
537.057FALSE
354.1192FALSE
523.8534FALSE
537.0571FALSE
354.1192FALSE
537.057FALSE
523.8534FALSE
354.1191FALSE
537.0571FALSE
523.8533FALSE
354.1192FALSE
537.057FALSE
523.8534FALSE
354.1192FALSE
537.057FALSE
523.8534FALSE
354.1191FALSE
537.057FALSE
523.8533FALSE
354.1192FALSE
537.057FALSE
523.8534FALSE
354.1192FALSE
537.057FALSE
523.8534FALSE
354.1191FALSE
537.057FALSE
523.8533FALSE
354.1192FALSE
537.057FALSE
523.8534FALSE
354.1192FALSE
537.057FALSE
523.8534FALSE
354.1191FALSE
537.0571FALSE
523.8533FALSE
354.1192FALSE
537.057FALSE
354.1192FALSE
$par
time_ind_lag0.bw 
       -2.117206 

$value
[1] 354.1191

$counts
function gradient 
      20       20 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

523.8534FALSE
537.057FALSE
537.0571FALSE
523.8534FALSE
537.057FALSE
523.8533FALSE
537.057FALSE
523.8534FALSE
537.0571FALSE
523.8534FALSE
537.057FALSE
537.057FALSE
523.8533FALSE
537.0571FALSE
523.8534FALSE
537.057FALSE
523.8534FALSE
537.057FALSE
537.0571FALSE
523.8533FALSE
537.057FALSE
523.8534FALSE
537.057FALSE
523.8534FALSE
537.0571FALSE
523.8533FALSE
537.057FALSE
523.8534FALSE
537.057FALSE
523.8534FALSE
537.0571FALSE
537.057FALSE
523.8533FALSE
537.057FALSE
523.8534FALSE
537.0571FALSE
537.057FALSE
523.8534FALSE
537.057FALSE
523.8533FALSE
537.0571FALSE
537.057FALSE
523.8534FALSE
537.057FALSE
523.8534FALSE
537.0571FALSE
523.8533FALSE
537.057FALSE
523.8534FALSE
537.057FALSE
523.8534FALSE
537.0571FALSE
523.8533FALSE
537.057FALSE
523.8534FALSE
537.057FALSE
523.8534FALSE
537.0571FALSE
523.8533FALSE
537.057FALSE
523.8534FALSE
537.057FALSE
523.8534FALSE
537.0571FALSE
523.8533FALSE
537.057FALSE
523.8534FALSE
537.057FALSE
523.8534FALSE
537.0571FALSE
523.8533FALSE
537.057FALSE
523.8534FALSE
523.8534FALSE
$par
smooth_log_cases_lag0.bw 
               -1.643526 

$value
[1] 523.8533

$counts
function gradient 
      31       31 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

537.057FALSE
537.0571FALSE
537.057FALSE
537.057FALSE
537.0571FALSE
537.057FALSE
$par
smooth_log_cases_lag1.bw 
               -1.615674 

$value
[1] 537.057

$counts
function gradient 
      35       35 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

380.3168FALSE
378.7575FALSE
380.2941FALSE
378.7314FALSE
380.3395FALSE
378.7836FALSE
380.3257FALSE
378.7674FALSE
378.7476FALSE
380.3079FALSE
364.3754FALSE
363.4883FALSE
364.3625FALSE
363.4758FALSE
364.3883FALSE
363.5008FALSE
364.3738FALSE
363.4862FALSE
363.4904FALSE
364.377FALSE
356.3091FALSE
355.3539FALSE
356.3058FALSE
355.352FALSE
355.3557FALSE
356.3123FALSE
355.3522FALSE
356.3081FALSE
355.3555FALSE
356.3101FALSE
354.7325FALSE
355.2613FALSE
354.7314FALSE
355.2593FALSE
354.7337FALSE
355.2633FALSE
354.7332FALSE
354.7318FALSE
355.2598FALSE
354.5157FALSE
355.2627FALSE
354.515FALSE
357.1298FALSE
354.5165FALSE
354.5162FALSE
357.1293FALSE
354.5152FALSE
357.1302FALSE
354.3152FALSE
357.1432FALSE
354.3148FALSE
354.3155FALSE
357.1164FALSE
354.3158FALSE
354.8461FALSE
354.3146FALSE
354.8448FALSE
354.2126FALSE
354.2124FALSE
354.8474FALSE
354.2128FALSE
354.8467FALSE
354.213FALSE
354.8455FALSE
354.2122FALSE
354.6086FALSE
354.3219FALSE
354.6078FALSE
354.3218FALSE
354.6095FALSE
354.61FALSE
354.322FALSE
354.6073FALSE
354.3199FALSE
354.324FALSE
354.3066FALSE
354.3063FALSE
354.1984FALSE
354.3069FALSE
354.1983FALSE
354.1986FALSE
354.3071FALSE
354.1978FALSE
354.3061FALSE
354.1992FALSE
354.2185FALSE
354.1696FALSE
354.1695FALSE
354.2184FALSE
354.1697FALSE
354.2187FALSE
354.1698FALSE
354.2188FALSE
354.1695FALSE
354.2183FALSE
354.1395FALSE
354.1663FALSE
354.1394FALSE
354.1662FALSE
354.1395FALSE
354.1664FALSE
354.1387FALSE
354.1655FALSE
354.1402FALSE
354.167FALSE
354.1301FALSE
354.1533FALSE
354.13FALSE
354.1533FALSE
354.1301FALSE
354.1534FALSE
354.1302FALSE
354.1538FALSE
354.1529FALSE
354.1299FALSE
354.1345FALSE
354.1255FALSE
354.1345FALSE
354.1254FALSE
354.1346FALSE
354.1255FALSE
354.1347FALSE
354.1256FALSE
354.1344FALSE
354.1253FALSE
354.1224FALSE
354.127FALSE
354.1224FALSE
354.127FALSE
354.1224FALSE
354.127FALSE
354.1226FALSE
354.1272FALSE
354.1223FALSE
354.1269FALSE
354.2603FALSE
354.1265FALSE
354.2603FALSE
354.1265FALSE
354.2603FALSE
354.1265FALSE
354.2582FALSE
354.1257FALSE
354.2623FALSE
354.1272FALSE
354.1221FALSE
354.1215FALSE
354.1221FALSE
354.1215FALSE
354.1221FALSE
354.1215FALSE
354.1222FALSE
354.1213FALSE
354.1219FALSE
354.1223FALSE
354.1217FALSE
354.1214FALSE
354.1217FALSE
354.1214FALSE
354.1217FALSE
354.1214FALSE
354.1218FALSE
354.1219FALSE
354.1211FALSE
354.1217FALSE
354.1208FALSE
354.1223FALSE
354.1208FALSE
354.1223FALSE
354.1208FALSE
354.1223FALSE
354.1209FALSE
354.1215FALSE
354.1207FALSE
354.123FALSE
354.1203FALSE
354.1212FALSE
354.1203FALSE
354.1212FALSE
354.1203FALSE
354.1212FALSE
354.1205FALSE
354.1212FALSE
354.1202FALSE
354.122FALSE
354.1215FALSE
354.1195FALSE
354.1215FALSE
354.1195FALSE
354.1215FALSE
354.1195FALSE
354.1207FALSE
354.1197FALSE
354.1222FALSE
354.1194FALSE
354.1197FALSE
354.1195FALSE
354.1197FALSE
354.1195FALSE
354.1198FALSE
354.1195FALSE
354.1199FALSE
354.1196FALSE
354.1196FALSE
354.1193FALSE
354.218FALSE
354.1192FALSE
354.218FALSE
354.1192FALSE
354.218FALSE
354.1192FALSE
354.2158FALSE
354.1194FALSE
354.2202FALSE
354.1191FALSE
354.1195FALSE
354.1228FALSE
354.1195FALSE
354.1228FALSE
354.1195FALSE
354.1228FALSE
354.1195FALSE
354.122FALSE
354.1203FALSE
354.1236FALSE
354.1196FALSE
354.1192FALSE
354.1196FALSE
354.1192FALSE
354.1196FALSE
354.1192FALSE
354.1197FALSE
354.1193FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1289FALSE
354.1194FALSE
354.1289FALSE
354.1194FALSE
354.1289FALSE
354.1196FALSE
354.12FALSE
354.1272FALSE
354.1195FALSE
354.1306FALSE
354.1195FALSE
354.1191FALSE
354.1195FALSE
354.1191FALSE
354.1197FALSE
354.1191FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1196FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.1199FALSE
354.1193FALSE
354.1194FALSE
354.1193FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1193FALSE
354.1194FALSE
354.1193FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1193FALSE
354.1194FALSE
354.1193FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1192FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1192FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1192FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1192FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1192FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1192FALSE
354.1192FALSE
354.12FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1192FALSE
354.1196FALSE
354.1192FALSE
354.12FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1192FALSE
354.1196FALSE
354.1192FALSE
354.1191FALSE
354.12FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1192FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1192FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1191FALSE
354.1194FALSE
354.1191FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1192FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1191FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
354.1191FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1192FALSE
354.1194FALSE
354.1191FALSE
354.1196FALSE
354.1191FALSE
354.12FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                3.919848                -2.117625 

$value
[1] 354.1194

$counts
function gradient 
      41       41 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

354.1191FALSE
354.1192FALSE
354.1192FALSE
354.1191FALSE
354.1191FALSE
354.1191FALSE
354.1192FALSE
354.1192FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                6.515981                -2.117198 

$value
[1] 354.1191

$counts
function gradient 
      44       44 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1166.367    1.090  832.663 
