
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
335.6092FALSE
288.522FALSE
336.5028FALSE
335.5931FALSE
288.5157FALSE
336.4903FALSE
335.6253FALSE
336.5152FALSE
344.8494FALSE
288.5283FALSE
344.6787FALSE
344.877FALSE
284.785FALSE
344.8217FALSE
344.706FALSE
334.2257FALSE
284.7936FALSE
334.2286FALSE
344.6513FALSE
284.7765FALSE
334.2228FALSE
335.278FALSE
285.9813FALSE
334.1133FALSE
335.2793FALSE
285.9756FALSE
334.1158FALSE
335.2766FALSE
285.987FALSE
334.1131FALSE
335.2493FALSE
385.9846FALSE
334.1248FALSE
335.25FALSE
334.1241FALSE
385.9856FALSE
335.2487FALSE
334.1256FALSE
335.2378FALSE
334.1117FALSE
385.9836FALSE
334.1118FALSE
335.2381FALSE
285.3279FALSE
334.112FALSE
335.2375FALSE
285.323FALSE
335.2327FALSE
334.1118FALSE
285.3327FALSE
335.2329FALSE
334.1119FALSE
292.2193FALSE
334.1118FALSE
335.2326FALSE
292.2667FALSE
334.1117FALSE
335.2699FALSE
292.1719FALSE
335.2677FALSE
334.1118FALSE
334.1119FALSE
335.2722FALSE
284.4708FALSE
334.1117FALSE
284.4678FALSE
335.2324FALSE
334.1119FALSE
335.2326FALSE
284.4739FALSE
334.1119FALSE
335.2323FALSE
286.4201FALSE
335.2469FALSE
334.1117FALSE
286.4434FALSE
335.2447FALSE
334.1118FALSE
286.3969FALSE
335.2491FALSE
334.1119FALSE
284.2901FALSE
335.232FALSE
334.1117FALSE
284.289FALSE
335.2321FALSE
334.1118FALSE
335.2318FALSE
284.2912FALSE
334.1119FALSE
335.2734FALSE
284.332FALSE
334.1117FALSE
335.2712FALSE
284.3344FALSE
334.1118FALSE
335.2757FALSE
284.3296FALSE
334.1119FALSE
335.2318FALSE
284.2816FALSE
334.1117FALSE
335.232FALSE
335.2317FALSE
334.1118FALSE
284.2816FALSE
335.2519FALSE
334.1119FALSE
284.2816FALSE
335.2497FALSE
334.1117FALSE
284.2816FALSE
335.2541FALSE
334.1118FALSE
284.2816FALSE
334.1119FALSE
284.2816FALSE
335.2318FALSE
334.1117FALSE
284.2816FALSE
335.2316FALSE
334.1118FALSE
284.2816FALSE
335.2389FALSE
334.1119FALSE
284.2816FALSE
335.2367FALSE
334.1117FALSE
335.241FALSE
334.1118FALSE
284.2816FALSE
335.2314FALSE
334.1119FALSE
284.2816FALSE
335.2315FALSE
334.1117FALSE
284.2816FALSE
335.2313FALSE
334.1118FALSE
284.2816FALSE
334.1119FALSE
335.2745FALSE
284.2816FALSE
334.1117FALSE
335.2723FALSE
284.2816FALSE
334.1118FALSE
335.2768FALSE
284.2816FALSE
335.2313FALSE
334.1119FALSE
284.2816FALSE
335.2315FALSE
334.1117FALSE
284.2816FALSE
334.1118FALSE
335.2312FALSE
284.2816FALSE
334.1119FALSE
284.2816FALSE
335.2553FALSE
334.1117FALSE
335.2532FALSE
284.2816FALSE
334.1118FALSE
284.2816FALSE
335.2575FALSE
334.1119FALSE
284.2816FALSE
335.2313FALSE
334.1117FALSE
284.2816FALSE
335.2314FALSE
334.1118FALSE
335.2312FALSE
284.2816FALSE
334.1119FALSE
335.2433FALSE
284.2816FALSE
334.1117FALSE
335.2412FALSE
284.2816FALSE
334.1118FALSE
335.2455FALSE
284.2816FALSE
334.1119FALSE
335.2312FALSE
284.2816FALSE
334.1117FALSE
335.2314FALSE
284.2816FALSE
$par
time_ind_lag0.bw 
       -1.437689 

$value
[1] 284.2816

$counts
function gradient 
      20       20 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

334.1118FALSE
335.2311FALSE
334.1119FALSE
335.2359FALSE
334.1117FALSE
335.2337FALSE
334.1118FALSE
335.238FALSE
334.1119FALSE
335.2311FALSE
334.1117FALSE
335.2312FALSE
334.1118FALSE
335.231FALSE
334.1119FALSE
335.2316FALSE
334.1117FALSE
335.2308FALSE
334.1118FALSE
335.2337FALSE
334.1119FALSE
335.2309FALSE
334.1117FALSE
335.2311FALSE
334.1118FALSE
335.2308FALSE
334.1119FALSE
335.2754FALSE
334.1117FALSE
335.2732FALSE
334.1118FALSE
335.2777FALSE
334.1119FALSE
335.2309FALSE
334.273FALSE
335.231FALSE
334.276FALSE
335.2308FALSE
334.27FALSE
335.2587FALSE
334.1118FALSE
335.2565FALSE
335.2609FALSE
334.1119FALSE
335.2309FALSE
334.1118FALSE
335.231FALSE
334.1117FALSE
335.2308FALSE
334.1118FALSE
335.2481FALSE
334.1119FALSE
335.2459FALSE
334.1117FALSE
335.2503FALSE
334.1118FALSE
335.2309FALSE
334.1119FALSE
335.231FALSE
334.1117FALSE
335.2308FALSE
334.1118FALSE
335.2413FALSE
334.1119FALSE
335.2391FALSE
334.1117FALSE
335.2434FALSE
334.1118FALSE
335.2309FALSE
334.1119FALSE
335.231FALSE
334.1117FALSE
335.2307FALSE
334.1118FALSE
335.2369FALSE
334.1119FALSE
335.2347FALSE
334.1117FALSE
335.239FALSE
334.1118FALSE
335.2308FALSE
334.1119FALSE
335.231FALSE
334.1117FALSE
335.2307FALSE
334.1118FALSE
335.234FALSE
334.1119FALSE
335.2319FALSE
334.1117FALSE
335.2362FALSE
334.1118FALSE
335.2308FALSE
334.1119FALSE
335.2309FALSE
334.1117FALSE
335.2309FALSE
334.1118FALSE
335.2308FALSE
334.1119FALSE
335.2309FALSE
334.1117FALSE
335.2318FALSE
335.2308FALSE
334.1118FALSE
334.1119FALSE
335.2309FALSE
334.1117FALSE
335.2309FALSE
334.1118FALSE
335.2308FALSE
334.1119FALSE
335.2309FALSE
334.1117FALSE
335.2309FALSE
$par
smooth_log_cases_lag0.bw 
               -2.104758 

$value
[1] 335.2308

$counts
function gradient 
      41       41 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

334.1118FALSE
334.1119FALSE
334.1117FALSE
334.1118FALSE
334.1119FALSE
334.1117FALSE
334.1118FALSE
334.1119FALSE
$par
smooth_log_cases_lag1.bw 
                -2.08051 

$value
[1] 334.1117

$counts
function gradient 
      44       44 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

293.3068FALSE
296.24FALSE
293.2891FALSE
296.2169FALSE
296.2631FALSE
293.3244FALSE
296.2531FALSE
293.321FALSE
296.2272FALSE
293.2925FALSE
289.7173FALSE
287.2247FALSE
289.7147FALSE
287.2253FALSE
289.7199FALSE
287.2244FALSE
289.7114FALSE
287.2197FALSE
289.7232FALSE
287.2299FALSE
288.3201FALSE
286.477FALSE
288.3166FALSE
286.4753FALSE
288.3239FALSE
286.4788FALSE
288.315FALSE
286.4739FALSE
288.3252FALSE
286.4801FALSE
292.359FALSE
285.9231FALSE
292.3566FALSE
285.9214FALSE
292.3614FALSE
285.9248FALSE
292.394FALSE
285.9274FALSE
292.3241FALSE
285.9189FALSE
285.7421FALSE
286.9716FALSE
285.74FALSE
286.968FALSE
285.7442FALSE
286.975FALSE
285.7412FALSE
286.9706FALSE
285.743FALSE
286.9725FALSE
285.6666FALSE
291.194FALSE
285.6635FALSE
291.1931FALSE
285.6698FALSE
291.1948FALSE
285.6706FALSE
291.2299FALSE
285.6627FALSE
291.1581FALSE
285.3321FALSE
286.6578FALSE
285.331FALSE
286.6552FALSE
285.3331FALSE
286.6604FALSE
285.3332FALSE
286.6617FALSE
285.3309FALSE
285.2051FALSE
286.654FALSE
285.2027FALSE
286.1874FALSE
285.2075FALSE
286.1849FALSE
285.2062FALSE
286.1899FALSE
285.2041FALSE
286.1888FALSE
285.0981FALSE
286.1863FALSE
285.0983FALSE
284.6502FALSE
285.0979FALSE
284.6498FALSE
285.0983FALSE
284.6505FALSE
285.0979FALSE
284.6475FALSE
285.1244FALSE
284.6528FALSE
285.1242FALSE
284.5481FALSE
285.1246FALSE
284.5478FALSE
285.1237FALSE
284.5484FALSE
285.1251FALSE
284.5455FALSE
285.095FALSE
284.5508FALSE
285.0953FALSE
285.0947FALSE
284.8265FALSE
285.0952FALSE
284.8264FALSE
285.0949FALSE
284.8265FALSE
285.0969FALSE
284.8351FALSE
285.0964FALSE
284.8178FALSE
285.0974FALSE
284.3462FALSE
285.0966FALSE
284.3461FALSE
285.0973FALSE
284.3463FALSE
285.0947FALSE
284.3472FALSE
285.0946FALSE
284.3451FALSE
285.095FALSE
284.3351FALSE
285.0948FALSE
284.335FALSE
285.0945FALSE
284.3352FALSE
285.0959FALSE
285.096FALSE
284.3346FALSE
285.0958FALSE
284.3356FALSE
285.0957FALSE
284.3162FALSE
285.0964FALSE
284.3161FALSE
285.0946FALSE
284.3163FALSE
285.0949FALSE
284.316FALSE
285.0944FALSE
285.0947FALSE
284.3167FALSE
285.0945FALSE
284.2967FALSE
285.0962FALSE
284.2967FALSE
285.0962FALSE
284.2967FALSE
285.0968FALSE
284.2968FALSE
285.0958FALSE
284.2967FALSE
285.0967FALSE
284.2896FALSE
285.0945FALSE
284.2896FALSE
285.0948FALSE
284.2896FALSE
285.0944FALSE
284.2897FALSE
285.0945FALSE
284.2896FALSE
285.0944FALSE
285.0962FALSE
284.2855FALSE
285.0963FALSE
284.2855FALSE
285.0968FALSE
284.2855FALSE
285.0958FALSE
284.2855FALSE
285.0967FALSE
284.2855FALSE
285.0944FALSE
284.2836FALSE
285.0947FALSE
284.2836FALSE
285.0944FALSE
284.2836FALSE
285.0945FALSE
284.2836FALSE
285.0944FALSE
284.2836FALSE
285.0944FALSE
285.1383FALSE
285.0947FALSE
285.1383FALSE
285.0944FALSE
285.0945FALSE
285.1383FALSE
285.0944FALSE
285.1337FALSE
285.0965FALSE
285.1429FALSE
285.0965FALSE
284.2836FALSE
285.097FALSE
284.2835FALSE
285.096FALSE
284.2836FALSE
285.0969FALSE
284.2835FALSE
285.0944FALSE
284.2836FALSE
285.0947FALSE
284.2826FALSE
285.0944FALSE
284.2826FALSE
285.0944FALSE
284.2826FALSE
285.0945FALSE
284.2826FALSE
285.0942FALSE
284.2826FALSE
285.0945FALSE
284.2821FALSE
284.2821FALSE
285.0945FALSE
284.2821FALSE
285.0943FALSE
284.2821FALSE
285.0944FALSE
284.2821FALSE
285.0942FALSE
284.2818FALSE
285.0945FALSE
284.2818FALSE
285.0946FALSE
284.2818FALSE
285.0943FALSE
284.2819FALSE
285.0943FALSE
284.2818FALSE
285.0942FALSE
284.2817FALSE
285.0945FALSE
284.2817FALSE
285.0945FALSE
284.2817FALSE
285.0943FALSE
284.2817FALSE
285.0944FALSE
284.2817FALSE
285.0942FALSE
284.2817FALSE
285.0945FALSE
284.2817FALSE
285.0945FALSE
284.2817FALSE
285.0943FALSE
284.2817FALSE
285.0944FALSE
284.2817FALSE
285.0942FALSE
284.2902FALSE
285.0945FALSE
284.2902FALSE
285.0945FALSE
284.2902FALSE
285.0943FALSE
284.2913FALSE
285.0944FALSE
284.2892FALSE
285.0942FALSE
284.2817FALSE
285.0945FALSE
284.2817FALSE
285.0945FALSE
284.2817FALSE
285.0943FALSE
284.2817FALSE
285.0944FALSE
284.2817FALSE
285.0942FALSE
284.2816FALSE
285.0945FALSE
284.2816FALSE
285.0945FALSE
284.2816FALSE
285.0943FALSE
284.2817FALSE
285.0944FALSE
284.2817FALSE
285.0942FALSE
284.2817FALSE
285.0945FALSE
285.0945FALSE
284.2817FALSE
285.0943FALSE
284.2817FALSE
285.0944FALSE
284.2817FALSE
285.0942FALSE
284.2817FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                4.709202                -1.437371 

$value
[1] 284.2817

$counts
function gradient 
      29       29 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.1212FALSE
285.1214FALSE
285.1209FALSE
285.1226FALSE
285.1198FALSE
285.0943FALSE
285.0947FALSE
285.0946FALSE
285.0944FALSE
285.0943FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0943FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
285.0942FALSE
285.0945FALSE
285.0945FALSE
285.0943FALSE
285.0944FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
              -0.8071018               -1.4974385 

$value
[1] 285.0942

$counts
function gradient 
      63       63 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1123.478    0.954 1134.385 
