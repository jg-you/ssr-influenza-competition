
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
706.1053FALSE
872.3826FALSE
886.7813FALSE
872.3961FALSE
706.0943FALSE
886.7926FALSE
872.3691FALSE
886.77FALSE
706.1162FALSE
873.1393FALSE
895.0347FALSE
706.2118FALSE
873.125FALSE
895.0108FALSE
706.2567FALSE
873.1536FALSE
895.0586FALSE
706.1671FALSE
867.2958FALSE
885.1249FALSE
700.8177FALSE
867.299FALSE
700.8131FALSE
885.1268FALSE
867.2927FALSE
700.8224FALSE
885.123FALSE
867.5729FALSE
705.0324FALSE
885.0513FALSE
867.5655FALSE
705.0722FALSE
885.0521FALSE
867.5804FALSE
704.9927FALSE
885.0508FALSE
867.1962FALSE
885.0444FALSE
700.4832FALSE
867.1964FALSE
885.0444FALSE
700.482FALSE
867.196FALSE
885.0445FALSE
867.1955FALSE
700.4843FALSE
885.0444FALSE
867.1956FALSE
700.4533FALSE
885.0444FALSE
867.1954FALSE
700.4524FALSE
885.0444FALSE
867.1952FALSE
700.4541FALSE
867.1952FALSE
885.0444FALSE
867.1952FALSE
885.0444FALSE
700.934FALSE
867.1952FALSE
885.0444FALSE
$par
smooth_log_cases_lag0.bw 
               -2.638839 

$value
[1] 885.0444

$counts
function gradient 
       7        7 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

700.9457FALSE
867.1952FALSE
700.9224FALSE
867.1952FALSE
$par
smooth_log_cases_lag1.bw 
               -2.821233 

$value
[1] 867.1952

$counts
function gradient 
       8        8 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

700.4572FALSE
700.4582FALSE
700.4561FALSE
700.4517FALSE
700.4521FALSE
700.4514FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
700.4514FALSE
700.4517FALSE
700.4517FALSE
$par
time_ind_lag0.bw 
       -1.610193 

$value
[1] 700.4514

$counts
function gradient 
      45       45 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

751.0483FALSE
746.8841FALSE
746.8376FALSE
751.0044FALSE
746.9307FALSE
751.0921FALSE
746.9221FALSE
751.0854FALSE
746.8462FALSE
751.0113FALSE
717.6611FALSE
719.651FALSE
717.6363FALSE
719.6286FALSE
717.6857FALSE
719.6733FALSE
717.6522FALSE
719.6423FALSE
717.6698FALSE
719.6596FALSE
705.022FALSE
705.3351FALSE
705.0242FALSE
705.3453FALSE
705.0199FALSE
705.3249FALSE
705.012FALSE
705.3217FALSE
705.032FALSE
705.3485FALSE
703.6106FALSE
706.7879FALSE
703.6151FALSE
706.7622FALSE
703.6061FALSE
706.8137FALSE
703.6023FALSE
706.7886FALSE
703.619FALSE
706.7879FALSE
882.8768FALSE
705.4129FALSE
882.8896FALSE
705.3984FALSE
882.864FALSE
705.4274FALSE
882.8894FALSE
705.4081FALSE
882.8642FALSE
705.4177FALSE
703.1414FALSE
705.2312FALSE
703.1359FALSE
705.2243FALSE
703.1468FALSE
705.2382FALSE
703.135FALSE
705.2231FALSE
703.148FALSE
705.2394FALSE
703.2594FALSE
703.7304FALSE
703.2454FALSE
703.7345FALSE
703.2734FALSE
703.7262FALSE
703.2677FALSE
703.7252FALSE
703.2512FALSE
703.7355FALSE
702.8319FALSE
703.4798FALSE
702.8177FALSE
703.4759FALSE
702.8461FALSE
703.4836FALSE
702.8328FALSE
703.4828FALSE
702.8311FALSE
703.4767FALSE
702.4089FALSE
703.4089FALSE
702.3991FALSE
703.4058FALSE
702.4188FALSE
703.4119FALSE
702.413FALSE
703.4105FALSE
702.4048FALSE
703.4073FALSE
702.4447FALSE
703.4853FALSE
702.447FALSE
703.4887FALSE
702.4425FALSE
703.4817FALSE
702.4434FALSE
703.4816FALSE
703.488FFALS

703.4065FALSE
702.3315FALSE
702.335FALSE
703.4035FALSE
702.3279FALSE
703.4094FALSE
702.3302FALSE
703.4069FALSE
702.3327FALSE
703.406FALSE
702.3227FALSE
703.4166FALSE
702.3185FALSE
702.3269FALSE
703.4202FALSE
702.3253FALSE
703.4131FALSE
702.3201FALSE
703.4151FALSE
702.3215FALSE
702.3252FALSE
703.4182FALSE
702.3178FALSE
703.4039FALSE
702.3202FALSE
703.4067FALSE
702.3228FALSE
703.4069FALSE
702.3174FALSE
703.4044FALSE
702.3199FALSE
703.4045FALSE
702.3216FALSE
703.4038FALSE
702.32FALSE
703.4065FALSE
702.3174FALSE
702.3145FALSE
703.4068FALSE
702.3105FALSE
703.4043FALSE
702.3185FALSE
703.4043FALSE
702.316FALSE
703.4028FALSE
702.313FALSE
703.4059FALSE
702.3146FALSE
703.4059FALSE
702.3186FALSE
703.4033FALSE
702.3106FALSE
702.3132FALSE
703.4038FALSE
702.3166FALSE
703.4061FALSE
702.3097FALSE
703.4096FALSE
702.3138FALSE
702.3133FALSE
703.4082FALSE
702.311FALSE
703.4067FALSE
702.3122FALSE
703.4065FALSE
702.3137FALSE
703.4025FALSE
702.3176FALSE
703.4057FALSE
702.3167FALSE
703.4056FALSE
702.3152FALSE
702.3151FALSE
703.403FALSE
703.4036FALSE
702.3095FALSE
702.3135FALSE
703.4023FALSE
702.313FALSE
703.4056FALSE
702.3115FALSE
703.4053FALSE
702.3118FALSE
703.4033FALSE
702.3093FALSE
703.4035FALSE
702.3132FALSE
703.404FALSE
702.3133FALSE
703.4071FALSE
702.3118FALSE
703.4071FALSE
702.3115FALSE
703.4056FALSE
702.3095FALSE
703.404FALSE
702.3128FALSE
703.4022FALSE
702.3135FALSE
703.4055FALSE
702.3121FALSE
703.4052FALSE
702.3113FALSE
703.4034FALSE
702.3093FALSE
703.4034FALSE
702.3132FALSE
702.3133FALSE
703.4023FALSE
702.3118FALSE
703.4054FALSE
702.3115FALSE
703.4054FALSE
702.3093FALSE
703.4035FALSE
702.3132FALSE
703.4033FALSE
702.3133FALSE
703.4022FALSE
702.3118FALSE
703.4055FALSE
702.3115FALSE
703.4052FALSE
702.3093FALSE
703.4034FALSE
702.3132FALSE
703.4034FALSE
702.3133FALSE
703.4022FALSE
702.3118FALSE
703.4055FALSE
702.3115FALSE
702.3093FALSE
703.4052FALSE
702.3132FALSE
703.4034FALSE
702.3133FALSE
703.4034FALSE
702.3118FALSE
703.4022FALSE
702.3115FALSE
703.4055FALSE
702.3093FALSE
703.4052FALSE
702.3132FALSE
703.4034FALSE
703.4034FALSE
702.3133FALSE
703.4022FALSE
702.3118FALSE
703.4055FALSE
702.3115FALSE
702.3093FALSE
703.4052FALSE
702.3132FALSE
703.4034FALSE
702.3133FALSE
703.4034FALSE
702.3118FALSE
703.4022FALSE
702.3115FALSE
703.4055FALSE
702.3093FALSE
703.4052FALSE
702.3132FALSE
703.4034FALSE
702.3133FALSE
702.3118FALSE
703.4034FALSE
702.3115FALSE
703.4022FALSE
702.3093FALSE
703.4055FALSE
702.3132FALSE
703.4052FALSE
702.3133FALSE
703.4034FALSE
702.3118FALSE
703.4034FALSE
702.3115FALSE
703.4022FALSE
702.3093FALSE
703.4055FALSE
702.3132FALSE
703.4052FALSE
702.3133FALSE
703.4034FALSE
702.3118FALSE
703.4034FALSE
702.3115FALSE
703.4022FALSE
703.4055FALSE
702.3093FALSE
703.4052FALSE
702.3132FALSE
703.4034FALSE
702.3133FALSE
703.4034FALSE
702.3118FALSE
703.4022FALSE
702.3115FALSE
702.3093FALSE
703.4055FALSE
702.3132FALSE
703.4052FALSE
702.3133FALSE
703.4034FALSE
702.3118FALSE
703.4034FALSE
702.3115FALSE
703.4022FALSE
702.3093FALSE
703.4055FALSE
702.3132FALSE
703.4052FALSE
702.3133FALSE
703.4034FALSE
702.3118FALSE
703.4034FALSE
702.3115FALSE
703.4022FALSE
702.3093FALSE
703.4055FALSE
702.3132FALSE
703.4052FALSE
702.3133FALSE
703.4034FALSE
702.3118FALSE
703.4034FALSE
702.3115FALSE
703.4022FALSE
702.3093FALSE
703.4055FALSE
702.3132FALSE
703.4052FALSE
702.3133FALSE
703.4034FALSE
702.3118FALSE
703.4034FALSE
702.3115FALSE
703.4022FALSE
702.3093FALSE
703.4055FALSE
702.3132FALSE
703.4052FALSE
702.3133FALSE
703.4034FALSE
702.3118FALSE
703.4034FALSE
702.3115FALSE
702.3093FALSE
703.4022FALSE
702.3132FALSE
703.4055FALSE
702.3133FALSE
703.4052FALSE
702.3118FALSE
703.4034FALSE
702.3115FALSE
703.4034FALSE
702.3093FALSE
703.4022FALSE
702.3132FALSE
703.4055FALSE
702.3133FALSE
703.4052FALSE
702.3118FALSE
702.3115FALSE
703.4034FALSE
702.3093FALSE
703.4034FALSE
702.3132FALSE
703.4022FALSE
702.3133FALSE
703.4055FALSE
702.3118FALSE
702.3115FALSE
703.4052FALSE
702.3093FALSE
703.4034FALSE
702.3132FALSE
703.4034FALSE
702.3133FALSE
703.4022FALSE
702.3118FALSE
703.4055FALSE
702.3115FALSE
703.4052FALSE
703.245FALSE
703.4034FALSE
703.2476FALSE
703.4034FALSE
703.2423FALSE
703.4022FALSE
703.2389FALSE
703.4055FALSE
703.2511FALSE
703.4052FALSE
702.3136FALSE
703.4034FALSE
702.3176FALSE
702.31FALSE
703.4034FALSE
702.3111FALSE
703.4022FALSE
702.316FALSE
703.4055FALSE
702.3093FALSE
703.4052FALSE
702.3133FALSE
703.4034FALSE
702.3132FALSE
703.4034FALSE
702.3118FALSE
705.0723FALSE
702.3116FALSE
705.0528FALSE
702.3093FALSE
705.0918FALSE
702.3133FALSE
705.0813FALSE
702.3132FALSE
705.0633FALSE
702.3117FALSE
703.4039FALSE
702.3116FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
              -0.7766831               -1.7950600 

$value
[1] 702.3093

$counts
function gradient 
      44       44 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

703.4034FALSE
703.4069FALSE
703.4052FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4053FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
703.4022FALSE
703.4055FALSE
703.4052FALSE
703.4034FALSE
703.4034FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
              -0.7962005               -1.8394248 

$value
[1] 703.4022

$counts
function gradient 
      56       56 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
 911.624    0.610 1006.363 
