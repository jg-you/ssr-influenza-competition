
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
451.9593FALSE
613.6847FALSE
605.1736FALSE
451.9551FALSE
605.1584FALSE
451.9635FALSE
613.6707FALSE
451.0107FALSE
613.6988FALSE
605.1887FALSE
451.025FALSE
450.9964FALSE
590.4721FALSE
596.7206FALSE
596.7076FALSE
451.023FALSE
590.4647FALSE
590.4796FALSE
451.019FALSE
596.7336FALSE
593.4816FALSE
451.027FALSE
597.2461FALSE
593.4878FALSE
449.2966FALSE
597.2461FALSE
593.4755FALSE
449.2958FALSE
597.2461FALSE
589.494FALSE
449.2974FALSE
597.2461FALSE
589.4932FALSE
449.5966FALSE
597.2461FALSE
449.6035FALSE
589.4948FALSE
449.5898FALSE
597.2461FALSE
589.482FALSE
449.2792FALSE
597.2459FALSE
589.4819FALSE
449.2789FALSE
589.4821FALSE
597.2459FALSE
449.2795FALSE
597.2459FALSE
589.4818FALSE
449.2752FALSE
589.4818FALSE
449.2754FALSE
597.2453FALSE
449.275FALSE
589.4818FALSE
597.2453FALSE
449.276FALSE
589.4818FALSE
449.2758FALSE
597.2453FALSE
589.4818FALSE
449.2762FALSE
589.4818FALSE
$par
smooth_log_cases_lag0.bw 
               -1.034129 

$value
[1] 589.4818

$counts
function gradient 
       7        7 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

597.2419FALSE
449.2748FALSE
449.275FALSE
597.2419FALSE
449.275FALSE
597.2419FALSE
449.2748FALSE
597.1945FALSE
449.275FALSE
597.1946FALSE
449.275FALSE
597.1944FALSE
449.2748FALSE
612.1137FALSE
449.275FALSE
612.0979FALSE
449.275FALSE
612.1294FALSE
597.0658FALSE
449.2748FALSE
597.0662FALSE
449.275FALSE
449.275FALSE
597.0654FALSE
596.7271FALSE
449.2748FALSE
596.7282FALSE
449.275FALSE
596.7261FALSE
449.275FALSE
593.9101FALSE
449.2748FALSE
593.909FALSE
449.275FALSE
593.9112FALSE
449.275FALSE
595.5327FALSE
449.2748FALSE
595.5356FALSE
449.275FALSE
595.5298FALSE
449.275FALSE
593.8791FALSE
449.2748FALSE
593.8791FALSE
449.275FALSE
449.275FALSE
593.8791FALSE
449.2748FALSE
593.8791FALSE
449.275FALSE
593.8791FALSE
593.8791FALSE
449.275FALSE
593.8799FALSE
449.2748FALSE
449.275FALSE
593.8797FALSE
449.275FALSE
593.8801FALSE
449.2748FALSE
593.8791FALSE
449.275FALSE
593.8791FALSE
449.275FALSE
593.8791FALSE
449.2748FALSE
593.8791FALSE
449.275FALSE
593.8791FALSE
449.275FALSE
593.8791FALSE
$par
smooth_log_cases_lag1.bw 
              -0.8597952 

$value
[1] 593.8791

$counts
function gradient 
      18       18 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
$par
time_ind_lag0.bw 
       -1.539421 

$value
[1] 449.2748

$counts
function gradient 
      27       27 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

477.1264FALSE
476.8194FALSE
477.1116FALSE
476.8019FALSE
477.1411FALSE
476.8369FALSE
477.1226FALSE
476.8182FALSE
477.1302FALSE
476.8207FALSE
458.5554FALSE
460.0469FALSE
458.5378FALSE
460.0297FALSE
458.5729FALSE
460.0641FALSE
458.5594FALSE
460.0676FALSE
458.5523FALSE
460.0263FALSE
453.3852FALSE
555.8622FALSE
453.3852FALSE
555.8622FALSE
555.8622FALSE
453.3852FALSE
555.9354FALSE
453.4186FALSE
555.7888FALSE
453.3532FALSE
456.9229FALSE
453.9187FALSE
456.9206FALSE
453.9187FALSE
456.9252FALSE
453.9187FALSE
456.9676FALSE
453.9165FALSE
456.8783FALSE
453.9209FALSE
451.1121FALSE
449.8265FALSE
451.1103FALSE
451.1139FALSE
449.8265FALSE
451.1236FALSE
449.8265FALSE
451.1006FALSE
449.8223FALSE
449.8307FALSE
450.1962FALSE
450.1947FALSE
449.5521FALSE
450.1978FALSE
449.5521FALSE
450.2021FALSE
449.5521FALSE
450.1903FALSE
449.5482FALSE
449.6695FALSE
449.556FALSE
449.6688FALSE
449.4957FALSE
449.6702FALSE
449.4957FALSE
449.6705FALSE
449.4957FALSE
449.6685FALSE
449.5012FALSE
449.5845FALSE
449.4902FALSE
449.584FALSE
449.306FALSE
449.585FALSE
449.306FALSE
449.5844FALSE
449.5846FALSE
449.306FALSE
449.5238FALSE
449.3052FALSE
449.5234FALSE
449.3069FALSE
449.5242FALSE
449.2809FALSE
449.5234FALSE
449.2809FALSE
449.5241FALSE
449.2809FALSE
449.4559FALSE
449.2806FALSE
449.2812FALSE
449.4557FALSE
449.2764FALSE
449.4561FALSE
449.2764FALSE
449.4544FALSE
449.2764FALSE
449.4574FALSE
449.2766FALSE
449.4008FALSE
449.2762FALSE
449.4006FALSE
449.2771FALSE
449.4009FALSE
449.2771FALSE
449.3999FALSE
449.2771FALSE
449.4017FALSE
449.2769FALSE
449.3237FALSE
449.2773FALSE
449.3237FALSE
449.2758FALSE
449.3238FALSE
449.2758FALSE
449.323FALSE
449.3245FALSE
449.2758FALSE
449.2997FALSE
449.2759FALSE
449.2997FALSE
449.2759FALSE
449.2997FALSE
449.3008FALSE
449.2758FALSE
449.2986FALSE
449.2758FALSE
449.2955FALSE
449.2758FALSE
449.2955FALSE
449.2759FALSE
449.276FALSE
449.2955FALSE
449.2758FALSE
449.2953FALSE
449.2957FALSE
449.2758FALSE
449.2894FALSE
449.2758FALSE
449.2894FALSE
449.2759FALSE
449.2894FALSE
449.2759FALSE
449.2899FALSE
449.2758FALSE
449.289FALSE
449.2758FALSE
449.286FALSE
449.2758FALSE
449.286FALSE
449.2759FALSE
449.2861FALSE
449.2759FALSE
449.2863FALSE
449.2758FALSE
449.2858FALSE
449.2758FALSE
449.2836FALSE
449.2758FALSE
449.2836FALSE
449.2759FALSE
449.2837FALSE
449.2759FALSE
449.2834FALSE
449.2758FALSE
449.2838FALSE
449.2758FALSE
449.2805FALSE
449.2758FALSE
449.2759FALSE
449.2805FALSE
449.2759FALSE
449.2805FALSE
449.2758FALSE
449.2804FALSE
449.2758FALSE
449.2807FALSE
449.2758FALSE
449.278FALSE
449.2759FALSE
449.278FALSE
449.2759FALSE
449.278FALSE
449.2758FALSE
449.2782FALSE
449.2758FALSE
449.2778FALSE
449.2758FALSE
449.2768FALSE
449.2759FALSE
449.2768FALSE
449.2759FALSE
449.2768FALSE
449.2758FALSE
449.277FALSE
449.2758FALSE
449.2766FALSE
449.2758FALSE
449.2791FALSE
449.2759FALSE
449.2791FALSE
449.2759FALSE
449.2791FALSE
449.2758FALSE
449.2788FALSE
449.2758FALSE
449.2794FALSE
449.2758FALSE
449.2763FALSE
449.2759FALSE
449.2763FALSE
449.2759FALSE
449.2763FALSE
449.2758FALSE
449.2761FALSE
449.2757FALSE
449.2765FALSE
449.2758FALSE
449.2757FALSE
449.2759FALSE
449.2759FALSE
449.2757FALSE
449.2757FALSE
449.2758FALSE
449.2756FALSE
449.2757FALSE
449.2758FALSE
449.2758FALSE
449.2759FALSE
449.2757FALSE
449.2759FALSE
449.2757FALSE
449.2758FALSE
449.2757FALSE
449.2758FALSE
449.2759FALSE
449.2758FALSE
449.2755FALSE
449.2759FALSE
449.2753FALSE
449.2759FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                3.238826                -1.539482 

$value
[1] 449.2758

$counts
function gradient 
      24       24 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

449.2753FALSE
449.2753FALSE
449.2755FALSE
449.2751FALSE
449.2758FALSE
449.2758FALSE
449.2758FALSE
449.2756FALSE
449.276FALSE
449.2751FALSE
449.2751FALSE
449.2751FALSE
449.2751FALSE
449.2753FALSE
449.275FALSE
449.275FALSE
449.275FALSE
449.2752FALSE
449.2751FALSE
449.2749FALSE
449.2749FALSE
449.2749FALSE
449.2751FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2756FALSE
449.2756FALSE
449.2756FALSE
449.2755FALSE
449.2758FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
449.2748FALSE
449.2748FALSE
449.2748FALSE
449.275FALSE
449.275FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                5.301511                -1.539418 

$value
[1] 449.2748

$counts
function gradient 
      65       65 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
   user  system elapsed 
657.455   0.827 974.883 
