
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### get ssr fit -- prediction horizons 1:52
> library(lubridate)
> library(ggplot2)
> library(plyr)

Attaching package: ‘plyr’

The following object is masked from ‘package:lubridate’:

    here

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(reshape)

Attaching package: ‘reshape’

The following object is masked from ‘package:dplyr’:

    rename

The following objects are masked from ‘package:plyr’:

    rename, round_any

The following object is masked from ‘package:lubridate’:

    stamp

> library(ssrFlu)
> library(doMC)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> 
> registerDoMC(cores=3)
> 
> args <- commandArgs(trailingOnly=TRUE)
> 
> data_set <- args[1]
> prediction_horizon_limit <- as.integer(args[2])
> 
> ## load dataset
> if(identical(data_set, "ili_national")) {
+     data <- ili_national
+ } 
> if(identical(data_set, "ili_region1")) {
+     data <- ili_region1
+ } 
> if(identical(data_set, "ili_region2")) {
+     data <- ili_region2
+ } 
> if(identical(data_set, "ili_region3")) {
+     data <- ili_region3
+ } 
> if(identical(data_set, "ili_region4")) {
+     data <- ili_region4
+ } 
> if(identical(data_set, "ili_region5")) {
+     data <- ili_region5
+ } 
> if(identical(data_set, "ili_region6")) {
+     data <- ili_region6
+ } 
> if(identical(data_set, "ili_region7")) {
+     data <- ili_region7
+ } 
> if(identical(data_set, "ili_region8")) {
+     data <- ili_region8
+ } 
> if(identical(data_set, "ili_region9")) {
+     data <- ili_region9
+ } 
> if(identical(data_set, "ili_region10")) {
+     data <- ili_region10
+ } 
> 
> 
> 
> ## add log column
> data$log_total_cases <- log(data$total_cases + 1)
> 
> ## add week_start_date
> char_dates <- paste(data$year, data$week, "1")
> data$week_start_date <- as.Date(char_dates, format="%Y %W %w")
> 
> ## remove week 53s
> data <- data[-which(is.na(data$week_start_date)),]
> data <- data[262:nrow(data),]
> 
> ## add smooth log column -- or not, since it is already pretty smooth...
> sm <- loess(log_total_cases ~ as.numeric(week_start_date), data=data, span= 26 / nrow(data))
> data$smooth_log_cases <- sm$fitted
> 
> ## add time column
> data$time_ind <- seq_len(nrow(data))
> 
> ssr_control <- create_ssr_control(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     max_lag=list(smooth_log_cases=1,
+         time_ind=0),
+     prediction_horizons=as.integer(prediction_horizon_limit),
+     kernel_fns=list(smooth_log_cases="squared_exp_kernel",
+         time_ind="periodic_kernel"),
+     theta_est=list(smooth_log_cases="bw",
+         time_ind="bw"),
+     theta_fixed=list(time_ind=list(period=pi / 52)),
+     theta_transform_fns=list(
+         squared_exp_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         ),
+         periodic_kernel=list(
+             bw=list(transform="log",
+                 detransform="exp")
+         )
+     ),
+     crossval_buffer=52,
+     loss_fn_name="mae_from_kernel_weights_and_centers",
+     loss_fn_args=list())
> 
> 
> ssr_fit <- ssr(X_names=c("smooth_log_cases", "time_ind"),
+     y_names="total_cases",
+     time_name=NULL,
+     data=data,
+     ssr_control=ssr_control)
871.9548FALSE
876.2249FALSE
700.4063FALSE
871.9578FALSE
876.2092FALSE
700.3952FALSE
871.9524FALSE
876.2406FALSE
700.4173FALSE
876.1824FALSE
882.5139FALSE
700.0969FALSE
876.1701FALSE
882.5532FALSE
876.1947FALSE
700.1429FALSE
882.4745FALSE
870.0297FALSE
700.0511FALSE
872.7217FALSE
870.046FALSE
698.1023FALSE
872.7214FALSE
870.0133FALSE
872.722FALSE
868.0286FALSE
698.0927FALSE
872.7203FALSE
868.0418FALSE
698.1118FALSE
868.0152FALSE
872.7202FALSE
768.5903FALSE
872.0699FALSE
872.7203FALSE
768.8522FALSE
872.7202FALSE
872.0414FALSE
872.7203FALSE
872.0983FALSE
768.3284FALSE
872.7203FALSE
867.1603FALSE
695.5192FALSE
867.157FALSE
872.7202FALSE
695.5125FALSE
867.1635FALSE
872.7203FALSE
695.5258FALSE
867.1385FALSE
872.7203FALSE
$par
smooth_log_cases_lag0.bw 
                -1.89846 

$value
[1] 872.7202

$counts
function gradient 
       6        6 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

716.9669FALSE
867.1393FALSE
717.101FALSE
867.1376FALSE
716.8331FALSE
868.8673FALSE
694.6377FALSE
868.8476FALSE
694.6348FALSE
868.887FALSE
867.1309FALSE
694.6407FALSE
867.1314FALSE
695.0605FALSE
867.1326FALSE
867.1331FALSE
695.0711FALSE
867.1334FALSE
695.0499FALSE
867.1327FALSE
694.5897FALSE
867.1313FALSE
867.1318FALSE
694.5901FALSE
867.1307FALSE
694.5894FALSE
867.1309FALSE
694.5895FALSE
867.1315FALSE
694.5895FALSE
867.1322FALSE
694.5896FALSE
867.1309FALSE
694.5895FALSE
867.1314FALSE
694.5894FALSE
867.1326FALSE
694.5896FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5895FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5895FALSE
867.1314FALSE
694.5894FALSE
867.1326FALSE
867.1309FALSE
694.5896FALSE
867.1314FALSE
694.5894FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5897FALSE
867.1314FALSE
694.5894FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5897FALSE
867.1314FALSE
694.5894FALSE
867.1326FALSE
694.5895FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5896FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5895FALSE
867.1314FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5893FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5893FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
867.1314FALSE
694.5893FALSE
867.1326FALSE
694.5897FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5893FALSE
867.1326FALSE
694.5897FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5894FALSE
867.1326FALSE
694.5895FALSE
867.1309FALSE
694.5895FALSE
867.1314FALSE
694.5894FALSE
867.1326FALSE
694.5897FALSE
871.9403FALSE
694.5894FALSE
871.9378FALSE
694.5893FALSE
871.9428FALSE
694.5897FALSE
867.1335FALSE
694.5894FALSE
867.1343FALSE
694.5893FALSE
867.1332FALSE
694.5897FALSE
867.1315FALSE
694.5894FALSE
867.132FALSE
694.5893FALSE
867.1309FALSE
694.5897FALSE
867.1309FALSE
694.5894FALSE
867.1315FALSE
694.5893FALSE
867.132FALSE
694.5897FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5893FALSE
867.1325FALSE
694.5897FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5893FALSE
867.1326FALSE
694.5897FALSE
694.5894FALSE
867.1309FALSE
694.5893FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5893FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5893FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
694.5894FALSE
694.5893FALSE
867.1309FALSE
867.1314FALSE
694.5897FALSE
694.5894FALSE
867.1326FALSE
867.1309FALSE
694.5893FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5893FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
694.5894FALSE
867.1309FALSE
694.5893FALSE
867.1314FALSE
694.5897FALSE
867.1326FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5893FALSE
867.1326FALSE
694.5897FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5893FALSE
867.1326FALSE
694.5897FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5893FALSE
867.1326FALSE
694.5897FALSE
867.1309FALSE
694.5894FALSE
867.1314FALSE
694.5893FALSE
867.1326FALSE
867.1309FALSE
694.5897FALSE
867.1314FALSE
694.5894FALSE
867.1326FALSE
694.5893FALSE
867.1309FALSE
694.5897FALSE
867.1314FALSE
694.5894FALSE
867.1326FALSE
695.2732FALSE
867.1309FALSE
695.2666FALSE
867.1314FALSE
695.2798FALSE
867.1326FALSE
$par
smooth_log_cases_lag1.bw 
               -2.778834 

$value
[1] 867.1309

$counts
function gradient 
      49       49 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

694.5895FALSE
694.5894FALSE
694.5896FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
694.5893FALSE
694.5897FALSE
694.5894FALSE
$par
time_ind_lag0.bw 
       -1.588996 

$value
[1] 694.5893

$counts
function gradient 
      64       64 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

748.7047FALSE
745.832FALSE
748.65FALSE
745.7811FALSE
748.7594FALSE
745.883FALSE
748.7633FALSE
745.8884FALSE
748.6462FALSE
745.7758FALSE
713.19FALSE
715.3927FALSE
713.1627FALSE
715.3765FALSE
713.2174FALSE
715.4088FALSE
713.1874FALSE
715.3744FALSE
713.1927FALSE
715.411FALSE
705.2673FALSE
709.6437FALSE
705.2627FALSE
709.6239FALSE
705.2719FALSE
709.6635FALSE
705.2554FALSE
709.6383FALSE
705.2792FALSE
709.6492FALSE
702.3823FALSE
858.5333FALSE
702.3801FALSE
858.5334FALSE
702.3844FALSE
858.5332FALSE
702.3687FALSE
858.7897FALSE
702.3959FALSE
858.2766FALSE
699.1653FALSE
699.1532FALSE
699.1597FALSE
699.1514FALSE
699.1709FALSE
699.155FALSE
699.1756FALSE
699.1496FALSE
699.1551FALSE
699.1568FALSE
698.7155FALSE
698.5745FALSE
698.7114FALSE
698.5716FALSE
698.7195FALSE
698.5774FALSE
698.7145FALSE
698.5726FALSE
698.7166FALSE
698.5763FALSE
697.334FALSE
696.9991FALSE
697.3299FALSE
696.9964FALSE
697.3382FALSE
697.0019FALSE
697.3335FALSE
697.0129FALSE
696.9854FALSE
697.3345FALSE
697.3214FALSE
696.6707FALSE
697.3175FALSE
696.6702FALSE
697.3253FALSE
696.6713FALSE
697.3224FALSE
696.6933FALSE
697.3204FALSE
696.8611FALSE
696.6481FALSE
696.8577FALSE
695.0124FALSE
696.8646FALSE
695.0116FALSE
696.8668FALSE
695.0131FALSE
696.8555FALSE
695.0097FALSE
697.9752FALSE
695.0151FALSE
697.9729FALSE
694.8286FALSE
697.9775FALSE
694.8281FALSE
698.0035FALSE
694.8291FALSE
697.9469FALSE
694.8291FALSE
696.8219FALSE
694.828FALSE
696.8189FALSE
694.7189FALSE
696.825FALSE
694.7186FALSE
696.8298FALSE
694.7191FALSE
696.8141FALSE
694.7193FALSE
696.4454FALSE
694.7184FALSE
696.4427FALSE
694.6534FALSE
696.448FALSE
694.6533FALSE
694.6535FALSE
696.4519FALSE
694.6539FALSE
696.4388FALSE
694.653FALSE
695.0493FALSE
694.6909FALSE
695.0485FALSE
694.6908FALSE
695.0502FALSE
694.6909FALSE
695.0528FALSE
694.688FALSE
695.0459FALSE
694.6938FALSE
694.8288FALSE
694.6405FALSE
694.8284FALSE
694.6404FALSE
694.8292FALSE
694.6406FALSE
694.826FALSE
694.6405FALSE
694.8316FALSE
694.6406FALSE
694.7522FALSE
694.6189FALSE
694.7519FALSE
694.6189FALSE
694.7525FALSE
694.619FALSE
694.7501FALSE
694.6189FALSE
694.619FALSE
694.7544FALSE
694.6047FALSE
694.6618FALSE
694.6047FALSE
694.6617FALSE
694.6047FALSE
694.6619FALSE
694.6051FALSE
694.6641FALSE
694.6043FALSE
694.6595FALSE
694.5969FALSE
694.6302FALSE
694.5968FALSE
694.6302FALSE
694.5969FALSE
694.6303FALSE
694.5968FALSE
694.6307FALSE
694.5969FALSE
694.6298FALSE
694.5934FALSE
694.6108FALSE
694.5934FALSE
694.5935FALSE
694.6107FALSE
694.5934FALSE
694.6108FALSE
694.5935FALSE
694.611FALSE
694.5917FALSE
694.6108FALSE
694.5917FALSE
694.6009FALSE
694.5917FALSE
694.6009FALSE
694.5921FALSE
694.601FALSE
694.5913FALSE
694.6009FALSE
694.5908FALSE
694.601FALSE
694.5908FALSE
694.5956FALSE
694.5908FALSE
694.5956FALSE
694.5907FALSE
694.5956FALSE
694.5908FALSE
694.5903FALSE
694.5955FALSE
694.5903FALSE
694.5957FALSE
694.5903FALSE
694.5923FALSE
694.5902FALSE
694.5923FALSE
694.5903FALSE
694.5923FALSE
694.5897FALSE
694.5923FALSE
694.5897FALSE
694.5924FALSE
694.5897FALSE
694.5899FALSE
694.6441FALSE
694.5898FALSE
694.6441FALSE
694.5896FALSE
694.6441FALSE
694.5896FALSE
694.6465FALSE
694.5896FALSE
694.5896FALSE
694.6418FALSE
694.5897FALSE
694.5922FALSE
694.5895FALSE
694.5922FALSE
694.5895FALSE
694.5923FALSE
694.5895FALSE
694.5925FALSE
694.5896FALSE
694.5895FALSE
694.5894FALSE
694.5911FALSE
694.5911FALSE
694.5894FALSE
694.5911FALSE
694.5894FALSE
694.5912FALSE
694.5895FALSE
694.5912FALSE
694.5895FALSE
694.5894FALSE
694.5902FALSE
694.5894FALSE
694.5902FALSE
694.5894FALSE
694.5902FALSE
694.5895FALSE
694.5903FALSE
694.5895FALSE
694.5902FALSE
694.5894FALSE
694.5898FALSE
694.5894FALSE
694.5898FALSE
694.5894FALSE
694.5898FALSE
694.5895FALSE
694.5899FALSE
694.5895FALSE
694.5899FALSE
694.5894FALSE
694.5894FALSE
694.5896FALSE
694.5894FALSE
694.5896FALSE
694.5895FALSE
694.5896FALSE
694.5895FALSE
694.5897FALSE
694.5894FALSE
694.5897FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5896FALSE
694.5894FALSE
694.5896FALSE
694.5894FALSE
694.603FALSE
694.5894FALSE
694.603FALSE
694.5895FALSE
694.603FALSE
694.5895FALSE
694.6052FALSE
694.5894FALSE
694.5894FALSE
694.6007FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5896FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5896FALSE
694.5894FALSE
694.5896FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5898FALSE
694.5894FALSE
694.5898FALSE
694.5894FALSE
694.5894FALSE
694.5898FALSE
694.5895FALSE
694.5897FALSE
694.5895FALSE
694.5899FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
694.5895FALSE
$par
smooth_log_cases_lag1.bw         time_ind_lag0.bw 
                6.728030                -1.589723 

$value
[1] 694.5894

$counts
function gradient 
      50       50 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
694.5894FALSE
694.5894FALSE
694.5894FALSE
694.5895FALSE
694.5895FALSE
$par
smooth_log_cases_lag0.bw         time_ind_lag0.bw 
                7.261013                -1.589720 

$value
[1] 694.5894

$counts
function gradient 
      53       53 

$convergence
[1] 0

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

> 
> save(ssr_fit,
+     file=paste0("/home/ngr67a/2015-cdc-flu-competition/fit-competition-ssr-ph", prediction_horizon_limit, "-", data_set, ".Rdata"))
> 
> proc.time()
    user   system  elapsed 
1460.915    0.882 1182.376 
